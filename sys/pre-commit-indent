#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to "pre-commit".

tmpfile=$(mktemp)
git diff --cached | ./sys/clang-format-diff.py -p1 > ${tmpfile}

sz=$(wc -c "${tmpfile}" | cut -d" " -f1)
if [ "${sz}" != "0" ] ; then
	echo "Please follow the coding style!"
	echo "Run \`git diff --cached | ./sys/clang-format-diff.py -p1 -i\` to apply the changes listed below"
	echo
	cat ${tmpfile}
	rm ${tmpfile}
	exit 1
fi

dirtyfiles=$(git status --porcelain 2>/dev/null| grep "^[M]M" | wc -l)
if [ "${dirtyfiles}" != 0 ] ; then
	echo "Please add dirty files to git or stash -k them"
	exit 1
fi

rm ${tmpfile}
exit 0
