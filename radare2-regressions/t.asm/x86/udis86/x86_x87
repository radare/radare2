#!/bin/sh
for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

test_vector() {
NAME="${1}: [${2}]"
FILE=malloc://32
if [ "${5}" = "br" ]; then
	BROKEN=1
	if [ -n "${TRAVIS}" ]; then
		unset BROKEN
		return
	fi
fi
CMDS='
e asm.arch='${1}'
e asm.bits=32
wx '${3}'
pi 1
'
EXPECT="${4}
"
run_test
}

PLUGIN=x86.udis

test_vector "${PLUGIN}" "F2XM1" d9f0 "f2xm1"
test_vector "${PLUGIN}" "FABS" d9e1 "fabs"
test_vector "${PLUGIN}" "FADD DWORD [EAX]" d800 "fadd dword [eax]"
test_vector "${PLUGIN}" "FADD QWORD [EAX]" dc00 "fadd qword [eax]"
test_vector "${PLUGIN}" "FADD ST0, ST0" d8c0 "fadd st0, st0"
test_vector "${PLUGIN}" "FADDP ST0, ST0" dec0 "faddp st0, st0"
test_vector "${PLUGIN}" "FBLD TWORD [EAX]" df20 "fbld tword [eax]"
test_vector "${PLUGIN}" "FBSTP TWORD [EAX]" df30 "fbstp tword [eax]"
test_vector "${PLUGIN}" "FCHS" d9e0 "fchs"
# see http://www.rz.uni-karlsruhe.de/rz/docs/VTune/reference/vc87.htm
test_vector "${PLUGIN}" "FNCLEX" dbe2 "fnclex" "br"
test_vector "${PLUGIN}" "FCMOVB ST0, ST0" dac0 "fcmovb st0, st0"
test_vector "${PLUGIN}" "FCMOVBE ST0, ST0" dad0 "fcmovbe st0, st0"
test_vector "${PLUGIN}" "FCMOVE ST0, ST0" dac8 "fcmove st0, st0"
test_vector "${PLUGIN}" "FCMOVNB ST0, ST0" dbc0 "fcmovnb st0, st0"
test_vector "${PLUGIN}" "FCMOVNBE ST0, ST0" dbd0 "fcmovnbe st0, st0"
test_vector "${PLUGIN}" "FCMOVNE ST0, ST0" dbc8 "fcmovne st0, st0"
test_vector "${PLUGIN}" "FCMOVNU ST0, ST0" dbd8 "fcmovnu st0, st0"
test_vector "${PLUGIN}" "FCMOVU ST0, ST0" dad8 "fcmovu st0, st0"
test_vector "${PLUGIN}" "FCOM DWORD [EAX]" d810 "fcom dword [eax]"
test_vector "${PLUGIN}" "FCOM QWORD [EAX]" dc10 "fcom qword [eax]"
test_vector "${PLUGIN}" "FCOM ST0" d8d0 "fcom st0, st0"
test_vector "${PLUGIN}" "FCOMI ST0, ST0" dbf0 "fcomi st0, st0"
test_vector "${PLUGIN}" "FCOMIP ST0, ST0" dff0 "fcomip st0, st0"
test_vector "${PLUGIN}" "FCOMP DWORD [EAX]" d818 "fcomp dword [eax]"
test_vector "${PLUGIN}" "FCOMP QWORD [EAX]" dc18 "fcomp qword [eax]"
test_vector "${PLUGIN}" "FCOMP ST0" d8d8 "fcomp st0, st0"
test_vector "${PLUGIN}" "FCOMPP" ded9 "fcompp"
test_vector "${PLUGIN}" "FCOS" d9ff "fcos"
test_vector "${PLUGIN}" "FDECSTP" d9f6 "fdecstp"
test_vector "${PLUGIN}" "FDIV DWORD [EAX]" d830 "fdiv dword [eax]"
test_vector "${PLUGIN}" "FDIV QWORD [EAX]" dc30 "fdiv qword [eax]"
test_vector "${PLUGIN}" "FDIV ST0, ST0" d8f0 "fdiv st0, st0"
test_vector "${PLUGIN}" "FDIV ST0, ST0" dcf8 "fdiv st0, st0"
test_vector "${PLUGIN}" "FDIVP ST0, ST0" def8 "fdivp st0, st0"
test_vector "${PLUGIN}" "FDIVR DWORD [EAX]" d838 "fdivr dword [eax]"
test_vector "${PLUGIN}" "FDIVR QWORD [EAX]" dc38 "fdivr qword [eax]"
test_vector "${PLUGIN}" "FDIVR ST0, ST0" d8f8 "fdivr st0, st0"
test_vector "${PLUGIN}" "FDIVR ST0, ST0" dcf0 "fdivr st0, st0"
test_vector "${PLUGIN}" "FDIVRP ST0, ST0" def0 "fdivrp st0, st0"
test_vector "${PLUGIN}" "FNENI" dbe0 "fneni"
test_vector "${PLUGIN}" "FFREE ST0" ddc0 "ffree st0"
test_vector "${PLUGIN}" "FFREEP ST0" dfc0 "ffreep st0"
test_vector "${PLUGIN}" "FIADD DWORD [EAX]" da00 "fiadd dword [eax]"
test_vector "${PLUGIN}" "FIADD WORD [EAX]" de00 "fiadd word [eax]"
test_vector "${PLUGIN}" "FICOM DWORD [EAX]" da10 "ficom dword [eax]"
test_vector "${PLUGIN}" "FICOM WORD [EAX]" de10 "ficom word [eax]"
test_vector "${PLUGIN}" "FICOMP DWORD [EAX]" da18 "ficomp dword [eax]"
test_vector "${PLUGIN}" "FICOMP WORD [EAX]" de18 "ficomp word [eax]"
test_vector "${PLUGIN}" "FIDIV DWORD [EAX]" da30 "fidiv dword [eax]"
test_vector "${PLUGIN}" "FIDIV WORD [EAX]" de30 "fidiv word [eax]"
test_vector "${PLUGIN}" "FIDIVR DWORD [EAX]" da38 "fidivr dword [eax]"
test_vector "${PLUGIN}" "FIDIVR WORD [EAX]" de38 "fidivr word [eax]"
test_vector "${PLUGIN}" "FILD DWORD [EAX]" db00 "fild dword [eax]"
test_vector "${PLUGIN}" "FILD QWORD [EAX]" df28 "fild qword [eax]"
test_vector "${PLUGIN}" "FILD WORD [EAX]" df00 "fild word [eax]"
test_vector "${PLUGIN}" "FIMUL DWORD [EAX]" da08 "fimul dword [eax]"
test_vector "${PLUGIN}" "FIMUL WORD [EAX]" de08 "fimul word [eax]"
test_vector "${PLUGIN}" "FINCSTP" d9f7 "fincstp"
test_vector "${PLUGIN}" "FINIT" dbe3 "fninit"
test_vector "${PLUGIN}" "FIST DWORD [EAX]" db10 "fist dword [eax]"
test_vector "${PLUGIN}" "FIST WORD [EAX]" df10 "fist word [eax]"
test_vector "${PLUGIN}" "FISTP DWORD [EAX]" db18 "fistp dword [eax]"
test_vector "${PLUGIN}" "FISTP QWORD [EAX]" df38 "fistp qword [eax]"
test_vector "${PLUGIN}" "FISTP WORD [EAX]" df18 "fistp word [eax]"
test_vector "${PLUGIN}" "FISTTP WORD [EAX]" df08 "fisttp word [eax]"
test_vector "${PLUGIN}" "FISUB DWORD [EAX]" da20 "fisub dword [eax]"
test_vector "${PLUGIN}" "FISUB WORD [EAX]" de20 "fisub word [eax]"
test_vector "${PLUGIN}" "FISUBR DWORD [EAX]" da28 "fisubr dword [eax]"
test_vector "${PLUGIN}" "FISUBR WORD [EAX]" de28 "fisubr word [eax]"
test_vector "${PLUGIN}" "FLD DWORD [EAX]" d900 "fld dword [eax]"
test_vector "${PLUGIN}" "FLD QWORD [EAX]" dd00 "fld qword [eax]"
test_vector "${PLUGIN}" "FLD ST0" d9c0 "fld st0"
test_vector "${PLUGIN}" "FLD TWORD [EAX]" db28 "fld tword [eax]"
test_vector "${PLUGIN}" "FLD1" d9e8 "fld1"
test_vector "${PLUGIN}" "FLDCW WORD [EAX]" d928 "fldcw word [eax]"
test_vector "${PLUGIN}" "FLDENV [EAX]" d920 "fldenv [eax]"
test_vector "${PLUGIN}" "FLDL2E" d9ea "fldl2e"
test_vector "${PLUGIN}" "FLDL2T" d9e9 "fldl2t"
test_vector "${PLUGIN}" "FLDLG2" d9ec "fldlg2"
test_vector "${PLUGIN}" "FLDLN2" d9ed "fldln2"
test_vector "${PLUGIN}" "FLDPI" d9eb "fldpi"
test_vector "${PLUGIN}" "FLDZ" d9ee "fldz"
test_vector "${PLUGIN}" "FMUL DWORD [EAX]" d808 "fmul dword [eax]"
test_vector "${PLUGIN}" "FMUL QWORD [EAX]" dc08 "fmul qword [eax]"
test_vector "${PLUGIN}" "FMUL ST0, st0" d8c8 "fmul st0, st0"
test_vector "${PLUGIN}" "FMUL ST0, st0" dcc8 "fmul st0, st0"
test_vector "${PLUGIN}" "FMULP ST0, st0" dec8 "fmulp st0, st0"
#XXX: broken test! (needs pi 2)
#test_vector "${PLUGIN}" "WAIT; FCLEX" 9bdbe2 "wait\nfclex" "br"
test_vector "${PLUGIN}" "FCLEX" dbe2 "fclex"
test_vector "${PLUGIN}" "FNDISI" dbe1 "fndisi"
#XXX: broken test! (needs pi 2)
#test_vector "${PLUGIN}" "FNINIT" 9bdbe3 "`echo -e 'wait\nfninit'`" "br"
test_vector "${PLUGIN}" "FNOP" d9d0 "fnop"
#XXX: broken test! (needs pi 2)
#test_vector "${PLUGIN}" "FNSAVE [EAX]" 9bdd30 "`echo -e 'wait\nfnsave [eax]'`"
#test_vector "${PLUGIN}" "FNSTCW WORD [EAX]" 9bd938 "`echo -e 'wait\nfnstcw word [eax]'`"
#test_vector "${PLUGIN}" "FNSTENV [EAX]" 9bd930 "`echo -e 'wait\nfnstenv [eax]'`"
#test_vector "${PLUGIN}" "FNSTSW WORD [EAX]" 9bdd38 "`echo -e 'wait\nfnstsw word [eax]'`"
test_vector "${PLUGIN}" "FPATAN" d9f3 "fpatan"
test_vector "${PLUGIN}" "FPREM" d9f8 "fprem"
test_vector "${PLUGIN}" "FPREM1" d9f5 "fprem1"
test_vector "${PLUGIN}" "FPTAN" d9f2 "fptan"
test_vector "${PLUGIN}" "FRNDINT" d9fc "frndint"
test_vector "${PLUGIN}" "FRSTOR [EAX]" dd20 "frstor [eax]"
test_vector "${PLUGIN}" "FSAVE [EAX]" dd30 "fnsave [eax]"
test_vector "${PLUGIN}" "FSCALE" d9fd "fscale"
test_vector "${PLUGIN}" "FNSETPM" dbe4 "fnsetpm"
test_vector "${PLUGIN}" "FSIN" d9fe "fsin"
test_vector "${PLUGIN}" "FSINCOS" d9fb "fsincos"
test_vector "${PLUGIN}" "FSQRT" d9fa "fsqrt"
test_vector "${PLUGIN}" "FST DWORD [EAX]" d910 "fst dword [eax]"
test_vector "${PLUGIN}" "FST QWORD [EAX]" dd10 "fst qword [eax]"
test_vector "${PLUGIN}" "FST ST0" ddd0 "fst st0"
test_vector "${PLUGIN}" "FSTCW WORD [EAX]" d938 "fnstcw word [eax]"
test_vector "${PLUGIN}" "FSTENV [EAX]" d930 "fnstenv [eax]"
test_vector "${PLUGIN}" "FSTP DWORD [EAX]" d918 "fstp dword [eax]"
test_vector "${PLUGIN}" "FSTP QWORD [EAX]" dd18 "fstp qword [eax]"
test_vector "${PLUGIN}" "FSTP ST0" ddd8 "fstp st0"
test_vector "${PLUGIN}" "FSTP TWORD [EAX]" db38 "fstp tword [eax]"
#XXX: broken test! (needs pi 2)
#test_vector "${PLUGIN}" "FSTSW WORD [EAX]" dd38 "`echo -e 'fnstsw word [eax]\nadd [eax], al'`"
test_vector "${PLUGIN}" "FSUB DWORD [EAX]" d820 "fsub dword [eax]"
test_vector "${PLUGIN}" "FSUB QWORD [EAX]" dc20 "fsub qword [eax]"
test_vector "${PLUGIN}" "FSUB ST0, st0" d8e0 "fsub st0, st0"
test_vector "${PLUGIN}" "FSUBP ST0, st0" dee8 "fsubp st0, st0"
test_vector "${PLUGIN}" "FSUBR DWORD [EAX]" d828 "fsubr dword [eax]"
test_vector "${PLUGIN}" "FSUBR QWORD [EAX]" dc28 "fsubr qword [eax]"
test_vector "${PLUGIN}" "FSUBR ST0, st0" d8e8 "fsubr st0, st0"
test_vector "${PLUGIN}" "FSUBRP ST0, st0" dee0 "fsubrp st0, st0"
test_vector "${PLUGIN}" "FTST" d9e4 "ftst"
test_vector "${PLUGIN}" "FUCOM ST0" dde0 "fucom st0"
test_vector "${PLUGIN}" "FUCOMI ST0, st0" dbe8 "fucomi st0, st0"
test_vector "${PLUGIN}" "FUCOMIP ST0" dfe8 "fucomip st0, st0"
test_vector "${PLUGIN}" "FUCOMP ST0" dde8 "fucomp st0"
test_vector "${PLUGIN}" "FUCOMPP" dae9 "fucompp"
test_vector "${PLUGIN}" "FXAM" d9e5 "fxam"
test_vector "${PLUGIN}" "FXCH ST0" d9c8 "fxch st0, st0"
test_vector "${PLUGIN}" "FXTRACT" d9f4 "fxtract"
test_vector "${PLUGIN}" "FYL2X" d9f1 "fyl2x"
test_vector "${PLUGIN}" "FYL2XP1" d9f9 "fyl2xp1"
test_vector "${PLUGIN}" "WAIT" 9b "wait"
test_vector "${PLUGIN}" "FSTP1 ST0" d9d8 "fstp1 st0"
test_vector "${PLUGIN}" "FCOM2" dcd0 "fcom2 st0"
test_vector "${PLUGIN}" "FCOMP3" dcd8 "fcomp3 st0"
test_vector "${PLUGIN}" "FXCH4 ST0" ddc8 "fxch4 st0"
test_vector "${PLUGIN}" "FCOMP5 ST0" ded0 "fcomp5 st0"
test_vector "${PLUGIN}" "FXCH7 ST0" dfc8 "fxch7 st0"
test_vector "${PLUGIN}" "FSTP8 ST0" dfd0 "fstp8 st0"
test_vector "${PLUGIN}" "FSTP9 ST0" dfd8 "fstp9 st0"
test_vector "${PLUGIN}" "NOT DWORD [EAX]" f710 "not dword [eax]"
test_vector "${PLUGIN}" "NEG DWORD [EAX]" f718 "neg dword [eax]"
test_vector "${PLUGIN}" "MUL DWORD [EAX]" f720 "mul dword [eax]"
test_vector "${PLUGIN}" "IMUL DWORD [EAX]" f728 "imul dword [eax]"
test_vector "${PLUGIN}" "DIV DWORD [EAX]" f730 "div dword [eax]"
test_vector "${PLUGIN}" "IDIV DWORD [EAX]" f738 "idiv dword [eax]"
test_vector "${PLUGIN}" "ROL BYTE [EAX], 0X0" c00000 "rol byte [eax], 0x0"
test_vector "${PLUGIN}" "ROR BYTE [EAX], 0X0" c00800 "ror byte [eax], 0x0"
test_vector "${PLUGIN}" "RCL BYTE [EAX], 0X0" c01000 "rcl byte [eax], 0x0"
test_vector "${PLUGIN}" "RCR BYTE [EAX], 0X0" c01800 "rcr byte [eax], 0x0"
test_vector "${PLUGIN}" "SHL BYTE [EAX], 0X0" c02000 "shl byte [eax], 0x0"
test_vector "${PLUGIN}" "SHR BYTE [EAX], 0X0" c02800 "shr byte [eax], 0x0"
test_vector "${PLUGIN}" "SHL" c03000 "shl byte [eax], 0x0"
test_vector "${PLUGIN}" "SAR BYTE [EAX], 0X0" c03800 "sar byte [eax], 0x0"
test_vector "${PLUGIN}" "ROL DWORD [EAX], 0X0" c10000 "rol dword [eax], 0x0"
test_vector "${PLUGIN}" "ROR DWORD [EAX], 0X0" c10800 "ror dword [eax], 0x0"
test_vector "${PLUGIN}" "RCL DWORD [EAX], 0X0" c11000 "rcl dword [eax], 0x0"
test_vector "${PLUGIN}" "RCR DWORD [EAX], 0X0" c11800 "rcr dword [eax], 0x0"
test_vector "${PLUGIN}" "SHL DWORD [EAX], 0X0" c12000 "shl dword [eax], 0x0"
test_vector "${PLUGIN}" "SHR DWORD [EAX], 0X0" c12800 "shr dword [eax], 0x0"
test_vector "${PLUGIN}" "SAL = SHL" c13000 "shl dword [eax], 0x0"
test_vector "${PLUGIN}" "SAR DWORD [EAX], 0X0" c13800 "sar dword [eax], 0x0"
test_vector "${PLUGIN}" "NOP [EAX]" 0f1f00 "nop [eax]"
test_vector "${PLUGIN}" "NOP [ECX]" 0f1f01 "nop [ecx]"
