#!/bin/sh
for a in . .. ../.. ../../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh; done

test_vector() {
NAME="${1}: [${2}]"
FILE=malloc://32
if [ "${5}" = "br" ]; then
	BROKEN=1
	if [ -n "${TRAVIS}" ]; then
		unset BROKEN
		return
	fi
fi
CMDS='
e asm.arch='${1}'
e asm.bits=32
wx '${3}'
pi 1
'
EXPECT="${4}
"
run_test
}

PLUGIN=x86.udis

test_vector "${PLUGIN}" "CWDE" 98 "cwde"
test_vector "${PLUGIN}" "CBW" 6698 "cbw"
test_vector "${PLUGIN}" "CDQ" 99 "cdq"
test_vector "${PLUGIN}" "CWD" 6699 "cwd"
test_vector "${PLUGIN}" "CMC" F5 "cmc"
test_vector "${PLUGIN}" "STC" F9 "stc"
test_vector "${PLUGIN}" "CLC" F8 "clc"
test_vector "${PLUGIN}" "CLI" FA "cli"
test_vector "${PLUGIN}" "STI" FB "sti"
test_vector "${PLUGIN}" "CLD" FC "cld"
test_vector "${PLUGIN}" "STD" FD "std"
test_vector "${PLUGIN}" "SALC" D6 "salc"
test_vector "${PLUGIN}" "XLATB" D7 "xlatb"
test_vector "${PLUGIN}" "LEAVE" C9 "leave"
test_vector "${PLUGIN}" "INT1" F1 "int1"
test_vector "${PLUGIN}" "INT 1" CD01 "int 0x1"
test_vector "${PLUGIN}" "INT3" CC "int3"
test_vector "${PLUGIN}" "INT 3" CD03 "int 0x3"
test_vector "${PLUGIN}" "INTO" CE "into"
test_vector "${PLUGIN}" "IRETD" CF "iretd"
test_vector "${PLUGIN}" "IRETW" 66CF "iretw"
test_vector "${PLUGIN}" "RET" C3 "ret"
test_vector "${PLUGIN}" "RETF 0x0" CA00 "retf 0x0"
test_vector "${PLUGIN}" "RETF" CB "retf"
test_vector "${PLUGIN}" "HLT" F4 "hlt"
test_vector "${PLUGIN}" "LAHF" 9F "lahf"
test_vector "${PLUGIN}" "SAHF" 9E "sahf"
test_vector "${PLUGIN}" "PUSHFD" 9C "pushfd"
test_vector "${PLUGIN}" "POPFD" 9D "popfd"
test_vector "${PLUGIN}" "PUSHAD" 60 "pushad"
test_vector "${PLUGIN}" "POPAD" 61 "popad"
test_vector "${PLUGIN}" "POPA" 6661 "popa"
test_vector "${PLUGIN}" "DAA" 27 "daa"
test_vector "${PLUGIN}" "AAA" 37 "aaa"
test_vector "${PLUGIN}" "DAS" 2F "das"
test_vector "${PLUGIN}" "AAS" 3F "aas"
test_vector "${PLUGIN}" "PUSH EAX" 50 "push eax"
test_vector "${PLUGIN}" "PUSH ECX" 51 "push ecx"
test_vector "${PLUGIN}" "PUSH EDX" 52 "push edx"
test_vector "${PLUGIN}" "PUSH EBX" 53 "push ebx"
test_vector "${PLUGIN}" "PUSH ESP" 54 "push esp"
test_vector "${PLUGIN}" "PUSH EBP" 55 "push ebp"
test_vector "${PLUGIN}" "PUSH ESI" 56 "push esi"
test_vector "${PLUGIN}" "PUSH EDI" 57 "push edi"
test_vector "${PLUGIN}" "POP EAX" 58 "pop eax"
test_vector "${PLUGIN}" "POP ECX" 59 "pop ecx"
test_vector "${PLUGIN}" "POP EDX" 5A "pop edx"
test_vector "${PLUGIN}" "POP EBX" 5B "pop ebx"
test_vector "${PLUGIN}" "POP ESP" 5C "pop esp"
test_vector "${PLUGIN}" "POP EBP" 5D "pop ebp"
test_vector "${PLUGIN}" "POP ESI" 5E "pop esi"
test_vector "${PLUGIN}" "POP EDI" 5F "pop edi"
test_vector "${PLUGIN}" "PUSH DWORD [EAX]" ff30 "push dword [eax]"
test_vector "${PLUGIN}" "POP DWORD [EAX]" 8f00 "pop dword [eax]"
test_vector "${PLUGIN}" "PUSH ES" 06 "push es"
test_vector "${PLUGIN}" "PUSH CS" 0E "push cs"
test_vector "${PLUGIN}" "PUSH SS" 16 "push ss"
test_vector "${PLUGIN}" "PUSH DS" 1E "push ds"
test_vector "${PLUGIN}" "POP ES" 07 "pop es"
test_vector "${PLUGIN}" "POP SS" 17 "pop ss"
test_vector "${PLUGIN}" "POP DS" 1F "pop ds"
test_vector "${PLUGIN}" "PUSH 0" 6a00 "push 0x0"
test_vector "${PLUGIN}" "PUSH FS" 0fa0 "push fs"
test_vector "${PLUGIN}" "POP FS" 0fa1 "pop fs"
test_vector "${PLUGIN}" "PUSH GS" 0fa8 "push gs"
test_vector "${PLUGIN}" "POP GS" 0fa9 "pop gs"
test_vector "${PLUGIN}" "INC EAX" 40 "inc eax"
test_vector "${PLUGIN}" "INC ECX" 41 "inc ecx"
test_vector "${PLUGIN}" "INC EDX" 42 "inc edx"
test_vector "${PLUGIN}" "INC EBX" 43 "inc ebx"
test_vector "${PLUGIN}" "INC ESP" 44 "inc esp"
test_vector "${PLUGIN}" "INC EBP" 45 "inc ebp"
test_vector "${PLUGIN}" "INC ESI" 46 "inc esi"
test_vector "${PLUGIN}" "INC EDI" 47 "inc edi"
test_vector "${PLUGIN}" "DEC EAX" 48 "dec eax"
test_vector "${PLUGIN}" "DEC ECX" 49 "dec ecx"
test_vector "${PLUGIN}" "DEC EDX" 4a "dec edx"
test_vector "${PLUGIN}" "DEC EBX" 4b "dec ebx"
test_vector "${PLUGIN}" "DEC ESP" 4c "dec esp"
test_vector "${PLUGIN}" "DEC EBP" 4d "dec ebp"
test_vector "${PLUGIN}" "DEC ESI" 4e "dec esi"
test_vector "${PLUGIN}" "DEC EDI" 4f "dec edi"
test_vector "${PLUGIN}" "INC BYTE [EAX]" fe00 "inc byte [eax]"
test_vector "${PLUGIN}" "INC DWORD [EAX]" ff00 "inc dword [eax]"
test_vector "${PLUGIN}" "DEC BYTE [EAX]" fe08 "dec byte [eax]"
test_vector "${PLUGIN}" "DEC DWORD [EAX]" ff08 "dec dword [eax]"
test_vector "${PLUGIN}" "SLDT [EAX]" 0f0000 "sldt word [eax]"
test_vector "${PLUGIN}" "STR [EAX]" 0f0008 "str word [eax]"
test_vector "${PLUGIN}" "LLDT [EAX]" 0f0010 "lldt word [eax]"
test_vector "${PLUGIN}" "LLDT AX" 0f00d0 "lldt ax"
test_vector "${PLUGIN}" "LTR [EAX]" 0f0018 "ltr word [eax]"
test_vector "${PLUGIN}" "LTR AX" 0f00d8 "ltr ax"
test_vector "${PLUGIN}" "VERR [EAX]" 0f0020 "verr word [eax]"
test_vector "${PLUGIN}" "VERR AX" 0f00e0 "verr ax"
test_vector "${PLUGIN}" "VERW [EAX]" 0f0028 "verw word [eax]"
test_vector "${PLUGIN}" "VERW AX" 0f00e8 "verw ax"
test_vector "${PLUGIN}" "SGDT [EAX]" 0f0100 "sgdt [eax]"
test_vector "${PLUGIN}" "SIDT [EAX]" 0f0108 "sidt [eax]"
test_vector "${PLUGIN}" "LGDT [EAX]" 0f0110 "lgdt [eax]"
test_vector "${PLUGIN}" "LIDT [EAX]" 0f0118 "lidt [eax]"
test_vector "${PLUGIN}" "SMSW [EAX]" 0f0120 "smsw word [eax]"
test_vector "${PLUGIN}" "LMSW [EAX]" 0f0130 "lmsw word [eax]"
test_vector "${PLUGIN}" "INVLPG [EAX]" 0f0138 "invlpg [eax]"
test_vector "${PLUGIN}" "MOV AL,0" B000 "mov al, 0x0"
test_vector "${PLUGIN}" "MOV CL,0" B100 "mov cl, 0x0"
test_vector "${PLUGIN}" "MOV DL,0" B200 "mov dl, 0x0"
test_vector "${PLUGIN}" "MOV BL,0" B300 "mov bl, 0x0"
test_vector "${PLUGIN}" "MOV AH,0" B400 "mov ah, 0x0"
test_vector "${PLUGIN}" "MOV CH,0" B500 "mov ch, 0x0"
test_vector "${PLUGIN}" "MOV DH,0" B600 "mov dh, 0x0"
test_vector "${PLUGIN}" "MOV BH,0" B700 "mov bh, 0x0"
test_vector "${PLUGIN}" "TEST AL,0" A8 "test al, 0x0"
test_vector "${PLUGIN}" "IN AL,0" E4 "in al, 0x0"
test_vector "${PLUGIN}" "IN EAX,0" E5 "in eax, 0x0"
test_vector "${PLUGIN}" "IN AL,DX" ec "in al, dx"
test_vector "${PLUGIN}" "IN EAX,DX" ed "in eax, dx"
test_vector "${PLUGIN}" "OUT 0X0, AL" E600 "out 0x0, al"
test_vector "${PLUGIN}" "OUT 0X0, EAX" E700 "out 0x0, eax"
test_vector "${PLUGIN}" "OUT DX, AL" ee "out dx, al"
test_vector "${PLUGIN}" "OUT DX, EAX" ef "out dx, eax"
test_vector "${PLUGIN}" "CPUID" 0fa2 "cpuid"
test_vector "${PLUGIN}" "PUSHFS" 0fa0 "push fs"
test_vector "${PLUGIN}" "POP FS" 0fa1 "pop fs"
test_vector "${PLUGIN}" "PUSH GS" 0fa8 "push gs"
test_vector "${PLUGIN}" "POP GS" 0fa9 "pop gs"
test_vector "${PLUGIN}" "INVD" 0f08 "invd"
test_vector "${PLUGIN}" "WBINVD" 0f09 "wbinvd"
test_vector "${PLUGIN}" "VMCALL" 0f01c1 "vmcall" "br"
test_vector "${PLUGIN}" "VMLAUNCH" 0f01c2 "vmlaunch" "br"
test_vector "${PLUGIN}" "VMRESUME" 0f01c3 "vmresume" "br"
test_vector "${PLUGIN}" "VMXOFF" 0f01c4 "vmxoff" "br"
test_vector "${PLUGIN}" "MONITOR" 0f01c8 "monitor"
test_vector "${PLUGIN}" "MWAIT" 0f01c9 "mwait"
test_vector "${PLUGIN}" "XGETBV" 0f01d0 "xgetbv"
test_vector "${PLUGIN}" "XSETBV" 0f01d1 "xsetbv"
test_vector "${PLUGIN}" "VMRUN" 0f01d8 "vmrun"
test_vector "${PLUGIN}" "VMMCALL" 0f01d9 "vmmcall"
test_vector "${PLUGIN}" "VMLOAD" 0f01da "vmload"
test_vector "${PLUGIN}" "VMSAVE" 0f01db "vmsave"
test_vector "${PLUGIN}" "STGI" 0f01dc "stgi"
test_vector "${PLUGIN}" "CLGI" 0f01dd "clgi"
test_vector "${PLUGIN}" "SKINIT" 0f01de "skinit"
test_vector "${PLUGIN}" "INVLPGA" 0f01df "invlpga"
test_vector "${PLUGIN}" "PAUSE" f390 "pause"
test_vector "${PLUGIN}" "RDTSCP" 0f01f9 "rdtscp"
test_vector "${PLUGIN}" "LAR EAX, [EAX]" 0f02 "lar eax, word [eax]"
test_vector "${PLUGIN}" "LSL EAX, [EAX]" 0f03 "lsl eax, word [eax]"
test_vector "${PLUGIN}" "CLTS" 0f06 "clts"
test_vector "${PLUGIN}" "SYSRET" 0f07 "sysret"
test_vector "${PLUGIN}" "EMMS" 0f77 "emms"
test_vector "${PLUGIN}" "FEMMS" 0f0e "femms"
test_vector "${PLUGIN}" "CPUID" 0fa2 "cpuid"
test_vector "${PLUGIN}" "RSM" 0faa "rsm"
test_vector "${PLUGIN}" "UD2" 0f0b "ud2"
test_vector "${PLUGIN}" "GETSEC" 0f37 "getsec"
test_vector "${PLUGIN}" "MOV EAX, CR0" 0f20 "mov eax, cr0" "br"
test_vector "${PLUGIN}" "MOV EAX, DR0" 0f21 "mov eax, dr0" "br"
test_vector "${PLUGIN}" "MOV CR0, EAX" 0f22 "mov cr0, eax" "br"
test_vector "${PLUGIN}" "MOV DR0, EAX" 0f23 "mov dr0, eax" "br"
test_vector "${PLUGIN}" "JO 0x2" 7000 "jo 0x2"
test_vector "${PLUGIN}" "JNO 0x2" 7100 "jno 0x2"
test_vector "${PLUGIN}" "JB 0x2" 7200 "jb 0x2"
test_vector "${PLUGIN}" "JAE 0x2" 7300 "jae 0x2"
test_vector "${PLUGIN}" "JE 0x2" 7400 "je 0x2"
test_vector "${PLUGIN}" "JNZ 0x2" 7500 "jne 0x2"
test_vector "${PLUGIN}" "JBE 0x2" 7600 "jbe 0x2"
test_vector "${PLUGIN}" "JA 0x2" 7700 "ja 0x2"
test_vector "${PLUGIN}" "JS 0x2" 7800 "js 0x2"
test_vector "${PLUGIN}" "JNS 0x2" 7900 "jns 0x2"
test_vector "${PLUGIN}" "JP 0x2" 7a00 "jp 0x2"
test_vector "${PLUGIN}" "JNP 0x2" 7b00 "jnp 0x2"
test_vector "${PLUGIN}" "JL 0x2" 7c00 "jl 0x2"
test_vector "${PLUGIN}" "JGE 0x2" 7d00 "jge 0x2"
test_vector "${PLUGIN}" "JLE 0x2" 7e00 "jle 0x2"
test_vector "${PLUGIN}" "JG 0x2" 7f00 "jg 0x2"
test_vector "${PLUGIN}" "JO 0x6" 0f8000000000 "jo 0x6"
test_vector "${PLUGIN}" "JNO 0x6" 0f8100000000 "jno 0x6"
test_vector "${PLUGIN}" "JB 0x6" 0f8200000000 "jb 0x6"
test_vector "${PLUGIN}" "JAE 0x6" 0f8300000000 "jae 0x6"
test_vector "${PLUGIN}" "JE 0x6" 0f8400000000 "je 0x6"
test_vector "${PLUGIN}" "JNE 0x6" 0f8500000000 "jne 0x6"
test_vector "${PLUGIN}" "JBE 0x6" 0f8600000000 "jbe 0x6"
test_vector "${PLUGIN}" "JA 0x6" 0f8700000000 "ja 0x6"
test_vector "${PLUGIN}" "JS 0x6" 0f8800000000 "js 0x6"
test_vector "${PLUGIN}" "JNS 0x6" 0f8900000000 "jns 0x6"
test_vector "${PLUGIN}" "JP 0x6" 0f8a00000000 "jp 0x6"
test_vector "${PLUGIN}" "JNP 0x6" 0f8b00000000 "jnp 0x6"
test_vector "${PLUGIN}" "JL 0x6" 0f8c00000000 "jl 0x6"
test_vector "${PLUGIN}" "JGE 0x6" 0f8d00000000 "jge 0x6"
test_vector "${PLUGIN}" "JLE 0x6" 0f8e00000000 "jle 0x6"
test_vector "${PLUGIN}" "JG 0x6" 0f8f00000000 "jg 0x6"
test_vector "${PLUGIN}" "SETO [EAX]" 660f9000 "o16 seto byte [eax]"
test_vector "${PLUGIN}" "SETNO [EAX]" 660f9100 "o16 setno byte [eax]"
test_vector "${PLUGIN}" "SETB [EAX]" 660f9200 "o16 setb byte [eax]"
test_vector "${PLUGIN}" "SETAE [EAX]" 660f9300 "o16 setae byte [eax]"
test_vector "${PLUGIN}" "SETE [EAX]" 660f9400 "o16 sete byte [eax]"
test_vector "${PLUGIN}" "SETNE [EAX]" 660f9500 "o16 setne byte [eax]"
test_vector "${PLUGIN}" "SETBE [EAX]" 660f9600 "o16 setbe byte [eax]"
test_vector "${PLUGIN}" "SETA [EAX]" 660f9700 "o16 seta byte [eax]"
test_vector "${PLUGIN}" "SETS [EAX]" 660f9800 "o16 sets byte [eax]"
test_vector "${PLUGIN}" "SETNS [EAX]" 660f9900 "o16 setns byte [eax]"
test_vector "${PLUGIN}" "SETP [EAX]" 660f9a00 "o16 setp byte [eax]"
test_vector "${PLUGIN}" "SETNP [EAX]" 660f9b00 "o16 setnp byte [eax]"
test_vector "${PLUGIN}" "SETL [EAX]" 660f9c00 "o16 setl byte [eax]"
test_vector "${PLUGIN}" "SETGE [EAX]" 660f9d00 "o16 setge byte [eax]"
test_vector "${PLUGIN}" "SETLE [EAX]" 660f9e00 "o16 setle byte [eax]"
test_vector "${PLUGIN}" "SETG [EAX]" 660f9f00 "o16 setg byte [eax]"
test_vector "${PLUGIN}" "CMOVO EAX, [EAX]" 0f4000 "cmovo eax, [eax]"
test_vector "${PLUGIN}" "CMOVNO EAX, [EAX]" 0f4100 "cmovno eax, [eax]"
test_vector "${PLUGIN}" "CMOVB EAX, [EAX]" 0f4200 "cmovb eax, [eax]"
test_vector "${PLUGIN}" "CMOVAE EAX, [EAX]" 0f4300 "cmovae eax, [eax]"
test_vector "${PLUGIN}" "CMOVE EAX, [EAX]" 0f4400 "cmove eax, [eax]"
test_vector "${PLUGIN}" "CMOVNE EAX, [EAX]" 0f4500 "cmovne eax, [eax]"
test_vector "${PLUGIN}" "CMOVBE EAX, [EAX]" 0f4600 "cmovbe eax, [eax]"
test_vector "${PLUGIN}" "CMOVA EAX, [EAX]" 0f4700 "cmova eax, [eax]"
test_vector "${PLUGIN}" "CMOVS EAX, [EAX]" 0f4800 "cmovs eax, [eax]"
test_vector "${PLUGIN}" "CMOVNS EAX, [EAX]" 0f4900 "cmovns eax, [eax]"
test_vector "${PLUGIN}" "CMOVP EAX, [EAX]" 0f4a00 "cmovp eax, [eax]"
test_vector "${PLUGIN}" "CMOVNP EAX, [EAX]" 0f4b00 "cmovnp eax, [eax]"
test_vector "${PLUGIN}" "CMOVL EAX, [EAX]" 0f4c00 "cmovl eax, [eax]"
test_vector "${PLUGIN}" "CMOVGE EAX, [EAX]" 0f4d00 "cmovge eax, [eax]"
test_vector "${PLUGIN}" "CMOVLE EAX, [EAX]" 0f4e00 "cmovle eax, [eax]"
test_vector "${PLUGIN}" "CMOVG EAX, [EAX]" 0f4f00 "cmovg eax, [eax]"
test_vector "${PLUGIN}" "MOV AL, [EAX]" 8a00 "mov al, [eax]"
test_vector "${PLUGIN}" "MOV EAX, [EAX]" 8b00 "mov eax, [eax]"
test_vector "${PLUGIN}" "MOV [EAX], ES" 8c00 "mov [eax], es"
test_vector "${PLUGIN}" "MOV ES, [EAX]" 8e00 "mov es, [eax]"
test_vector "${PLUGIN}" "LEA EAX, [EAX]" 8d00 "lea eax, [eax]"
test_vector "${PLUGIN}" "POP DWORD [EAX]" 8f00 "pop dword [eax]"
test_vector "${PLUGIN}" "NOP" 90 "nop"
test_vector "${PLUGIN}" "XCHG ECX, EAX" 91 "xchg ecx, eax"
test_vector "${PLUGIN}" "XCHG EDX, EAX" 92 "xchg edx, eax"
test_vector "${PLUGIN}" "XCHG EBX, EAX" 93 "xchg ebx, eax"
test_vector "${PLUGIN}" "XCHG ESP, EAX" 94 "xchg esp, eax"
test_vector "${PLUGIN}" "XCHG EBP, EAX" 95 "xchg ebp, eax"
test_vector "${PLUGIN}" "XCHG ESI, EAX" 96 "xchg esi, eax"
test_vector "${PLUGIN}" "XCHG EDI, EAX" 97 "xchg edi, eax"
test_vector "${PLUGIN}" "MOVSB" a4 "movsb"
test_vector "${PLUGIN}" "MOVSD" a5 "movsd"
test_vector "${PLUGIN}" "CMPSB" a6 "cmpsb"
test_vector "${PLUGIN}" "CMPSD" a7 "cmpsd"
test_vector "${PLUGIN}" "STOSB" aa "stosb"
test_vector "${PLUGIN}" "STOSD" ab "stosd"
test_vector "${PLUGIN}" "LODSB" ac "lodsb"
test_vector "${PLUGIN}" "LODSD" ad "lodsd"
test_vector "${PLUGIN}" "SCASB" ae "scasb"
test_vector "${PLUGIN}" "SCASD" af "scasd"
test_vector "${PLUGIN}" "PREFETCH [EAX]" 0f0d00 "prefetch [eax]"
test_vector "${PLUGIN}" "PREFETCHNTA [EAX]" 0f1800 "prefetchnta [eax]"
test_vector "${PLUGIN}" "PREFETCHT0 [EAX]" 0f1808 "prefetcht0 [eax]"
test_vector "${PLUGIN}" "PREFETCHT1 [EAX]" 0f1810 "prefetcht1 [eax]"
test_vector "${PLUGIN}" "PREFETCHT2 [EAX]" 0f1818 "prefetcht2 [eax]"
test_vector "${PLUGIN}" "SYSCALL" 0f05 "syscall"
test_vector "${PLUGIN}" "WRMSR" 0f30 "wrmsr"
test_vector "${PLUGIN}" "RDTSC" 0f31 "rdtsc"
test_vector "${PLUGIN}" "RDMSR" 0f32 "rdmsr"
test_vector "${PLUGIN}" "RDPMC" 0f33 "rdpmc"
test_vector "${PLUGIN}" "SYSENTER" 0f34 "sysenter"
test_vector "${PLUGIN}" "SYSEXIT" 0f35 "sysexit"
test_vector "${PLUGIN}" "CRC32 EAX, BYTE [EAX]" f20f38f0 "crc32 eax, byte [eax]"
test_vector "${PLUGIN}" "CRC32 EAX, [EAX]" f20f38f1 "crc32 eax, [eax]"
test_vector "${PLUGIN}" "BT [EAX], EAX" 0fa300 "bt [eax], eax"
test_vector "${PLUGIN}" "BTS [EAX], EAX" 0fab00 "bts [eax], eax"
test_vector "${PLUGIN}" "BTR [EAX], EAX" 0fb300 "btr [eax], eax"
test_vector "${PLUGIN}" "SHLD [EAX], EAX, 0X0" 0fa40000 "shld [eax], eax, 0x0"
test_vector "${PLUGIN}" "SHLD [EAX], EAX, CL" 0fa500 "shld [eax], eax, cl"
test_vector "${PLUGIN}" "SHRD [EAX], EAX, 0X0" 0fac0000 "shrd [eax], eax, 0x0"
test_vector "${PLUGIN}" "SHRD [EAX], EAX, CL" 0fad00 "shrd [eax], eax, cl"
test_vector "${PLUGIN}" "BSWAP EAX" 0fc8 "bswap eax"
test_vector "${PLUGIN}" "BSWAP ECX" 0fc9 "bswap ecx"
test_vector "${PLUGIN}" "BSWAP EDX" 0fca "bswap edx"
test_vector "${PLUGIN}" "BSWAP EBX" 0fcb "bswap ebx"
test_vector "${PLUGIN}" "BSWAP ESP" 0fcc "bswap esp"
test_vector "${PLUGIN}" "BSWAP EBP" 0fcd "bswap ebp"
test_vector "${PLUGIN}" "BSWAP ESI" 0fce "bswap esi"
test_vector "${PLUGIN}" "BSWAP EDI" 0fcf "bswap edi"
test_vector "${PLUGIN}" "INSB" 6c "insb"
test_vector "${PLUGIN}" "INSD" 6d "insd"
test_vector "${PLUGIN}" "OUTSB" 6e "outsb"
test_vector "${PLUGIN}" "OUTSD" 6f "outsd"
test_vector "${PLUGIN}" "MFENCE" 0faef0 "mfence"
test_vector "${PLUGIN}" "LFENCE" 0faee8 "lfence"
test_vector "${PLUGIN}" "SFENCE" 0faef8 "sfence"
test_vector "${PLUGIN}" "SMSW AX" 660f01e0 "smsw ax"
test_vector "${PLUGIN}" "SMSW EAX" 0f01e0 "smsw eax"
test_vector "${PLUGIN}" "LMSW AX" 0f01f0 "lmsw ax"
test_vector "${PLUGIN}" "FXSAVE [EAX]" 0fae00 "fxsave [eax]"
test_vector "${PLUGIN}" "FXRSTOR [EAX]" 0fae08 "fxrstor [eax]"
test_vector "${PLUGIN}" "LDMXCSR [EAX]" 0fae10 "ldmxcsr dword [eax]"
test_vector "${PLUGIN}" "STMXCSR [EAX]" 0fae18 "stmxcsr dword [eax]"
test_vector "${PLUGIN}" "XSAVE [EAX]" 0fae20 "xsave [eax]"
test_vector "${PLUGIN}" "XRSTOR [EAX]" 0fae28 "xrstor [eax]"
test_vector "${PLUGIN}" "CLFLUSH [EAX]" 0fae38 "clflush [eax]"
test_vector "${PLUGIN}" "TEST BYTE [EAX], 0" f60000 "test byte [eax], 0x0"
test_vector "${PLUGIN}" "TEST BYTE [EAX], 0" f60800 "test byte [eax], 0x0"
test_vector "${PLUGIN}" "NOT BYTE [EAX]" f610 "not byte [eax]"
test_vector "${PLUGIN}" "NEG BYTE [EAX]" f618 "neg byte [eax]"
test_vector "${PLUGIN}" "MUL BYTE [EAX]" f620 "mul byte [eax]"
test_vector "${PLUGIN}" "IMUL BYTE [EAX]" f628 "imul byte [eax]"
test_vector "${PLUGIN}" "DIV BYTE [EAX]" f630 "div byte [eax]"
test_vector "${PLUGIN}" "IDIV BYTE [EAX]" f638 "idiv byte [eax]"
test_vector "${PLUGIN}" "TEST DWORD [EAX], 0" f70000 "test dword [eax], 0x0"
test_vector "${PLUGIN}" "TEST DWORD [EAX], 0" f70800 "test dword [eax], 0x0"
test_vector "${PLUGIN}" "VZEROALL" c5fc77 "vzeroall"
test_vector "${PLUGIN}" "VZEROUPPER" c5f877 "vzeroupper"
test_vector "${PLUGIN}" "MOV [ES:EAX], EAX" 268900 "mov [es:eax], eax"
test_vector "${PLUGIN}" "MOV [CS:EAX], EAX" 2e8900 "mov [cs:eax], eax"
test_vector "${PLUGIN}" "MOV [SS:EAX], EAX" 368900 "mov [ss:eax], eax"
test_vector "${PLUGIN}" "MOV [DS:EAX], EAX" 3e8900 "mov [ds:eax], eax"
test_vector "${PLUGIN}" "MOV [FS:EAX], EAX" 648900 "mov [fs:eax], eax"
test_vector "${PLUGIN}" "MOV [GS:EAX], EAX" 658900 "mov [gs:eax], eax"
test_vector "${PLUGIN}" "FXSAVE [EAX]" 0fae00 "fxsave [eax]"
test_vector "${PLUGIN}" "BOUND EAX, [EAX]" 6200 "bound eax, [eax]"
test_vector "${PLUGIN}" "ARPL [EAX], AX" 6300 "arpl [eax], ax"
test_vector "${PLUGIN}" "CMPXCHG [EAX], AL" 0fb000 "cmpxchg [eax], al"
test_vector "${PLUGIN}" "CMPXCHG [EAX], EAX" 0fb100 "cmpxchg [eax], eax"
test_vector "${PLUGIN}" "CMPXCHG8B [EAX]" 0fc7c0 "cmpxchg8b [eax]" "br"
test_vector "${PLUGIN}" "LOCK CMPXCHG8B [EAX]" f00fc7c0 "lock cmpxchg8b [eax]" "br"
test_vector "${PLUGIN}" "VMPTRLD [EAX]" 0fc730 "vmptrld [eax]" "br"
test_vector "${PLUGIN}" "VMCLEAR [EAX]" 660fc730 "vmclear [eax]" "br"
test_vector "${PLUGIN}" "VMXON [EAX]" f30fc730 "vmxon [eax]" "br"
test_vector "${PLUGIN}" "VMPTRST [EAX]" 0fc738 "vmptrst [eax]" "br"
test_vector "${PLUGIN}" "ADC [EAX], AL" 1000 "adc [eax], al"
test_vector "${PLUGIN}" "ADC [EAX], EAX" 1100 "adc [eax], eax"
test_vector "${PLUGIN}" "ADC AL, [EAX]" 1200 "adc al, [eax]"
test_vector "${PLUGIN}" "ADC EAX, [EAX]" 1300 "adc eax, [eax]"
test_vector "${PLUGIN}" "ADC AL, 0" 1400 "adc al, 0x0"
test_vector "${PLUGIN}" "ADD [EAX], AL" 0000 "add [eax], al"
test_vector "${PLUGIN}" "ADD [EAX], EAX" 0100 "add [eax], eax"
test_vector "${PLUGIN}" "ADD AL, [EAX]" 0200 "add al, [eax]"
test_vector "${PLUGIN}" "ADD EAX, [EAX]" 0300 "add eax, [eax]"
test_vector "${PLUGIN}" "ADD AL, 0" 0400 "add al, 0x0"
test_vector "${PLUGIN}" "ADD BYTE [EAX], 0X0" 800000 "add byte [eax], 0x0"
test_vector "${PLUGIN}" "ADD DWORD [EAX], 0X0" 810000000000 "add dword [eax], 0x0"
test_vector "${PLUGIN}" "ADD BYTE [EAX], 0X0" 820000 "add byte [eax], 0x0"
test_vector "${PLUGIN}" "ADD DWORD [EAX], 0X0" 830000 "add dword [eax], 0x0"
test_vector "${PLUGIN}" "AND [EAX], AL" 2000 "and [eax], al"
test_vector "${PLUGIN}" "AND [EAX], EAX" 2100 "and [eax], eax"
test_vector "${PLUGIN}" "AND AL, [EAX]" 2200 "and al, [eax]"
test_vector "${PLUGIN}" "AND EAX, [EAX]" 2300 "and eax, [eax]"
test_vector "${PLUGIN}" "AND AL, 0" 2400 "and al, 0x0"
test_vector "${PLUGIN}" "CMP [EAX], AL" 3800 "cmp [eax], al"
test_vector "${PLUGIN}" "CMP [EAX], EAX" 3900 "cmp [eax], eax"
test_vector "${PLUGIN}" "CMP AL, [EAX]" 3a00 "cmp al, [eax]"
test_vector "${PLUGIN}" "CMP EAX, [EAX]" 3b00 "cmp eax, [eax]"
test_vector "${PLUGIN}" "CMP AL, 0" 3c00 "cmp al, 0x0"
test_vector "${PLUGIN}" "MOV [EAX], AL" 8800 "mov [eax], al"
test_vector "${PLUGIN}" "MOV [EAX], EAX" 8900 "mov [eax], eax"
test_vector "${PLUGIN}" "MOV AL, [EAX]" 8a00 "mov al, [eax]"
test_vector "${PLUGIN}" "MOV AL, [0X0]" a000000000 "mov al, [0x0]"
test_vector "${PLUGIN}" "MOV EAX, [0X0]" a100000000 "mov eax, [0x0]"
test_vector "${PLUGIN}" "MOV [0X0], AL" a200000000 "mov [0x0], al"
test_vector "${PLUGIN}" "MOV [0X0], EAX" a300000000 "mov [0x0], eax"
test_vector "${PLUGIN}" "MOV AL, 0X0" b000 "mov al, 0x0"
test_vector "${PLUGIN}" "MOV CL, 0X0" b100 "mov cl, 0x0"
test_vector "${PLUGIN}" "MOV DL, 0X0" b200 "mov dl, 0x0"
test_vector "${PLUGIN}" "MOV BL, 0X0" b300 "mov bl, 0x0"
test_vector "${PLUGIN}" "MOV AH, 0X0" b400 "mov ah, 0x0"
test_vector "${PLUGIN}" "MOV CH, 0X0" b500 "mov ch, 0x0"
test_vector "${PLUGIN}" "MOV DH, 0X0" b600 "mov dh, 0x0"
test_vector "${PLUGIN}" "MOV BH, 0X0" b700 "mov bh, 0x0"
test_vector "${PLUGIN}" "MOV EAX, 0X0" b800000000 "mov eax, 0x0"
test_vector "${PLUGIN}" "MOV ECX, 0X0" b900000000 "mov ecx, 0x0"
test_vector "${PLUGIN}" "MOV EDX, 0X0" ba00000000 "mov edx, 0x0"
test_vector "${PLUGIN}" "MOV EBX, 0X0" bb00000000 "mov ebx, 0x0"
test_vector "${PLUGIN}" "MOV ESP, 0X0" bc00000000 "mov esp, 0x0"
test_vector "${PLUGIN}" "MOV EBP, 0X0" bd00000000 "mov ebp, 0x0"
test_vector "${PLUGIN}" "MOV ESI, 0X0" be00000000 "mov esi, 0x0"
test_vector "${PLUGIN}" "MOV EDI, 0X0" bf00000000 "mov edi, 0x0"
test_vector "${PLUGIN}" "OR [EAX], AL" 0800 "or [eax], al"
test_vector "${PLUGIN}" "OR [EAX], EAX" 0900 "or [eax], eax"
test_vector "${PLUGIN}" "OR EAX, [EAX]" 0b00 "or eax, [eax]"
test_vector "${PLUGIN}" "OR AL, 0X0" 0c00 "or al, 0x0"
test_vector "${PLUGIN}" "SBB [EAX], AL" 1800 "sbb [eax], al"
test_vector "${PLUGIN}" "SBB [EAX], EAX" 1900 "sbb [eax], eax"
test_vector "${PLUGIN}" "SBB AL, [EAX]" 1a00 "sbb al, [eax]"
test_vector "${PLUGIN}" "SBB EAX, [EAX]" 1b00 "sbb eax, [eax]"
test_vector "${PLUGIN}" "SBB AL, 0X0" 1c00 "sbb al, 0x0"
test_vector "${PLUGIN}" "SUB [EAX], AL" 2800 "sub [eax], al"
test_vector "${PLUGIN}" "SUB [EAX], EAX" 2900 "sub [eax], eax"
test_vector "${PLUGIN}" "SUB AL, [EAX]" 2a00 "sub al, [eax]"
test_vector "${PLUGIN}" "SUB EAX, [EAX]" 2b00 "sub eax, [eax]"
test_vector "${PLUGIN}" "SUB AL, 0X0" 2c00 "sub al, 0x0"
test_vector "${PLUGIN}" "TEST [EAX], AL" 8400 "test [eax], al"
test_vector "${PLUGIN}" "TEST [EAX], EAX" 8500 "test [eax], eax"
test_vector "${PLUGIN}" "TEST AL, 0X0" a800 "test al, 0x0"
test_vector "${PLUGIN}" "TEST EAX, 0X0" a900000000 "test eax, 0x0"
test_vector "${PLUGIN}" "TEST BYTE [EAX], 0X0" f60000 "test byte [eax], 0x0"
test_vector "${PLUGIN}" "TEST DWORD [EAX], 0X0" f70000000000 "test dword [eax], 0x0"
test_vector "${PLUGIN}" "XCHG [EAX], AL" 8600 "xchg [eax], al"
test_vector "${PLUGIN}" "XCHG [EAX], EAX" 8700 "xchg [eax], eax"
test_vector "${PLUGIN}" "XOR [EAX], AL" 3000 "xor [eax], al"
test_vector "${PLUGIN}" "XOR [EAX], EAX" 3100 "xor [eax], eax"
test_vector "${PLUGIN}" "XOR AL, [EAX]" 3200 "xor al, [eax]"
test_vector "${PLUGIN}" "XOR EAX, [EAX]" 3300 "xor eax, [eax]"
test_vector "${PLUGIN}" "XOR AL, 0" 3400 "xor al, 0x0"
test_vector "${PLUGIN}" "BTC [EAX], EAX" 0fbb00 "btc [eax], eax"
test_vector "${PLUGIN}" "BSF EAX, [EAX]" 0fbc00 "bsf eax, [eax]"
test_vector "${PLUGIN}" "BSR EAX, [EAX]" 0fbd00 "bsr eax, [eax]"
test_vector "${PLUGIN}" "ROL BYTE [EAX], 0X0" c00000 "rol byte [eax], 0x0"
test_vector "${PLUGIN}" "ROL DWORD [EAX], 0X0" c10000 "rol dword [eax], 0x0"
test_vector "${PLUGIN}" "LES EAX, [EAX]" c400 "les eax, [eax]"
test_vector "${PLUGIN}" "LDS EAX, [EAX]" c500 "lds eax, [eax]"
test_vector "${PLUGIN}" "MOV BYTE [EAX], 0X0" c60000 "mov byte [eax], 0x0"
test_vector "${PLUGIN}" "MOV DWORD [EAX], 0X0" c70000000000 "mov dword [eax], 0x0"
test_vector "${PLUGIN}" "ROL BYTE [EAX], CL" d200 "rol byte [eax], cl"
test_vector "${PLUGIN}" "ROL DWORD [EAX], CL" d300 "rol dword [eax], cl"
test_vector "${PLUGIN}" "SHUFPS XMM0, [EAX], 0X0" 0fc60000 "shufps xmm0, [eax], 0x0"
test_vector "${PLUGIN}" "PSUBUSB MM0, [EAX]" 0fd800 "psubusb mm0, [eax]"
test_vector "${PLUGIN}" "PSUBUSW MM0, [EAX]" 0fd900 "psubusw mm0, [eax]"
test_vector "${PLUGIN}" "PAND MM0, [EAX]" 0fdb00 "pand mm0, [eax]"
test_vector "${PLUGIN}" "PANDN MM0, [EAX]" 0fdf00 "pandn mm0, [eax]"
test_vector "${PLUGIN}" "POR MM0, [EAX]" 0feb00 "por mm0, [eax]"
test_vector "${PLUGIN}" "PXOR MM0, [EAX]" 0fef00 "pxor mm0, [eax]"
test_vector "${PLUGIN}" "PADDUSB MM0, [EAX]" 0fdc00 "paddusb mm0, [eax]"
test_vector "${PLUGIN}" "PADDUSW MM0, [EAX]" 0fdd00 "paddusw mm0, [eax]"
test_vector "${PLUGIN}" "PMAXUB MM0, [EAX]" 0fde00 "pmaxub mm0, [eax]"
test_vector "${PLUGIN}" "PMINUB MM0, [EAX]" 0fda00 "pminub mm0, [eax]"
test_vector "${PLUGIN}" "PAVGB MM0, [EAX]" 0fe000 "pavgb mm0, [eax]"
test_vector "${PLUGIN}" "PAVGW MM0, [EAX]" 0fe300 "pavgw mm0, [eax]"
test_vector "${PLUGIN}" "MOVNTQ [EAX], MM0" 0fe700 "movntq [eax], mm0"
test_vector "${PLUGIN}" "MOVNTDQ [EAX], XMM0" 660fe700 "movntdq [eax], xmm0"
test_vector "${PLUGIN}" "PSUBSB MM0, [EAX]" 0fe800 "psubsb mm0, [eax]"
test_vector "${PLUGIN}" "PSUBSW MM0, [EAX]" 0fe900 "psubsw mm0, [eax]"
test_vector "${PLUGIN}" "PMINSW MM0, [EAX]" 0fea00 "pminsw mm0, [eax]"
test_vector "${PLUGIN}" "PMAXSW MM0, [EAX]" 0fee00 "pmaxsw mm0, [eax]"
test_vector "${PLUGIN}" "PADDSB MM0, [EAX]" 0fec00 "paddsb mm0, [eax]"
test_vector "${PLUGIN}" "PADDSW MM0, [EAX]" 0fed00 "paddsw mm0, [eax]"
test_vector "${PLUGIN}" "PSRAW MM0, [EAX]" 0fe100 "psraw mm0, [eax]"
test_vector "${PLUGIN}" "PSRAD MM0, [EAX]" 0fe200 "psrad mm0, [eax]"
test_vector "${PLUGIN}" "PSRAW XMM0, [EAX]" 660fe100 "psraw xmm0, [eax]"
test_vector "${PLUGIN}" "PSRAD XMM0, [EAX]" 660fe200 "psrad xmm0, [eax]"
