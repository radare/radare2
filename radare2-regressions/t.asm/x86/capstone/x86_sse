#!/bin/sh
for a in . .. ../.. ../../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

test_vector() {
NAME="${1}: [${2}]"
FILE=malloc://32
if [ "${5}" = "br" ]; then
	BROKEN=1
	if [ -n "${TRAVIS}" ]; then
		unset BROKEN
		return
	fi
fi
CMDS='
e asm.arch='${1}'
e asm.bits=32
wx '${3}'
pi 1
'
EXPECT="${4}
"
run_test
}


PLUGIN=x86

test_vector "${PLUGIN}" "MULSD" 66f3f20f59ff "mulsd xmm7, xmm7"
test_vector "${PLUGIN}" "MULSS" 66f2f0f59ff "mulss xmm7, xmm7" "br"
test_vector "${PLUGIN}" "MULPD" 660f59ff "mulpd xmm7, xmm7"
test_vector "${PLUGIN}" "MULSD" f2660f59ff "mulsd xmm7, xmm7" "br"
test_vector "${PLUGIN}" "MULPS" 0f59ff "mulps xmm7, xmm7"
test_vector "${PLUGIN}" "MPSADBW XMM0, XMM0, 0" 660f3a42c000 "mpsadbw xmm0, xmm0, 0"
test_vector "${PLUGIN}" "PCMPESTRM XMM0, XMM0, 0" 660f3a60c000 "pcmpestrm xmm0, xmm0, 0"
test_vector "${PLUGIN}" "PCMPESTRI XMM0, XMM0, 0" 660f3a61c000 "pcmpestri xmm0, xmm0, 0"
test_vector "${PLUGIN}" "PCMPISTRM XMM0, XMM0, 0" 660f3a62c000 "pcmpistrm xmm0, xmm0, 0"
test_vector "${PLUGIN}" "PCMPISTRI XMM0, XMM0, 0" 660f3a63c000 "pcmpistri xmm0, xmm0, 0"
test_vector "${PLUGIN}" "ROUNDPS XMM0, XMM0, 0" 660f3a08c000 "roundps xmm0, xmm0, 0"
test_vector "${PLUGIN}" "ROUNDPD XMM0, XMM0, 0" 660f3a09c000 "roundpd xmm0, xmm0, 0"
test_vector "${PLUGIN}" "ROUNDSS XMM0, XMM0, 0" 660f3a0ac000 "roundss xmm0, xmm0, 0"
test_vector "${PLUGIN}" "ROUNDSD XMM0, XMM0, 0" 660f3a0bc000 "roundsd xmm0, xmm0, 0"
test_vector "${PLUGIN}" "BLENDPS XMM0, XMM0, 0" 660f3a0cc000 "blendps xmm0, xmm0, 0"
test_vector "${PLUGIN}" "BLENDPD XMM0, XMM0, 0" 660f3a0dc000 "blendpd xmm0, xmm0, 0"
test_vector "${PLUGIN}" "PBLENDW XMM0, XMM0, 0" 660f3a0ec000 "pblendw xmm0, xmm0, 0"
test_vector "${PLUGIN}" "PALIGNR XMM0, XMM0, 0" 660f3a0fc000 "palignr xmm0, xmm0, 0"
test_vector "${PLUGIN}" "PALIGNR MM0, MM0, 0" 0f3a0fc000 "palignr mm0, mm0, 0"
test_vector "${PLUGIN}" "PSRLW MM0, 0" 0f71d000 "psrlw mm0, 0"
test_vector "${PLUGIN}" "PSRLD MM0, 0" 0f72d000 "psrld mm0, 0"
test_vector "${PLUGIN}" "PSRLQ MM0, 0" 0f73d000 "psrlq mm0, 0"
test_vector "${PLUGIN}" "PSLLW MM0, 0" 0f71f000 "psllw mm0, 0"
test_vector "${PLUGIN}" "PSLLQ MM0, 0" 0f73f000 "psllq mm0, 0"
test_vector "${PLUGIN}" "PSRLW XMM0, 0" 660f71d000 "psrlw xmm0, 0"
test_vector "${PLUGIN}" "PSRLD XMM0, 0" 660f72d000 "psrld xmm0, 0"
test_vector "${PLUGIN}" "PSRLQ XMM0, 0" 660f73d000 "psrlq xmm0, 0"
test_vector "${PLUGIN}" "PSLLW XMM0, 0" 660f71f000 "psllw xmm0, 0"
test_vector "${PLUGIN}" "PSLLD XMM0, 0" 660f72f000 "pslld xmm0, 0"
test_vector "${PLUGIN}" "PSLLQ XMM0, 0" 660f73f000 "psllq xmm0, 0"
test_vector "${PLUGIN}" "PSRLDQ XMM0, 0" 660f73d800 "psrldq xmm0, 0"
test_vector "${PLUGIN}" "PSLLDQ XMM0, 0" 660f73f800 "pslldq xmm0, 0"
test_vector "${PLUGIN}" "SQRTPS XMM0, XMMWORD [EAX]" 0f5100 "sqrtps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "SQRTPD XMM0, XMMWORD [EAX]" 660f5100 "sqrtpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "SQRTSD XMM0, QWORD [EAX]" f20f5100 "sqrtsd xmm0, qword [eax]"
test_vector "${PLUGIN}" "SQRTSS XMM0, DWORD [EAX]" f30f5100 "sqrtss xmm0, dword [eax]"
test_vector "${PLUGIN}" "RSQRTPS XMM0, XMMWORD [EAX]" 0f5200 "rsqrtps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "RSQRTSS XMM0, DWORD [EAX]" f30f5200 "rsqrtss xmm0, dword [eax]"
test_vector "${PLUGIN}" "RCPPS XMM0, XMMWORD [EAX]" 0f5300 "rcpps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "RCPSS XMM0, DWORD [EAX]" f30f5300 "rcpss xmm0, dword [eax]"
test_vector "${PLUGIN}" "ANDPS XMM0, XMMWORD [EAX]" 0f5400 "andps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "ANDNPS XMM0, XMMWORD [EAX]" 0f5500 "andnps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "ANDPD XMM0, XMMWORD [EAX]" 660f54 "andpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "ANDNPD XMM0, XMMWORD [EAX]" 660f55 "andnpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "ORPS XMM0, XMMWORD [EAX]" 0f5600 "orps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "XORPS XMM0, XMMWORD [EAX]" 0f5700 "xorps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "ORPD XMM0, XMMWORD [EAX]" 660f5600 "orpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "XORPD XMM0, XMMWORD [EAX]" 660f5700 "xorpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "ADDPS XMM0, XMMWORD [EAX]" 0f5800 "addps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "SUBPS XMM0, XMMWORD [EAX]" 0f5c00 "subps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MULPS XMM0, XMMWORD [EAX]" 0f5900 "mulps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "DIVPS XMM0, XMMWORD [EAX]" 0f5e00 "divps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "ADDPD XMM0, XMMWORD [EAX]" 660f5800 "addpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "SUBPD XMM0, XMMWORD [EAX]" 660f5c00 "subpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MULPD XMM0, XMMWORD [EAX]" 660f5900 "mulpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "DIVPD XMM0, XMMWORD [EAX]" 660f5e00 "divpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MINPS XMM0, XMMWORD [EAX]" 0f5d00 "minps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MAXPS XMM0, XMMWORD [EAX]" 0f5f00 "maxps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MINPD XMM0, XMMWORD [EAX]" 660f5d00 "minpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MAXPD XMM0, XMMWORD [EAX]" 660f5f00 "maxpd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MINSD XMM0, QWORD [EAX]" f20f5d00 "minsd xmm0, qword [eax]"
test_vector "${PLUGIN}" "MAXSD XMM0, QWORD [EAX]" f20f5f00 "maxsd xmm0, qword [eax]"
test_vector "${PLUGIN}" "MINSS XMM0, DWORD [EAX]" f30f5d00 "minss xmm0, dword [eax]"
test_vector "${PLUGIN}" "MAXSS XMM0, DWORD [EAX]" f30f5f00 "maxss xmm0, dword [eax]"
test_vector "${PLUGIN}" "PUNPCKLBW MM0, QWORD [EAX]" 0f6000 "punpcklbw mm0, qword [eax]"
test_vector "${PLUGIN}" "PUNPCKLWD MM0, QWORD [EAX]" 0f6100 "punpcklwd mm0, qword [eax]"
test_vector "${PLUGIN}" "PUNPCKLDQ MM0, QWORD [EAX]" 0f6200 "punpckldq mm0, qword [eax]"
test_vector "${PLUGIN}" "PUNPCKLBW XMM0, XMMWORD [EAX]" 660f6000 "punpcklbw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PUNPCKLWD XMM0, XMMWORD [EAX]" 660f6100 "punpcklwd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PUNPCKLDQ XMM0, XMMWORD [EAX]" 660f6200 "punpckldq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PACKSSWB MM0, QWORD [EAX]" 0f6300 "packsswb mm0, qword [eax]"
test_vector "${PLUGIN}" "PACKUSWB MM0, QWORD [EAX]" 0f6700 "packuswb mm0, qword [eax]"
test_vector "${PLUGIN}" "PACKSSWB XMM0, QWORD [EAX]" 660f6300 "packsswb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PACKUSWB XMM0, XMMWORD [EAX]" 660f6700 "packuswb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PCMPGTB MM0, QWORD [EAX]" 0f6400 "pcmpgtb mm0, qword [eax]"
test_vector "${PLUGIN}" "PCMPGTW MM0, QWORD [EAX]" 0f6500 "pcmpgtw mm0, qword [eax]"
test_vector "${PLUGIN}" "PCMPGTD MM0, QWORD [EAX]" 0f6600 "pcmpgtd mm0, qword [eax]"
test_vector "${PLUGIN}" "PCMPGTB XMM0, XMMWORD [EAX]" 660f6400 "pcmpgtb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PCMPGTW XMM0, XMMWORD [EAX]" 660f6500 "pcmpgtw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PCMPGTD XMM0, XMMWORD [EAX]" 660f6600 "pcmpgtd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PUNPCKHBW MM0, QWORD [EAX]" 0f6800 "punpckhbw mm0, qword [eax]"
test_vector "${PLUGIN}" "PUNPCKHWD MM0, QWORD [EAX]" 0f6900 "punpckhwd mm0, qword [eax]"
test_vector "${PLUGIN}" "PUNPCKHDQ MM0, QWORD [EAX]" 0f6a00 "punpckhdq mm0, qword [eax]"
test_vector "${PLUGIN}" "PUNPCKHBW XMM0, XMMWORD [EAX]" 660f6800 "punpckhbw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PUNPCKHWD XMM0, XMMWORD [EAX]" 660f6900 "punpckhwd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PUNPCKHDQ XMM0, XMMWORD [EAX]" 660f6a00 "punpckhdq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PACKSSDW MM0, XMMWORD [EAX]" 0f6b00 "packssdw mm0, qword [eax]"
test_vector "${PLUGIN}" "PACKSSDW XMM0, QWORD [EAX]" 660f6b00 "packssdw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSHUFB MM0, QWORD [EAX]" 0f380000 "pshufb mm0, qword [eax]"
test_vector "${PLUGIN}" "PSHUFW MM0, QWORD [EAX], 0" 0f700000 "pshufw mm0, qword [eax], 0"
test_vector "${PLUGIN}" "PSHUFB XMM0, XMMWORD [EAX]" 660f380000 "pshufb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSHUFD XMM0, XMMWORD [EAX], 0" 660f700000 "pshufd xmm0, xmmword [eax], 0"
test_vector "${PLUGIN}" "PSHUFLW XMM0, XMMWORD [EAX], 0" f20f700000 "pshuflw xmm0, xmmword [eax], 0"
test_vector "${PLUGIN}" "PSHUFHW XMM0, XMMWORD [EAX], 0" f30f700000 "pshufhw xmm0, xmmword [eax], 0"
test_vector "${PLUGIN}" "PCMPEQB MM0, QWORD [EAX]" 0f7400 "pcmpeqb mm0, qword [eax]"
test_vector "${PLUGIN}" "PCMPEQW MM0, QWORD [EAX]" 0f7500 "pcmpeqw mm0, qword [eax]"
test_vector "${PLUGIN}" "PCMPEQD MM0, QWORD [EAX]" 0f7600 "pcmpeqd mm0, qword [eax]"
test_vector "${PLUGIN}" "PCMPEQB XMM0, XMMWORD [EAX]" 660f7400 "pcmpeqb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PCMPEQW XMM0, XMMWORD [EAX]" 660f7500 "pcmpeqw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PCMPEQD XMM0, XMMWORD [EAX]" 660f7600 "pcmpeqd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MOVD MM0, DWORD XMMWORD [EAX]" 0f6e00 "movd mm0, dword [eax]"
test_vector "${PLUGIN}" "MOVQ MM0, QWORD [EAX]" 0f6f00 "movq mm0, qword [eax]"
test_vector "${PLUGIN}" "MOVD DWORD XMMWORD [EAX], MM0" 0f7e00 "movd dword [eax], mm0"
test_vector "${PLUGIN}" "MOVQ QWORD [EAX], MM0" 0f7f00 "movq qword [eax], mm0"
test_vector "${PLUGIN}" "MOVD XMM0, DWORD [EAX]" 660f6e00 "movd xmm0, dword [eax]"
test_vector "${PLUGIN}" "MOVDQA XMM0, XMMWORD [EAX]" 660f6f00 "movdqa xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MOVD DWORD [EAX], XMM0" 660f7e00 "movd dword [eax], xmm0"
test_vector "${PLUGIN}" "MOVDQA XMMWORD [EAX], XMM0" 660f7f00 "movdqa xmmword [eax], xmm0"
test_vector "${PLUGIN}" "MOVDQU XMM0, XMMWORD [EAX]" f30f6f00 "movdqu xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MOVQ XMM0, QWORD [EAX]" f30f7e00 "movq xmm0, qword [eax]"
test_vector "${PLUGIN}" "MOVDQU XMMWORD [EAX], XMM0" f30f7f00 "movdqu xmmword [eax], xmm0"
test_vector "${PLUGIN}" "PMOVSXBW XMM0, XMM0" 660f3820c0 "pmovsxbw xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVSXBD XMM0, XMM0" 660f3821c0 "pmovsxbd xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVSXBQ XMM0, XMM0" 660f3822c0 "pmovsxbq xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVSXWD XMM0, XMM0" 660f3823c0 "pmovsxwd xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVSXWQ XMM0, XMM0" 660f3824c0 "pmovsxwq xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVSXDQ XMM0, XMM0" 660f3825c0 "pmovsxdq xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVZXBW XMM0, XMM0" 660f3830c0 "pmovzxbw xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVZXBD XMM0, XMM0" 660f3831c0 "pmovzxbd xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVZXBQ XMM0, XMM0" 660f3832c0 "pmovzxbq xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVZXWD XMM0, XMM0" 660f3833c0 "pmovzxwd xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVZXWQ XMM0, XMM0" 660f3834c0 "pmovzxwq xmm0, xmm0"
test_vector "${PLUGIN}" "PMOVZXDQ XMM0, XMM0" 660f3835c0 "pmovzxdq xmm0, xmm0"
test_vector "${PLUGIN}" "PMINSB XMM0, XMM0" 660f3838c0 "pminsb xmm0, xmm0"
test_vector "${PLUGIN}" "PMINSD XMM0, XMM0" 660f3839c0 "pminsd xmm0, xmm0"
test_vector "${PLUGIN}" "PMINUW XMM0, XMM0" 660f383ac0 "pminuw xmm0, xmm0"
test_vector "${PLUGIN}" "PMINUD XMM0, XMM0" 660f383bc0 "pminud xmm0, xmm0"
test_vector "${PLUGIN}" "PMAXSB XMM0, XMM0" 660f383cc0 "pmaxsb xmm0, xmm0"
test_vector "${PLUGIN}" "PMAXSD XMM0, XMM0" 660f383dc0 "pmaxsd xmm0, xmm0"
test_vector "${PLUGIN}" "PMAXUW XMM0, XMM0" 660f383ec0 "pmaxuw xmm0, xmm0"
test_vector "${PLUGIN}" "PMAXUD XMM0, XMM0" 660f383fc0 "pmaxud xmm0, xmm0"
test_vector "${PLUGIN}" "PSIGNB XMM0, XMM0" 660f3808c0 "psignb xmm0, xmm0"
test_vector "${PLUGIN}" "PSIGNW XMM0, XMM0" 660f3809c0 "psignw xmm0, xmm0"
test_vector "${PLUGIN}" "PSIGND XMM0, XMM0" 660f380ac0 "psignd xmm0, xmm0"
test_vector "${PLUGIN}" "PMULHRSW XMM0, XMM0" 660f380bc0 "pmulhrsw xmm0, xmm0"
test_vector "${PLUGIN}" "PABSB XMM0, XMM0" 660f381cc0 "pabsb xmm0, xmm0"
test_vector "${PLUGIN}" "PABSW XMM0, XMM0" 660f381dc0 "pabsw xmm0, xmm0"
test_vector "${PLUGIN}" "PABSD XMM0, XMM0" 660f381ec0 "pabsd xmm0, xmm0"
test_vector "${PLUGIN}" "PMULDQ XMM0, XMM0" 660f3828c0 "pmuldq xmm0, xmm0"
test_vector "${PLUGIN}" "PCMPEQQ XMM0, XMM0" 660f3829c0 "pcmpeqq xmm0, xmm0"
test_vector "${PLUGIN}" "MOVNTDQA XMM0, XMMWORD [EAX]" 660f382a00 "movntdqa xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PACKUSDW XMM0, XMM0" 660f382bc0 "packusdw xmm0, xmm0"
test_vector "${PLUGIN}" "EXTRACTPS EAX, XMM0, 0" 660f3a17c000 "extractps eax, xmm0, 0"
test_vector "${PLUGIN}" "PINSRB XMM0, EAX, 0" 660f3a20c000 "pinsrb xmm0, eax, 0"
test_vector "${PLUGIN}" "INSERTPS XMM0, XMM0, 0" 660f3a21c000 "insertps xmm0, xmm0, 0"
test_vector "${PLUGIN}" "DPPS XMM0, XMM0, 0" 660f3a40c000 "dpps xmm0, xmm0, 0"
test_vector "${PLUGIN}" "DPPD XMM0, XMM0, 0" 660f3a41c000 "dppd xmm0, xmm0, 0"
test_vector "${PLUGIN}" "PSLLD MM0, 0" 0f72f000 "pslld mm0, 0"
test_vector "${PLUGIN}" "MOVUPS XMM0, XMMWORD [EAX]" 0f10 "movups xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MOVUPS XMMWORD [EAX], XMM0" 0f11 "movups xmmword [eax], xmm0"
test_vector "${PLUGIN}" "UNPCKLPS XMM0, XMMWORD [EAX]" 0f14 "unpcklps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "UNPCKHPS XMM0, XMMWORD [EAX]" 0f15 "unpckhps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MOVLPS XMM0, QWORD [EAX]" 0f12 "movlps xmm0, qword [eax]"
test_vector "${PLUGIN}" "MOVLPS QWORD [EAX], XMM0" 0f13 "movlps qword [eax], xmm0"
test_vector "${PLUGIN}" "MOVHLPS XMM0, XMM0" 0f12 "movhlps xmm0, xmm0" "br"
test_vector "${PLUGIN}" "MOVLHPS XMM0, XMM0" 0f16 "movlhps xmm0, xmm0" "br"
test_vector "${PLUGIN}" "MOVHPS XMM0, QWORD [EAX]" 0f16 "movhps xmm0, qword [eax]"
test_vector "${PLUGIN}" "MOVHPS QWORD [EAX], XMM0" 0f17 "movhps qword [eax], xmm0"
test_vector "${PLUGIN}" "MOVMSKPS EAX, XMM0" 0f50c0 "movmskps eax, xmm0"
test_vector "${PLUGIN}" "MOVMSKPD EAX, XMM0" 660f50c0 "movmskpd eax, xmm0"
test_vector "${PLUGIN}" "VFMSUBPD XMM0, XMM0, XMM0, XMM0" c4e3796dc000 "vfmsubpd xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFMSUBPS XMM0, XMM0, XMM0, XMM0" c4e3796cc000 "vfmsubps xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFMSUBSD XMM0, XMM0, XMM0, XMM0" c4e3796fc000 "vfmsubsd xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFMSUBSS XMM0, XMM0, XMM0, XMM0" c4e3796ec000 "vfmsubss xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMADDPD XMM0, XMM0, XMM0, XMM0" c4e37979c000 "vfnmaddpd xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMADDPS XMM0, XMM0, XMM0, XMM0" c4e37978c000 "vfnmaddps xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMADDSD XMM0, XMM0, XMM0, XMM0" c4e3797bc000 "vfnmaddsd xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMADDSS XMM0, XMM0, XMM0, XMM0" c4e3797ac000 "vfnmaddss xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMADDPD YMM0, YMM0, YMM0, YMM0" c4e37d79c000 "vfnmaddpd ymm0, ymm0, ymm0, ymm0"
test_vector "${PLUGIN}" "VFNMADDPS YMM0, YMM0, YMM0, YMM0" c4e37d78c000 "vfnmaddps ymm0, ymm0, ymm0, ymm0"
test_vector "${PLUGIN}" "VFNMSUBPD XMM0, XMM0, XMM0, XMM0" c4e3797dc000 "vfnmsubpd xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMSUBPS XMM0, XMM0, XMM0, XMM0" c4e3797cc000 "vfnmsubps xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMSUBSD XMM0, XMM0, XMM0, XMM0" c4e3797fc000 "vfnmsubsd xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMSUBSS XMM0, XMM0, XMM0, XMM0" c4e3797ec000 "vfnmsubss xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMSUBPD YMM0, YMM0, YMM0, YMM0" c4e37d7dc000 "vfnmsubpd ymm0, ymm0, ymm0, ymm0"
test_vector "${PLUGIN}" "VFNMSUBPS YMM0, YMM0, YMM0, YMM0" c4e37d7cc000 "vfnmsubps ymm0, ymm0, ymm0, ymm0"
test_vector "${PLUGIN}" "VFNMSUBSS XMM0, XMM0, XMM0, XMM0" c4e3797ec000 "vfnmsubss xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "VFNMSUBSD XMM0, XMM0, XMM0, XMM0" c4e3797fc000 "vfnmsubsd xmm0, xmm0, xmm0, xmm0"
test_vector "${PLUGIN}" "MOVSD XMM0, XMMWORD [EAX]" f20f1000 "movsd xmm0, qword [eax]"
test_vector "${PLUGIN}" "MOVSD QWORD [EAX], XMM0" f20f1100 "movsd qword [eax], xmm0"
test_vector "${PLUGIN}" "MOVDDUP XMM0, QWORD [EAX]" f20f1200 "movddup xmm0, qword [eax]"
test_vector "${PLUGIN}" "CVTPS2PD XMM0, QWORD [EAX]" 0f5a00 "cvtps2pd xmm0, qword [eax]"
test_vector "${PLUGIN}" "CVTPD2PS XMM0, XMMWORD [EAX]" 660f5a00 "cvtpd2ps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "CVTSD2SS XMM0, QWORD [EAX]" f20f5a00 "cvtsd2ss xmm0, qword [eax]"
test_vector "${PLUGIN}" "CVTSS2SD XMM0, DWORD [EAX]" f30f5a00 "cvtss2sd xmm0, dword [eax]"
test_vector "${PLUGIN}" "CVTDQ2PS XMM0, XMMWORD [EAX]" 0f5b00 "cvtdq2ps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "CVTPS2DQ XMM0, XMMWORD [EAX]" 660f5b00 "cvtps2dq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "CVTTPS2DQ XMM0, XMMWORD [EAX]" f30f5b00 "cvttps2dq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "CVTTPD2DQ XMM0, XMMWORD [EAX]" 660fe600 "cvttpd2dq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "CVTPD2DQ XMM0, XMMWORD [EAX]" f20fe600 "cvtpd2dq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "CVTDQ2PD XMM0, DWORD [EAX]" f30fe600 "cvtdq2pd xmm0, qword [eax]"
test_vector "${PLUGIN}" "CVTTPS2PI MM0, QWORD [EAX]" 0f2c00 "cvttps2pi mm0, qword [eax]"
test_vector "${PLUGIN}" "CVTTPD2PI MM0, XMMWORD [EAX]" 660f2c00 "cvttpd2pi mm0, xmmword [eax]"
test_vector "${PLUGIN}" "CVTTSD2SI EAX, QWORD [EAX]" f20f2c00 "cvttsd2si eax, qword [eax]"
test_vector "${PLUGIN}" "CVTTSS2SI EAX, DWORD [EAX]" f30f2c00 "cvttss2si eax, dword [eax]"
test_vector "${PLUGIN}" "CVTPI2PS XMM0, QWORD [EAX]" 0f2a00 "cvtpi2ps xmm0, qword [eax]"
test_vector "${PLUGIN}" "CVTPI2PD XMM0, QWORD [EAX]" 660f2a00 "cvtpi2pd xmm0, qword [eax]"
test_vector "${PLUGIN}" "CVTSI2SD XMM0, dword XMMWORD [EAX]" f20f2a00 "cvtsi2sd xmm0, dword [eax]"
test_vector "${PLUGIN}" "CVTSI2SS XMM0, dword XMMWORD [EAX]" f30f2a00 "cvtsi2ss xmm0, dword [eax]"
test_vector "${PLUGIN}" "CVTPS2PI MM0, QWORD [EAX]" 0f2d00 "cvtps2pi mm0, qword [eax]"
test_vector "${PLUGIN}" "CVTSD2SI EAX, QWORD [EAX]" f20f2d00 "cvtsd2si eax, qword [eax]"
test_vector "${PLUGIN}" "CVTSS2SI EAX, DWORD [EAX]" f30f2d00 "cvtss2si eax, dword [eax]"
test_vector "${PLUGIN}" "CVTPD2PI MM0, XMMWORD [EAX]" 660f2d00 "cvtpd2pi mm0, xmmword [eax]"
test_vector "${PLUGIN}" "MOVAPS XMM0, XMMWORD [EAX]" 0f2800 "movaps xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "MOVAPS XMMWORD [EAX], XMM0" 0f2900 "movaps xmmword [eax], xmm0"
test_vector "${PLUGIN}" "MOVNTPS XMMWORD [EAX], XMM0" 0f2b00 "movntps xmmword [eax], xmm0"
test_vector "${PLUGIN}" "MOVNTPD XMMWORD [EAX], XMM0" 660f2b00 "movntpd xmmword [eax], xmm0"
test_vector "${PLUGIN}" "UCOMISS XMM0, DWORD [EAX]" 0f2e00 "ucomiss xmm0, dword [eax]"
test_vector "${PLUGIN}" "COMISS XMM0, XMMWORD [EAX]" 0f2f00 "comiss xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "UCOMISD XMM0, QWORD [EAX]" 660f2e00 "ucomisd xmm0, qword [eax]"
test_vector "${PLUGIN}" "COMISD XMM0, XMMWORD [EAX]" 660f2f00 "comisd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSUBB MM0, QWORD [EAX]" 0ff800 "psubb mm0, qword [eax]"
test_vector "${PLUGIN}" "PSUBW MM0, QWORD [EAX]" 0ff900 "psubw mm0, qword [eax]"
test_vector "${PLUGIN}" "PSUBD MM0, QWORD [EAX]" 0ffa00 "psubd mm0, qword [eax]"
test_vector "${PLUGIN}" "PSUBQ MM0, QWORD [EAX]" 0ffb00 "psubq mm0, qword [eax]"
test_vector "${PLUGIN}" "PADDB MM0, QWORD [EAX]" 0ffc00 "paddb mm0, qword [eax]"
test_vector "${PLUGIN}" "PADDW MM0, QWORD [EAX]" 0ffd00 "paddw mm0, qword [eax]"
test_vector "${PLUGIN}" "PADDD MM0, QWORD [EAX]" 0ffe00 "paddd mm0, qword [eax]"
test_vector "${PLUGIN}" "PSRLW MM0, QWORD [EAX]" 0fd100 "psrlw mm0, qword [eax]"
test_vector "${PLUGIN}" "PSRLD MM0, QWORD [EAX]" 0fd200 "psrld mm0, qword [eax]"
test_vector "${PLUGIN}" "PSRLQ MM0, QWORD [EAX]" 0fd300 "psrlq mm0, qword [eax]"
test_vector "${PLUGIN}" "PSRLW XMM0, XMMWORD [EAX]" 660fd100 "psrlw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSRLD XMM0, XMMWORD [EAX]" 660fd200 "psrld xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSRLQ XMM0, XMMWORD [EAX]" 660fd300 "psrlq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSLLW MM0, QWORD [EAX]" 0ff100 "psllw mm0, qword [eax]"
test_vector "${PLUGIN}" "PSLLD MM0, QWORD [EAX]" 0ff200 "pslld mm0, qword [eax]"
test_vector "${PLUGIN}" "PSLLQ MM0, QWORD [EAX]" 0ff300 "psllq mm0, qword [eax]"
test_vector "${PLUGIN}" "PSLLW XMM0, XMMWORD [EAX]" 660ff100 "psllw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSLLD XMM0, XMMWORD [EAX]" 660ff200 "pslld xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSLLQ XMM0, XMMWORD [EAX]" 660ff300 "psllq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PMULLW MM0, QWORD [EAX]" 0fd500 "pmullw mm0, qword [eax]"
test_vector "${PLUGIN}" "PMULLW XMM0, XMMWORD [EAX]" 660fd500 "pmullw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PMULHUW MM0, QWORD [EAX]" 0fe400 "pmulhuw mm0, qword [eax]"
test_vector "${PLUGIN}" "PMULHUW XMM0, XMMWORD [EAX]" 660fe400 "pmulhuw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PMULHW MM0, QWORD [EAX]" 0fe500 "pmulhw mm0, qword [eax]"
test_vector "${PLUGIN}" "PMULHW XMM0, XMMWORD [EAX]" 660fe500 "pmulhw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PMULUDQ MM0, QWORD [EAX]" 0ff400 "pmuludq mm0, qword [eax]"
test_vector "${PLUGIN}" "PMULUDQ XMM0, XMMWORD [EAX]" 660ff400 "pmuludq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PMADDWD MM0, QWORD [EAX]" 0ff500 "pmaddwd mm0, qword [eax]"
test_vector "${PLUGIN}" "PMADDWD XMM0, XMMWORD [EAX]" 660ff500 "pmaddwd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSADBW MM0, QWORD [EAX]" 0ff600 "psadbw mm0, qword [eax]"
test_vector "${PLUGIN}" "PSADBW XMM0, XMMWORD [EAX]" 660ff600 "psadbw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSUBUSB XMM0, XMMWORD [EAX]" 660fd800 "psubusb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSUBUSW XMM0, XMMWORD [EAX]" 660fd900 "psubusw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PMINUB XMM0, XMMWORD [EAX]" 660fda00 "pminub xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PMAXUB XMM0, XMMWORD [EAX]" 660fde00 "pmaxub xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PAND XMM0, XMMWORD [EAX]" 660fdb00 "pand xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PANDN XMM0, XMMWORD [EAX]" 660fdf00 "pandn xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PADDUSB XMM0, XMMWORD [EAX]" 660fdc00 "paddusb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PADDUSW XMM0, XMMWORD [EAX]" 660fdd00 "paddusw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PAVGB XMM0, XMMWORD [EAX]" 660fe000 "pavgb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PAVGW XMM0, XMMWORD [EAX]" 660fe300 "pavgw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSUBSB XMM0, XMMWORD [EAX]" 660fe800 "psubsb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSUBSW XMM0, XMMWORD [EAX]" 660fe900 "psubsw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PMINSW XMM0, XMMWORD [EAX]" 660fea00 "pminsw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PMAXSW XMM0, XMMWORD [EAX]" 660fee00 "pmaxsw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "POR XMM0, XMMWORD [EAX]" 660feb00 "por xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PADDSB XMM0, XMMWORD [EAX]" 660fec00 "paddsb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PADDSW XMM0, XMMWORD [EAX]" 660fed00 "paddsw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PXOR XMM0, XMMWORD [EAX]" 660fef00 "pxor xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSUBB XMM0, XMMWORD [EAX]" 660ff800 "psubb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSUBW XMM0, XMMWORD [EAX]" 660ff900 "psubw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSUBD XMM0, XMMWORD [EAX]" 660ffa00 "psubd xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PSUBQ XMM0, XMMWORD [EAX]" 660ffb00 "psubq xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PADDB XMM0, XMMWORD [EAX]" 660ffc00 "paddb xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PADDW XMM0, XMMWORD [EAX]" 660ffd00 "paddw xmm0, xmmword [eax]"
test_vector "${PLUGIN}" "PADDD XMM0, XMMWORD [EAX]" 660ffe00 "paddd xmm0, xmmword [eax]"
