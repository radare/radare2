#!/bin/sh
for a in . .. ../.. ../../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh; done


test_vector() {
NAME="${1} ${BITS}: [${2}]"
if [ "${4}" = "br" ]; then
    BROKEN=1
fi
CMDS='!rasm2 -a '${1}' -b '${BITS}' "'${2}'"
'
EXPECT="${3}
"
run_test
}

PLUGIN=x86.ks

# NOTE:
# Some instructions are assembled correctly, but there is a more
# efficient (== less bytes) way to assemble them. These are marked with
# comments starting with "cbs:" (Same, But Shorter).
#
# Also, there are instructions that are technically not assembled correctly,
# but the generated bytecode does exactly the same. E.g. "xchg ebx,ecx" is
# assembled as "87d9", which is "xchg ecx, ebx" - it's not the same, but does
# exactly the same. These instructions are accepted as correct, but marked with
# comments starting with "wbs" (Wrong, But Same).

BITS=32
test_vector "${PLUGIN}" "aaa" 37 "br"
test_vector "${PLUGIN}" "aad" d50a "br" # This instruction doesn't seem to need arguments
test_vector "${PLUGIN}" "aam" d40a "br" # This instruction doesn't seem to need arguments
test_vector "${PLUGIN}" "aas" 3F "br"
test_vector "${PLUGIN}" "adc al, 0" 1400 "br"
test_vector "${PLUGIN}" "adc al, byte [eax]" 1200 "br"
test_vector "${PLUGIN}" "adc byte [eax], al" 1000 "br"
test_vector "${PLUGIN}" "adc dword [eax], eax" 1100 "br"
test_vector "${PLUGIN}" "adc eax, dword [eax]" 1300 "br"
test_vector "${PLUGIN}" "add al, 0" 0400 "br"
test_vector "${PLUGIN}" "add al, byte [eax]" 0200 "br"
test_vector "${PLUGIN}" "add byte [bx + si], al" 670000 "br"
test_vector "${PLUGIN}" "add byte [eax], 0" 800000 "br"
test_vector "${PLUGIN}" "add byte [eax], 0" 820000 "br"
test_vector "${PLUGIN}" "add byte [eax], al" 00000000 "br"
test_vector "${PLUGIN}" "add byte [eax], al" 0000 "br"
test_vector "${PLUGIN}" "add dword [eax], 1" 830001
test_vector "${PLUGIN}" "add dword [eax+8], 1" 83400801
test_vector "${PLUGIN}" "add dword [eax], eax" 0100
test_vector "${PLUGIN}" "add dword [ebp+4], 1" 83450401
test_vector "${PLUGIN}" "add dword [ebp+8], 1" 83450801
test_vector "${PLUGIN}" "add dword [ebx], 1" 830301
test_vector "${PLUGIN}" "add dword [ebx+8], 1" 83430801
test_vector "${PLUGIN}" "add dword [esp+8], 1" 8344240801
test_vector "${PLUGIN}" "add eax, 1" 83c001
test_vector "${PLUGIN}" "add eax, 3" 83c003
test_vector "${PLUGIN}" "add eax, dword [eax]" 0300 "Br"
test_vector "${PLUGIN}" "add [eax], eax" 0100
test_vector "${PLUGIN}" "add esi,-334" 81c6b2feffff
test_vector "${PLUGIN}" "addpd xmm0, xmmword [eax]" 660f5800 "br"
test_vector "${PLUGIN}" "addps xmm0, xmmword [eax]" 0f5800 "br"
test_vector "${PLUGIN}" "addsd xmm0, qword [eax]" F20F5800 "br"
test_vector "${PLUGIN}" "addss xmm0, dword [eax]" F30F5800 "br"
test_vector "${PLUGIN}" "addsubpd xmm0, xmmword [eax]" 660fd000 "br"
test_vector "${PLUGIN}" "addsubps xmm0, xmmword [eax]" f20fd000 "br"
test_vector "${PLUGIN}" "adx" d4 "br"
test_vector "${PLUGIN}" "aesdeclast xmm0, xmm0" 660f38dfc0 "br"
test_vector "${PLUGIN}" "aesdec xmm0, xmm0" 660f38dec0 "br"
test_vector "${PLUGIN}" "aesenclast xmm0, xmm0" 660f38ddc0 "br"
test_vector "${PLUGIN}" "aesenc xmm0, xmm0" 660f38dcc0 "br"
test_vector "${PLUGIN}" "aesimc xmm0, xmm0" 660f38dbc0 "br"
test_vector "${PLUGIN}" "aeskeygenassist xmm0, xmm0, 0x0" 660f3adfc000 "br"
test_vector "${PLUGIN}" "amx" d5 "br"
test_vector "${PLUGIN}" "and al, 0" 2400 "br"
test_vector "${PLUGIN}" "and al, byte [eax]" 2200 "br"
test_vector "${PLUGIN}" "and byte [eax], al" 2000 "br"
test_vector "${PLUGIN}" "and dword [eax], eax" 2100
test_vector "${PLUGIN}" "and eax, dword [eax]" 2300 "br"
test_vector "${PLUGIN}" "andnpd xmm0, xmmword [eax]" 660f55 "br"
test_vector "${PLUGIN}" "andnps xmm0, xmmword [eax]" 0f5500 "br"
test_vector "${PLUGIN}" "andpd xmm0, xmmword [eax]" 660f54 "br"
test_vector "${PLUGIN}" "andps xmm0, xmmword [eax]" 0f5400 "br"
test_vector "${PLUGIN}" "arpl word [eax], ax" 6300 "br"
test_vector "${PLUGIN}" "blendpd xmm0, xmm0, 0" 660f3a0dc000 "br"
test_vector "${PLUGIN}" "blendps xmm0, xmm0, 0" 660f3a0cc000 "br"
test_vector "${PLUGIN}" "blendvpd xmm0, xmm0" 660f3815c0 "br"
test_vector "${PLUGIN}" "blendvps xmm0, xmm0" 660f3814c0 "br"
test_vector "${PLUGIN}" "bound eax, qword [eax]" 6200 "br"
test_vector "${PLUGIN}" "bsf eax, dword [eax]" 0fbc00 "br"
test_vector "${PLUGIN}" "bsr eax, dword [eax]" 0fbd00 "br"
test_vector "${PLUGIN}" "bswap eax" 0fc8 "br"
test_vector "${PLUGIN}" "bswap ebp" 0fcd "br"
test_vector "${PLUGIN}" "bswap ebx" 0fcb "br"
test_vector "${PLUGIN}" "bswap ecx" 0fc9 "br"
test_vector "${PLUGIN}" "bswap edi" 0fcf "br"
test_vector "${PLUGIN}" "bswap edx" 0fca "br"
test_vector "${PLUGIN}" "bswap esi" 0fce "br"
test_vector "${PLUGIN}" "bswap esp" 0fcc "br"
test_vector "${PLUGIN}" "btc dword [eax], eax" 0fbb00 "br"
test_vector "${PLUGIN}" "bt dword [eax], eax" 0fa300
test_vector "${PLUGIN}" "bt ecx, esp" 0fa3e1
test_vector "${PLUGIN}" "bt edx, 59" 0fbae23b
test_vector "${PLUGIN}" "bt ebp, -21" 0fbae5eb
test_vector "${PLUGIN}" "btr dword [eax], eax" 0fb300 "br"
test_vector "${PLUGIN}" "bts dword [eax], eax" 0fab00 "br"
test_vector "${PLUGIN}" "call 0x8049100" e8fb900408
test_vector "${PLUGIN}" "call 4" e8ffffffff
test_vector "${PLUGIN}" "call 5" e800000000
test_vector "${PLUGIN}" "call dword [eax]" ff10 "br"
test_vector "${PLUGIN}" "call ebx" ffd3
test_vector "${PLUGIN}" "cbw" 6698 "br"
test_vector "${PLUGIN}" "cdq" 99 "br"
test_vector "${PLUGIN}" "cdqe" 98 "br"
test_vector "${PLUGIN}" "clc" f8 "br"
test_vector "${PLUGIN}" "cld" fc "br"
test_vector "${PLUGIN}" "clflush byte [eax]" 0fae38 "br"
test_vector "${PLUGIN}" "clgi" 0f01dd "br"
test_vector "${PLUGIN}" "cli" fa
test_vector "${PLUGIN}" "clts" 0f06 "br"
test_vector "${PLUGIN}" "cmc" f5 "br"
test_vector "${PLUGIN}" "cmova eax, dword [eax]" 0f4700 "br"
test_vector "${PLUGIN}" "cmovae eax, dword [eax]" 0f4300 "br"
test_vector "${PLUGIN}" "cmovb eax, dword [eax]" 0f4200 "br"
test_vector "${PLUGIN}" "cmovbe eax, dword [eax]" 0f4600 "br"
test_vector "${PLUGIN}" "cmove eax, dword [eax]" 0f4400 "br"
test_vector "${PLUGIN}" "cmovg eax, [eax]" 0f4f00 "br"
test_vector "${PLUGIN}" "cmovge eax, dword [eax]" 0f4d00 "br"
test_vector "${PLUGIN}" "cmovl eax, dword [eax]" 0f4c00 "br"
test_vector "${PLUGIN}" "cmovle eax, dword [eax]" 0f4e00 "br"
test_vector "${PLUGIN}" "cmovne eax, dword [eax]" 0f4500 "br"
test_vector "${PLUGIN}" "cmovno eax, dword [eax]" 0f4100 "br"
test_vector "${PLUGIN}" "cmovnp eax, dword [eax]" 0f4b00 "br"
test_vector "${PLUGIN}" "cmovns eax, dword [eax]" 0f4900 "br"
test_vector "${PLUGIN}" "cmovo eax, dword [eax]" 0f4000 "br"
test_vector "${PLUGIN}" "cmovp eax, dword [eax]" 0f4a00 "br"
test_vector "${PLUGIN}" "cmovs eax, dword [eax]" 0f4800 "br"
test_vector "${PLUGIN}" "cmp al, 0" 3c00 "br"
test_vector "${PLUGIN}" "cmp al, byte [eax]" 3a00 "br"
test_vector "${PLUGIN}" "cmp byte [eax], al" 3800 "br"
test_vector "${PLUGIN}" "cmp dword [eax], eax" 3900 "br"
test_vector "${PLUGIN}" "cmp eax, 33" 83f821
test_vector "${PLUGIN}" "cmp eax, dword [eax]" 3b00 "br"
test_vector "${PLUGIN}" "cmp eax, ebx" 39d8
test_vector "${PLUGIN}" "cmp ebx, eax" 39c3
test_vector "${PLUGIN}" "cmp edx, esi" 39f2
test_vector "${PLUGIN}" "cmpeqpd xmm0, xmmword [eax]" 660fc20000 "br"
test_vector "${PLUGIN}" "cmpeqps xmm0, xmmword [eax]" 0fc20000 "br"
test_vector "${PLUGIN}" "cmpeqss xmm0, dword [eax]" f30fc20000 "br"
test_vector "${PLUGIN}" "cmplepd xmm0, xmmword [eax]" 660fc20002 "br"
test_vector "${PLUGIN}" "cmpleps xmm0, xmmword [eax]" 0fc20002 "br"
test_vector "${PLUGIN}" "cmplesd xmm0, qword [eax]" f20fc20002 "br"
test_vector "${PLUGIN}" "cmpless xmm0, dword [eax]" f30fc20002 "br"
test_vector "${PLUGIN}" "cmpltpd xmm0, xmmword [eax]" 660fc20001 "br"
test_vector "${PLUGIN}" "cmpltps xmm0, xmmword [eax]" 0fc20001 "br"
test_vector "${PLUGIN}" "cmpltsd xmm0, qword [eax]" f20fc20001 "br"
test_vector "${PLUGIN}" "cmpltss xmm0, dword [eax]" f30fc20001 "br"
test_vector "${PLUGIN}" "cmpneqpd xmm0, xmmword [eax]" 660fc20004 "br"
test_vector "${PLUGIN}" "cmpneqps xmm0, xmmword [eax]" 0fc20004 "br"
test_vector "${PLUGIN}" "cmpneqsd xmm0, qword [eax]" f20fc20004 "br"
test_vector "${PLUGIN}" "cmpneqss xmm0, dword [eax]" f30fc20004 "br"
test_vector "${PLUGIN}" "cmpnlepd xmm0, xmmword [eax]" 660fc20006 "br"
test_vector "${PLUGIN}" "cmpnleps xmm0, xmmword [eax]" 0fc20006 "br"
test_vector "${PLUGIN}" "cmpnlesd xmm0, qword [eax]" f20fc20006 "br"
test_vector "${PLUGIN}" "cmpnless xmm0, dword [eax]" f30fc20006 "br"
test_vector "${PLUGIN}" "cmpnltpd xmm0, xmmword [eax]" 660fc20005 "br"
test_vector "${PLUGIN}" "cmpnltps xmm0, xmmword [eax]" 0fc20005 "br"
test_vector "${PLUGIN}" "cmpnltsd xmm0, qword [eax]" f20fc20005 "br"
test_vector "${PLUGIN}" "cmpnltss xmm0, dword [eax]" f30fc20005 "br"
test_vector "${PLUGIN}" "cmpordpd xmm0, xmmword [eax]" 660fc20007 "br"
test_vector "${PLUGIN}" "cmpordps xmm0, xmmword [eax]" 0fc20007 "br"
test_vector "${PLUGIN}" "cmpordsd xmm0, qword [eax]" f20fc20007 "br"
test_vector "${PLUGIN}" "cmpordss xmm0, dword [eax]" f30fc20007 "br"
test_vector "${PLUGIN}" "cmpsb byte [esi], byte ptr es:[edi]" a6 "br"
test_vector "${PLUGIN}" "cmpsd dword [esi], dword ptr es:[edi]" a7 "br"
test_vector "${PLUGIN}" "cmpsd xmm0, qword [eax]" f20fc20000 "br"
test_vector "${PLUGIN}" "cmpunordpd xmm0, xmmword [eax]" 660fc20003 "br"
test_vector "${PLUGIN}" "cmpunordps xmm0, xmmword [eax]" 0fc20003 "br"
test_vector "${PLUGIN}" "cmpunordsd xmm0, qword [eax]" f20fc20003 "br"
test_vector "${PLUGIN}" "cmpunordss xmm0, dword [eax]" f30fc20003 "br"
test_vector "${PLUGIN}" "cmpxchg16b [eax]" 67480f0c7 "br"
test_vector "${PLUGIN}" "cmpxchg8b dword [eax]" 0fc7c0 "br"
test_vector "${PLUGIN}" "cmpxchg byte [eax], al" 0fb000 "br"
test_vector "${PLUGIN}" "cmpxchg dword [eax], eax" 0fb100 "br"
test_vector "${PLUGIN}" "comisd xmm0, xmmword [eax]" 660f2f00 "br"
test_vector "${PLUGIN}" "comiss xmm0, xmmword [eax]" 0f2f00 "br"
test_vector "${PLUGIN}" "cpuid" 0fa2
test_vector "${PLUGIN}" "crc32 eax, byte [eax]" f20f38f0 "br"
test_vector "${PLUGIN}" "crc32 eax, dword [eax]" f20f38f1 "br"
test_vector "${PLUGIN}" "cvtdq2pd xmm0, qword [eax]" f30fe600  "br"
test_vector "${PLUGIN}" "cvtdq2ps xmm0, xmmword [eax]" 0f5b00 "br"
test_vector "${PLUGIN}" "cvtpd2dq xmm0, xmmword [eax]" f20fe600 "br"
test_vector "${PLUGIN}" "cvtpd2pi mm0, xmmword [eax]" 660f2d00 "br"
test_vector "${PLUGIN}" "cvtpd2ps xmm0, xmmword [eax]" 660f5a00 "br"
test_vector "${PLUGIN}" "cvtpi2pd xmm0, qword [eax]" 660f2a00 "br"
test_vector "${PLUGIN}" "cvtpi2ps xmm0, qword [eax]" 0f2a00 "br"
test_vector "${PLUGIN}" "cvtps2dq xmm0, xmmword [eax]" 660f5b00 "br"
test_vector "${PLUGIN}" "cvtps2pd xmm0, qword [eax]" 0f5a00 "br"
test_vector "${PLUGIN}" "cvtps2pi mm0, qword [eax]" 0f2d00 "br"
test_vector "${PLUGIN}" "cvtsd2si eax, qword [eax]" f20f2d00 "br"
test_vector "${PLUGIN}" "cvtsd2ss xmm0, qword [eax]" f20f5a00 "br"
test_vector "${PLUGIN}" "cvtsi2sd xmm0, dword [eax]" f20f2a00 "br"
test_vector "${PLUGIN}" "cvtsi2ss xmm0, dword [eax]" f30f2a00 "br"
test_vector "${PLUGIN}" "cvtss2sd xmm0, dword [eax]" f30f5a00 "br"
test_vector "${PLUGIN}" "cvtss2si eax, dword [eax]" f30f2d00 "br"
test_vector "${PLUGIN}" "cvttpd2dq xmm0, xmmword [eax]" 660fe600 "br"
test_vector "${PLUGIN}" "cvttpd2pi mm0, xmmword [eax]" 660f2c00 "br"
test_vector "${PLUGIN}" "cvttps2dq xmm0, xmmword [eax]" f30f5b00 "br"
test_vector "${PLUGIN}" "cvttps2pi mm0, qword [eax]" 0f2c00 "br"
test_vector "${PLUGIN}" "cvttsd2si eax, qword [eax]" f20f2c00 "br"
test_vector "${PLUGIN}" "cvttss2si eax, dword [eax]" f30f2c00 "br"
test_vector "${PLUGIN}" "cwd" 6699 "br"
test_vector "${PLUGIN}" "cwde" 98 "br"
test_vector "${PLUGIN}" "daa" 27 "br"
test_vector "${PLUGIN}" "das" 2F "br"
test_vector "${PLUGIN}" "dec byte [eax]" fe08 "br"
test_vector "${PLUGIN}" "dec dword [eax]" ff08 "br"
test_vector "${PLUGIN}" "dec eax" 48
test_vector "${PLUGIN}" "dec ebp" 4d
test_vector "${PLUGIN}" "dec ebx" 4b
test_vector "${PLUGIN}" "dec ecx" 49
test_vector "${PLUGIN}" "dec edi" 4f
test_vector "${PLUGIN}" "dec edx" 4a
test_vector "${PLUGIN}" "dec esi" 4e
test_vector "${PLUGIN}" "dec esp" 4c
test_vector "${PLUGIN}" "div byte [eax]" f630 "br"
test_vector "${PLUGIN}" "divpd xmm0, xmmword [eax]" 660f5e00 "br"
test_vector "${PLUGIN}" "divps xmm0, xmmword [eax]" 0f5e00 "br"
test_vector "${PLUGIN}" "divsd xmm0, qword [eax]" f20f5e00 "br"
test_vector "${PLUGIN}" "divss xmm0, dword [eax]" f30f5e00 "br"
test_vector "${PLUGIN}" "dppd xmm0, xmm0, 0" 660f3a41c000 "br"
test_vector "${PLUGIN}" "dpps xmm0, xmm0, 0" 660f3a40c000 "br"
test_vector "${PLUGIN}" "emms" 0f77 "br"
test_vector "${PLUGIN}" "extractps eax, xmm0, 0" 660f3a17c000 "br"
test_vector "${PLUGIN}" "extrq xmm0, 0x0, 0x0" 660f78c00000 "br"
test_vector "${PLUGIN}" "extrq xmm0, xmm0" 660f7900 "br"
test_vector "${PLUGIN}" "femms" 0f0e "br"
test_vector "${PLUGIN}" "fsincos" d9fb
test_vector "${PLUGIN}" "fxrstor [eax]" 0fae08 "br"
test_vector "${PLUGIN}" "fxsave [eax]" 0fae00 "br"
test_vector "${PLUGIN}" "getsec" 0f37 "br"
test_vector "${PLUGIN}" "haddpd xmm0, xmmword [eax]" 660f7c00 "br"
test_vector "${PLUGIN}" "haddps xmm0, xmmword [eax]" f20f7c00 "br"
test_vector "${PLUGIN}" "hlt" f4
test_vector "${PLUGIN}" "hsubpd xmm0, xmmword [eax]" 660f7d00 "br"
test_vector "${PLUGIN}" "hsubps xmm0, xmmword [eax]" f20f7d00 "br"
test_vector "${PLUGIN}" "idiv byte [eax]" f638 "br"
test_vector "${PLUGIN}" "imul byte [eax]" f628 "br"
test_vector "${PLUGIN}" "imul eax, dword [eax], 0" 6b0000 "br"
test_vector "${PLUGIN}" "imul eax, dword [eax]" 0faf00 "br"
test_vector "${PLUGIN}" "imul eax, [eax], 0" 690000000000 "br"
test_vector "${PLUGIN}" "in al,0" E4 "br"
test_vector "${PLUGIN}" "in al,dx" ec "br"
test_vector "${PLUGIN}" "inc byte [eax]" fe00 "br"
test_vector "${PLUGIN}" "inc dword [eax]" ff00
test_vector "${PLUGIN}" "inc eax" 40
test_vector "${PLUGIN}" "inc ebp" 45
test_vector "${PLUGIN}" "inc ebx" 43
test_vector "${PLUGIN}" "inc ecx" 41
test_vector "${PLUGIN}" "inc edi" 47
test_vector "${PLUGIN}" "inc edx" 42
test_vector "${PLUGIN}" "inc esi" 46
test_vector "${PLUGIN}" "inc esp" 44
test_vector "${PLUGIN}" "in eax,0" E5 "br"
test_vector "${PLUGIN}" "in eax, 0x8c" e58c "br"
test_vector "${PLUGIN}" "in eax,dx" ed "br"
test_vector "${PLUGIN}" "insb byte es:[edi], dx" 6c "br"
test_vector "${PLUGIN}" "insd dword es:[edi], dx" 6d "br"
test_vector "${PLUGIN}" "insertps xmm0, xmm0, 0" 660f3a21c000 "br"
test_vector "${PLUGIN}" "int 0x21" cd21
test_vector "${PLUGIN}" "int 1" cd01
test_vector "${PLUGIN}" "int1" f1 "br"
test_vector "${PLUGIN}" "int3" cc
test_vector "${PLUGIN}" "int 3" cd03
test_vector "${PLUGIN}" "into" ce "br"
test_vector "${PLUGIN}" "invd" 0f08 "br"
test_vector "${PLUGIN}" "invlpga" 0f01df "br" # this instruction doesn't seem to need arguments
test_vector "${PLUGIN}" "invlpg byte [eax]" 0f0138 "br"
test_vector "${PLUGIN}" "iret" 66cf "br"
test_vector "${PLUGIN}" "iretd" cf
test_vector "${PLUGIN}" "ja 0x8049300" 0f87fa920408
test_vector "${PLUGIN}" "ja 2" 0f87fcffffff
test_vector "${PLUGIN}" "ja 6" 0f8700000000
test_vector "${PLUGIN}" "jae 2" 7300 "br"
test_vector "${PLUGIN}" "jae 6" 0f8300000000 "br"
test_vector "${PLUGIN}" "jb 0x8049300" 0f82fa920408
test_vector "${PLUGIN}" "jb 2" 0f82fcffffff
test_vector "${PLUGIN}" "jb 6" 0f8200000000
test_vector "${PLUGIN}" "jbe 2" 7600 "br"
test_vector "${PLUGIN}" "jbe 6" 0f8600000000 "br"
test_vector "${PLUGIN}" "je 2" 0f84fcffffff
test_vector "${PLUGIN}" "je 6" 0f8400000000
test_vector "${PLUGIN}" "jg 0x8049300" 0f8ffa920408
test_vector "${PLUGIN}" "jg 2" 0f8ffcffffff
test_vector "${PLUGIN}" "jg 6" 0f8f00000000
test_vector "${PLUGIN}" "jge 0x8048010" 0f8d0a800408
test_vector "${PLUGIN}" "jge 0x8049300" 0f8dfa920408
test_vector "${PLUGIN}" "jge 2" 0f8dfcffffff
test_vector "${PLUGIN}" "jge 6" 0f8d00000000
test_vector "${PLUGIN}" "jl 0x8048010" 0f8c0a800408
test_vector "${PLUGIN}" "jl 0x8049300" 0f8cfa920408
test_vector "${PLUGIN}" "jl 2" 0f8cfcffffff
test_vector "${PLUGIN}" "jl 6" 0f8c00000000
test_vector "${PLUGIN}" "jle 0x8048010" 0f8e0a800408
test_vector "${PLUGIN}" "jle 0x8049300" 0f8efa920408
test_vector "${PLUGIN}" "jle 2" 0f8efcffffff
test_vector "${PLUGIN}" "jle 6" 0f8e00000000
test_vector "${PLUGIN}" "jmp 0" ebfe
test_vector "${PLUGIN}" "jmp 0x42" eb40
test_vector "${PLUGIN}" "jmp -0x7e" eb80
test_vector "${PLUGIN}" "jmp -0x7f" e97cffffff
test_vector "${PLUGIN}" "jmp 0x8049200" e9fb910408
test_vector "${PLUGIN}" "jmp 0x81" eb7f
test_vector "${PLUGIN}" "jmp 0x82" e97d000000
test_vector "${PLUGIN}" "jmp 2" eb00
test_vector "${PLUGIN}" "jmp 3" eb01
test_vector "${PLUGIN}" "jmp ecx" ffe1
test_vector "${PLUGIN}" "jne 6" 0f8500000000
test_vector "${PLUGIN}" "jno 2" 7100 "br"
test_vector "${PLUGIN}" "jno 6" 0f8100000000 "br"
test_vector "${PLUGIN}" "jnp 2" 7b00 "br"
test_vector "${PLUGIN}" "jnp 6" 0f8b00000000 "br"
test_vector "${PLUGIN}" "jns 2" 7900 "br"
test_vector "${PLUGIN}" "jns 6" 0f8900000000 "br"
test_vector "${PLUGIN}" "jnz 2" 0f85fcffffff
test_vector "${PLUGIN}" "jo 2" 7000 "br"
test_vector "${PLUGIN}" "jo 6" 0f8000000000 "br"
test_vector "${PLUGIN}" "jp 2" 7a00 "br"
test_vector "${PLUGIN}" "jp 6" 0f8a00000000 "br"
test_vector "${PLUGIN}" "js 2" 7800 "br"
test_vector "${PLUGIN}" "js 6" 0f8800000000 "br"
test_vector "${PLUGIN}" "lahf" 9e "br"
test_vector "${PLUGIN}" "lar eax, word [eax]" 0f02 "br"
test_vector "${PLUGIN}" "lcall 0, 0" 9a "br"
test_vector "${PLUGIN}" "lcall [0]" ff1c2500000000 "br"
test_vector "${PLUGIN}" "lcall [eax]" ff18 "br"
test_vector "${PLUGIN}" "lddqu xmm0, xmmword [eax]" f20ff000 "br"
test_vector "${PLUGIN}" "ldmxcsr [eax]" 0fae10 "br"
test_vector "${PLUGIN}" "lds eax, [eax]" c500 "br"
test_vector "${PLUGIN}" "lea eax, [4]" 8d0504000000
test_vector "${PLUGIN}" "lea eax, [eax+4]" 8d4004
test_vector "${PLUGIN}" "lea eax, [eax]" 8d00
test_vector "${PLUGIN}" "lea eax, [ebp+24]" 8d4518
test_vector "${PLUGIN}" "lea eax, [ebx+24]" 8d4318
test_vector "${PLUGIN}" "lea eax, [ebx+4]" 8d4304
test_vector "${PLUGIN}" "lea eax, [ecx]" 8d01
test_vector "${PLUGIN}" "lea eax, [esp]" 8d0424
test_vector "${PLUGIN}" "lea ebx, [4]" 8d1d04000000
test_vector "${PLUGIN}" "lea ebx, [eax+24]" 8d5818
test_vector "${PLUGIN}" "lea ebx, [eax+4]" 8d5804
test_vector "${PLUGIN}" "lea ebx, [ebp+324]" 8d9d44010000
test_vector "${PLUGIN}" "lea ebx, [ebp]" 8d5d00
test_vector "${PLUGIN}" "leave" c9
test_vector "${PLUGIN}" "les eax, [eax]" c400 "br"
test_vector "${PLUGIN}" "lfence" 0faee8 "br"
test_vector "${PLUGIN}" "lfs eax, dword [eax]" 0fb400 "br"
test_vector "${PLUGIN}" "lgdt [eax]" 0f0110 "br"
test_vector "${PLUGIN}" "lgs eax, dword [eax]" 0fb500 "br"
test_vector "${PLUGIN}" "lidt [eax]" 0f0118 "br"
test_vector "${PLUGIN}" "lldt ax" 0f00d0 "br"
test_vector "${PLUGIN}" "lldt word [eax]" 0f0010 "br"
test_vector "${PLUGIN}" "lmsw ax" 0f01f0 "br"
test_vector "${PLUGIN}" "lmsw word [eax]" 0f0130 "br"
test_vector "${PLUGIN}" "lock and word [fs:bx + si], si" 646766f02130 "br"
test_vector "${PLUGIN}" "lock cmpxchg8b" f00fc7c0 "br"
test_vector "${PLUGIN}" "lock mov dword [eax], eax" f08900 "br"
test_vector "${PLUGIN}" "lock mov eax, eax" f089c0 "br"
test_vector "${PLUGIN}" "lodsb al, byte [esi]" ac "br"
test_vector "${PLUGIN}" "lodsd eax, dword [esi]" ad "br"
test_vector "${PLUGIN}" "loop 3" 66e200 "br"
test_vector "${PLUGIN}" "lsl eax, dword [eax]" 0f03 "br"
test_vector "${PLUGIN}" "lss eax, dword [eax]" 0fb200 "br" #where are the size
test_vector "${PLUGIN}" "ltr ax" 0f00d8 "br"
test_vector "${PLUGIN}" "ltr word [eax]" 0f0018 "br"
test_vector "${PLUGIN}" "lzcnt eax, dword [eax]" f30fbd00 "br"
test_vector "${PLUGIN}" "maskmovdqu xmm0, xmm0" 660ff7 "br"
test_vector "${PLUGIN}" "maskmovq mm0, mm0" 0ff7 "br"
test_vector "${PLUGIN}" "maxpd xmm0, xmmword [eax]" 660f5f00 "br"
test_vector "${PLUGIN}" "maxps xmm0, xmmword [eax]" 0f5f00 "br"
test_vector "${PLUGIN}" "maxsd xmm0, qword [eax]" f20f5f00 "br"
test_vector "${PLUGIN}" "maxss xmm0, dword [eax]" f30f5f00 "br"
test_vector "${PLUGIN}" "mfence" 0faef0 "br"
test_vector "${PLUGIN}" "minpd xmm0, xmmword [eax]" 660f5d00 "br"
test_vector "${PLUGIN}" "minps xmm0, xmmword [eax]" 0f5d00 "br"
test_vector "${PLUGIN}" "minsd xmm0, qword [eax]" f20f5d00 "br"
test_vector "${PLUGIN}" "minss xmm0, dword [eax]" f30f5d00 "br"
test_vector "${PLUGIN}" "monitor" 0f01c8 "br"
test_vector "${PLUGIN}" "mov [33], ebp" 892d21000000
test_vector "${PLUGIN}" "mov [33], ebx" 891d21000000
test_vector "${PLUGIN}" "mov [33], ecx" 890d21000000
test_vector "${PLUGIN}" "mov [33], edi" 893d21000000
test_vector "${PLUGIN}" "mov [33], edx" 891521000000
test_vector "${PLUGIN}" "mov [33], esi" 893521000000
test_vector "${PLUGIN}" "mov [33], esp" 892521000000
test_vector "${PLUGIN}" "mov ah, 0" b400 "br"
test_vector "${PLUGIN}" "mov al, 0" b000 "br"
test_vector "${PLUGIN}" "mov al, byte [0]" a000000000 "br"
test_vector "${PLUGIN}" "mov al, byte [eax]" 8a00 "br"
test_vector "${PLUGIN}" "mov al, [eax]" 8a00 "br"
test_vector "${PLUGIN}" "movapd xmm0, xmmword [eax]" 660f2800 "br"
test_vector "${PLUGIN}" "movapd xmmword [eax], xmm0" 660f2900 "br"
test_vector "${PLUGIN}" "movaps xmm0, xmmword [eax]" 0f2800 "br"
test_vector "${PLUGIN}" "movaps xmmword [eax], xmm0" 0f2900 "br"
test_vector "${PLUGIN}" "movbe dword [eax], eax" 0f38f100 "br"
test_vector "${PLUGIN}" "movbe eax, dword [eax]" 0f38f000 "br"
test_vector "${PLUGIN}" "mov bh, 0" b700 "br"
test_vector "${PLUGIN}" "mov bl, 0" b300 "br"
test_vector "${PLUGIN}" "mov byte [0], al" a200000000 "br"
test_vector "${PLUGIN}" "mov byte [eax], 0" c60000
test_vector "${PLUGIN}" "mov byte [eax], al" 8800 "br"
test_vector "${PLUGIN}" "mov ch, 0" b500 "br"
test_vector "${PLUGIN}" "mov cl, 0" b100 "br"
test_vector "${PLUGIN}" "mov cr0, eax" 0f22 "br"
test_vector "${PLUGIN}" "movddup xmm0, qword [eax]" f20f1200 "br"
test_vector "${PLUGIN}" "movd dword [eax], mm0" 0f7e00 "br"
test_vector "${PLUGIN}" "movd dword [eax], xmm0" 660f7e00 "br"
test_vector "${PLUGIN}" "mov dh, 0" b600 "br"
test_vector "${PLUGIN}" "mov dl, 0" b200 "br"
test_vector "${PLUGIN}" "movd mm0, dword [eax]" 0f6e00 "br"
test_vector "${PLUGIN}" "movdq2q mm0, xmm0" f20fd6 "br"
test_vector "${PLUGIN}" "movdqa xmm0, xmmword [eax]" 660f6f00 "br"
test_vector "${PLUGIN}" "movdqa xmmword [eax], xmm0" 660f7f00 "br"
test_vector "${PLUGIN}" "movdqu xmm0, xmmword [eax]" f30f6f00 "br"
test_vector "${PLUGIN}" "movdqu xmmword [eax], xmm0" f30f7f00 "br"
test_vector "${PLUGIN}" "mov dr0, eax" 0f23 "br"
test_vector "${PLUGIN}" "mov dword [0], eax" a300000000 "br"
test_vector "${PLUGIN}" "mov dword cs:[eax], eax" 2e8900 "br"
test_vector "${PLUGIN}" "mov dword ds:[eax], eax" 3e8900 "br"
test_vector "${PLUGIN}" "mov dword [eax], 0" c70000000000
test_vector "${PLUGIN}" "mov dword [eax], 0x6f77206f" c7006f20776f
test_vector "${PLUGIN}" "mov dword [eax+16], 0x6f77206f" c740106f20776f
test_vector "${PLUGIN}" "mov dword [eax], 3" c70003000000
test_vector "${PLUGIN}" "mov dword [eax+4], 1" c7400401000000
test_vector "${PLUGIN}" "mov dword [eax+4], 3" c7400403000000
test_vector "${PLUGIN}" "mov dword [eax+450], 0x6f77206f" c780c20100006f20776f
test_vector "${PLUGIN}" "mov dword [eax+4], 666" c740049a020000
test_vector "${PLUGIN}" "mov dword [eax-512], 421" c78000feffffa5010000
test_vector "${PLUGIN}" "mov dword [eax], 666" c7009a020000
test_vector "${PLUGIN}" "mov dword [eax], eax" 8900
test_vector "${PLUGIN}" "mov dword [ebp-12], 1" c745f401000000
test_vector "${PLUGIN}" "mov dword [ebp+16], 0x6f77206f" c745106f20776f
test_vector "${PLUGIN}" "mov dword [ebp-312], 3" c785c8feffff03000000
test_vector "${PLUGIN}" "mov dword [ebp+4], 1" c7450401000000
test_vector "${PLUGIN}" "mov dword [ebp+450], 0x6f77206f" c785c20100006f20776f
test_vector "${PLUGIN}" "mov dword es:[eax], eax" 268900 "br"
test_vector "${PLUGIN}" "mov dword [esi+4], 33" c7460421000000
test_vector "${PLUGIN}" "mov dword [esp-312], 321" c78424c8feffff41010000
test_vector "${PLUGIN}" "mov dword [esp], 3" c7042403000000
test_vector "${PLUGIN}" "mov dword [esp+4], 1" c744240401000000
test_vector "${PLUGIN}" "mov dword fs:[eax], eax" 648900 "br"
test_vector "${PLUGIN}" "mov dword gs:[eax], eax" 658900 "br"
test_vector "${PLUGIN}" "mov dword ss:[eax], eax" 368900 "br"
test_vector "${PLUGIN}" "movd xmm0, dword [eax]" 660f6e00 "br"
test_vector "${PLUGIN}" "mov eax, 0" b800000000
test_vector "${PLUGIN}" "mov eax, 0x8049000" b800900408
test_vector "${PLUGIN}" "mov eax, 1" b801000000
test_vector "${PLUGIN}" "mov [eax+2], ebx" 895802
test_vector "${PLUGIN}" "mov eax, 300" b82c010000
test_vector "${PLUGIN}" "mov eax, 3" b803000000
test_vector "${PLUGIN}" "mov [eax+4], eax" 894004
test_vector "${PLUGIN}" "mov [eax+4], ecx" 894804
test_vector "${PLUGIN}" "mov eax, cr0" 0f20 "br"
test_vector "${PLUGIN}" "mov eax, dr0" 0f21 "br"
test_vector "${PLUGIN}" "mov eax, dword [0]" a100000000 "br"
test_vector "${PLUGIN}" "mov eax, dword [eax]" 8b00
test_vector "${PLUGIN}" "mov eax, dword [ebp]" 8b4500
test_vector "${PLUGIN}" "mov eax, dword [esp]" 8b0424
test_vector "${PLUGIN}" "mov eax, dword fs:[ebp]" 648b4500 "br"
test_vector "${PLUGIN}" "mov eax, [eax+1337]" 8b8039050000
test_vector "${PLUGIN}" "mov eax, [eax-1337]" 8b80c7faffff
test_vector "${PLUGIN}" "mov eax,[eax*4+32]" 8b048520000000
test_vector "${PLUGIN}" "mov eax,[eax*4-32]" 8b0485e0ffffff
test_vector "${PLUGIN}" "mov eax,[eax*4+332]" 8b04854c010000
test_vector "${PLUGIN}" "mov eax,[eax*4-332]" 8b0485b4feffff
test_vector "${PLUGIN}" "mov eax, [eax+4]" 8b4004
test_vector "${PLUGIN}" "mov eax, [eax-4]" 8b40fc
test_vector "${PLUGIN}" "mov [eax], eax" 8900
test_vector "${PLUGIN}" "mov eax, eax" 89c0
test_vector "${PLUGIN}" "mov eax, [eax]" 8b00
test_vector "${PLUGIN}" "mov [eax+eax], eax" 890400
test_vector "${PLUGIN}" "mov eax,[eax+ebx*4+32]" 8b449820 "br"
test_vector "${PLUGIN}" "mov [eax+eax], ebx" 891c00
test_vector "${PLUGIN}" "mov [eax+eax], ecx" 890c00
test_vector "${PLUGIN}" "mov eax, [ebp]" 8b4500
test_vector "${PLUGIN}" "mov [eax], ebx" 8918
test_vector "${PLUGIN}" "mov eax, ebx" 89d8
test_vector "${PLUGIN}" "mov eax, [ebx]" 8b03
test_vector "${PLUGIN}" "mov eax,[ecx*8+64]" 8b04cd40000000
test_vector "${PLUGIN}" "mov [eax+ecx], eax" 890408
test_vector "${PLUGIN}" "mov eax, [esi]" 8b06
test_vector "${PLUGIN}" "mov eax, [esp+4]" 8b442404
test_vector "${PLUGIN}" "mov eax, esp" 89e0
test_vector "${PLUGIN}" "mov eax, [esp]" 8b0424
test_vector "${PLUGIN}" "mov ebp, 0" bd00000000
test_vector "${PLUGIN}" "mov [ebp+4], eax" 894504
test_vector "${PLUGIN}" "mov [ebp+4], ebx" 895d04
test_vector "${PLUGIN}" "mov [ebp+4], ecx" 894d04
test_vector "${PLUGIN}" "mov ebx, 0" bb00000000
test_vector "${PLUGIN}" "mov [ebx+2], ebx" 895b02
test_vector "${PLUGIN}" "mov [ebx-2], ecx" 894bfe
test_vector "${PLUGIN}" "mov ebx, -3" bbfdffffff
test_vector "${PLUGIN}" "mov [ebx+454], ebx" 899bc6010000
test_vector "${PLUGIN}" "mov [ebx-552], edx" 8993d8fdffff
test_vector "${PLUGIN}" "mov [ebx], eax" 8903
test_vector "${PLUGIN}" "mov ebx, eax" 89c3
test_vector "${PLUGIN}" "mov ebx, [eax]" 8b18
test_vector "${PLUGIN}" "mov [ebx+eax], eax" 890403
test_vector "${PLUGIN}" "mov ecx, 0" b900000000
test_vector "${PLUGIN}" "mov ecx, -432" b950feffff
test_vector "${PLUGIN}" "mov ecx, [eax]" 8b08
test_vector "${PLUGIN}" "mov edi, 0" bf00000000
test_vector "${PLUGIN}" "mov edx, 0" ba00000000
test_vector "${PLUGIN}" "mov esi, 0" be00000000
test_vector "${PLUGIN}" "mov esi, [esi + 8]" 8b7608
test_vector "${PLUGIN}" "mov esp, 0" bc00000000
test_vector "${PLUGIN}" "mov [esp-12], eax" 894424f4
test_vector "${PLUGIN}" "mov [esp+2], ebx" 895c2402
test_vector "${PLUGIN}" "mov [esp-2], ebx" 895c24fe
test_vector "${PLUGIN}" "mov [esp+454], ebx" 899c24c6010000
test_vector "${PLUGIN}" "mov es, word [eax]" 8e00 "br"
test_vector "${PLUGIN}" "movhlps xmm0, xmm0" 0f12 "br"
test_vector "${PLUGIN}" "movhpd qword [eax], xmm0" 660f1700 "br"
test_vector "${PLUGIN}" "movhpd xmm0, qword [eax]" 660f1600 "br"
test_vector "${PLUGIN}" "movhps qword [eax], xmm0" 0f17 "br"
test_vector "${PLUGIN}" "movhps xmm0, qword [eax]" 0f16 "br"
test_vector "${PLUGIN}" "movlhps xmm0, xmm0" 0f16 "br"
test_vector "${PLUGIN}" "movlpd qword [eax], xmm0" 660f1300 "br"
test_vector "${PLUGIN}" "movlpd xmm0, qword [eax]" 660f1200 "br"
test_vector "${PLUGIN}" "movlps qword [eax], xmm0" 0f13 "br"
test_vector "${PLUGIN}" "movlps xmm0, qword [eax]" 0f12 "br"
test_vector "${PLUGIN}" "movmskpd eax, xmm0" 660f50c0 "br"
test_vector "${PLUGIN}" "movmskps eax, xmm0" 0f50c0 "br"
test_vector "${PLUGIN}" "movntdqa xmm0, xmmword [eax]" 660f382a00 "br"
test_vector "${PLUGIN}" "movntdq xmmword [eax], xmm0" 660fe700 "br"
test_vector "${PLUGIN}" "movnti dword [eax], eax" 0fc300 "br"
test_vector "${PLUGIN}" "movntpd xmmword [eax], xmm0" 660f2b00 "br"
test_vector "${PLUGIN}" "movntps xmmword [eax], xmm0" 0f2b00 "br"
test_vector "${PLUGIN}" "movntq qword [eax], mm0" 0fe700 "br"
test_vector "${PLUGIN}" "movq2dq xmm0, mm0" f30fd6 "br"
test_vector "${PLUGIN}" "movq mm0, qword [eax]" 0f6f00 "br"
test_vector "${PLUGIN}" "movq qword [eax], mm0" 0f7f00 "br"
test_vector "${PLUGIN}" "movq qword [eax], xmm0" 660fd600 "br"
test_vector "${PLUGIN}" "movq xmm0, qword [eax]" f30f7e00 "br"
test_vector "${PLUGIN}" "movsb byte es:[edi], byte ptr [esi]" a4 "br"
test_vector "${PLUGIN}" "movsd dword es:[edi], dword ptr [esi]" a5 "br"
test_vector "${PLUGIN}" "movsd dword es:[edi], dword ptr fs:[esi]" 64a5 "br"
test_vector "${PLUGIN}" "movsd qword [eax], xmm0" f20f1100 "br"
test_vector "${PLUGIN}" "movsd xmm0, qword [eax]" f20f1000  "br"
test_vector "${PLUGIN}" "movshdup xmm0, xmmword [eax]" f30f1600 "br"
test_vector "${PLUGIN}" "movsldup xmm0, xmmword [eax]" f30f1200 "br"
test_vector "${PLUGIN}" "movss dword [eax], xmm0" f30f1100 "br"
test_vector "${PLUGIN}" "movss xmm0, dword [eax]" f30f1000 "br"
test_vector "${PLUGIN}" "movsx eax, byte [eax]" 0fbe00 "br"
test_vector "${PLUGIN}" "movsx eax, word [eax]" 0fbf00 "br"
test_vector "${PLUGIN}" "movupd xmm0, xmmword [eax]" 660f1000 "br"
test_vector "${PLUGIN}" "movupd xmmword [eax], xmm0" 660f1100 "br"
test_vector "${PLUGIN}" "movups xmm0, xmmword [eax]" 0f10 "br"
test_vector "${PLUGIN}" "movups xmmword [eax], xmm0" 0f11 "br"
test_vector "${PLUGIN}" "mov word [eax], es" 8c00 "br"
test_vector "${PLUGIN}" "movzx eax, byte [eax]" 0fb600 "br"
test_vector "${PLUGIN}" "movzx eax, word [eax]" 0fb700 "br"
test_vector "${PLUGIN}" "mpsadbw xmm0, xmm0, 0" 660f3a42c000 "br"
test_vector "${PLUGIN}" "mul byte [eax]" f620 "br"
test_vector "${PLUGIN}" "mulpd xmm0, xmmword [eax]" 660f5900 "br"
test_vector "${PLUGIN}" "mulpd xmm7, xmm7" 660f59ff "br"
test_vector "${PLUGIN}" "mulps xmm0, xmmword [eax]" 0f5900 "br"
test_vector "${PLUGIN}" "mulps xmm7, xmm7" 0f59ff "br"
test_vector "${PLUGIN}" "mulsd xmm0, qword [eax]" f20f5900 "br"
test_vector "${PLUGIN}" "mulsd xmm7, xmm7" 66f3f20f59ff "br"
test_vector "${PLUGIN}" "mulsd xmm7, xmm7" f2660f59ff "br"
test_vector "${PLUGIN}" "mulss xmm0, dword [eax]" f30f5900 "br"
test_vector "${PLUGIN}" "mulss xmm7, xmm7" 66f2f0f59ff "br"
test_vector "${PLUGIN}" "mwait" 0f01c9 "br"
test_vector "${PLUGIN}" "neg byte [eax]" f618 "br"
test_vector "${PLUGIN}" "nop" 90
test_vector "${PLUGIN}" "not byte [eax]" f610 "br"
test_vector "${PLUGIN}" "or al, 0" 0c00 "br"
test_vector "${PLUGIN}" "or byte [eax], al" 0800 "br"
test_vector "${PLUGIN}" "or dword [eax], eax" 0900
test_vector "${PLUGIN}" "or eax, dword [eax]" 0b00 "br"
test_vector "${PLUGIN}" "orpd xmm0, xmmword [eax]" 660f5600 "br"
test_vector "${PLUGIN}" "orps xmm0, xmmword [eax]" 0f5600 "br"
test_vector "${PLUGIN}" "out 0, al" e600 "br"
test_vector "${PLUGIN}" "out 0, eax" e700 "br"
test_vector "${PLUGIN}" "out 0x84, eax" e784 "br"
test_vector "${PLUGIN}" "out dx, al" ee "br"
test_vector "${PLUGIN}" "out dx, eax" ef "br"
test_vector "${PLUGIN}" "outsb dx, byte [esi]" 6e "br"
test_vector "${PLUGIN}" "outsd dx, dword [esi]" 6f "br"
test_vector "${PLUGIN}" "pabsb xmm0, xmm0" 660f381cc0 "br"
test_vector "${PLUGIN}" "pabsd xmm0, xmm0" 660f381ec0 "br"
test_vector "${PLUGIN}" "pabsw xmm0, xmm0" 660f381dc0 "br"
test_vector "${PLUGIN}" "packssdw mm0, qword [eax]" 0f6b00 "br"
test_vector "${PLUGIN}" "packssdw xmm0, xmmword [eax]" 660f6b00 "br"
test_vector "${PLUGIN}" "packsswb mm0, qword [eax]" 0f6300 "br"
test_vector "${PLUGIN}" "packsswb xmm0, xmmword [eax]" 660f6300 "br"
test_vector "${PLUGIN}" "packusdw xmm0, xmm0" 660f382bc0 "br"
test_vector "${PLUGIN}" "packuswb mm0, qword [eax]" 0f6700 "br"
test_vector "${PLUGIN}" "packuswb xmm0, xmmword [eax]" 660f6700 "br"
test_vector "${PLUGIN}" "paddb mm0, qword [eax]" 0ffc00 "br"
test_vector "${PLUGIN}" "paddb xmm0, xmmword [eax]" 660ffc00 "br"
test_vector "${PLUGIN}" "paddd mm0, qword [eax]" 0ffe00 "br"
test_vector "${PLUGIN}" "paddd xmm0, xmmword [eax]" 660ffe00 "br"
test_vector "${PLUGIN}" "paddq xmm0, xmmword [eax]" 660fd400 "br"
test_vector "${PLUGIN}" "paddsb mm0, qword [eax]" 0fec00 "br"
test_vector "${PLUGIN}" "paddsb xmm0, xmmword [eax]" 660fec00 "br"
test_vector "${PLUGIN}" "paddsw mm0, qword [eax]" 0fed00 "br"
test_vector "${PLUGIN}" "paddsw xmm0, xmmword [eax]" 660fed00 "br"
test_vector "${PLUGIN}" "paddusb mm0, qword [eax]" 0fdc00 "br"
test_vector "${PLUGIN}" "paddusb xmm0, xmmword [eax]" 660fdc00 "br"
test_vector "${PLUGIN}" "paddusw mm0, qword [eax]" 0fdd00 "br"
test_vector "${PLUGIN}" "paddusw xmm0, xmmword [eax]" 660fdd00 "br"
test_vector "${PLUGIN}" "paddw mm0, qword [eax]" 0ffd00 "br"
test_vector "${PLUGIN}" "paddw xmm0, xmmword [eax]" 660ffd00 "br"
test_vector "${PLUGIN}" "palignr mm0, mm0, 0" 0f3a0fc000 "br"
test_vector "${PLUGIN}" "palignr xmm0, xmm0, 0" 660f3a0fc000 "br"
test_vector "${PLUGIN}" "pand mm0, qword [eax]" 0fdb00 "br"
test_vector "${PLUGIN}" "pandn mm0, qword [eax]" 0fdf00 "br"
test_vector "${PLUGIN}" "pandn xmm0, xmmword [eax]" 660fdf00 "br"
test_vector "${PLUGIN}" "pand xmm0, xmmword [eax]" 660fdb00 "br"
test_vector "${PLUGIN}" "pause" f390 "br"
test_vector "${PLUGIN}" "pavgb mm0, qword [eax]" 0fe000 "br"
test_vector "${PLUGIN}" "pavgb mm0, qword [eax]" 0fe0 "br"
test_vector "${PLUGIN}" "pavgb xmm0, xmmword [eax]" 660fe000 "br"
test_vector "${PLUGIN}" "pavgw mm0, qword [eax]" 0fe300 "br"
test_vector "${PLUGIN}" "pavgw xmm0, xmmword [eax]" 660fe300 "br"
test_vector "${PLUGIN}" "pblendvb xmm0, xmm0" 660f3810c0 "br"
test_vector "${PLUGIN}" "pblendw xmm0, xmm0, 0" 660f3a0ec000 "br"
test_vector "${PLUGIN}" "pclmulqdq xmm0, xmm0, 0" 660f3a44c000 "br"
test_vector "${PLUGIN}" "pcmpeqb mm0, qword [eax]" 0f7400 "br"
test_vector "${PLUGIN}" "pcmpeqb xmm0, xmmword [eax]" 660f7400 "br"
test_vector "${PLUGIN}" "pcmpeqd mm0, qword [eax]" 0f7600 "br"
test_vector "${PLUGIN}" "pcmpeqd xmm0, xmmword [eax]" 660f7600 "br"
test_vector "${PLUGIN}" "pcmpeqq xmm0, xmm0" 660f3829c0 "br"
test_vector "${PLUGIN}" "pcmpeqw mm0, qword [eax]" 0f7500 "br"
test_vector "${PLUGIN}" "pcmpeqw xmm0, xmmword [eax]" 660f7500 "br"
test_vector "${PLUGIN}" "pcmpestri xmm0, xmm0, 0" 660f3a61c000 "br"
test_vector "${PLUGIN}" "pcmpestrm xmm0, xmm0, 0" 660f3a60c000 "br"
test_vector "${PLUGIN}" "pcmpgtb mm0, qword [eax]" 0f6400 "br"
test_vector "${PLUGIN}" "pcmpgtb xmm0, xmmword [eax]" 660f6400 "br"
test_vector "${PLUGIN}" "pcmpgtd mm0, qword [eax]" 0f6600 "br"
test_vector "${PLUGIN}" "pcmpgtd xmm0, xmmword [eax]" 660f6600 "br"
test_vector "${PLUGIN}" "pcmpgtq xmm0, xmm0" 660f3837c0 "br"
test_vector "${PLUGIN}" "pcmpgtw mm0, qword [eax]" 0f6500 "br"
test_vector "${PLUGIN}" "pcmpgtw xmm0, xmmword [eax]" 660f6500 "br"
test_vector "${PLUGIN}" "pcmpistri xmm0, xmm0, 0" 660f3a63c000 "br"
test_vector "${PLUGIN}" "pcmpistrm xmm0, xmm0, 0" 660f3a62c000 "br"
test_vector "${PLUGIN}" "pextrb eax, xmm0, 0" 660f3a14c000 "br"
test_vector "${PLUGIN}" "pextrd eax, xmm0, 0" 660f3a16c000 "br"
test_vector "${PLUGIN}" "pextrq dword [eax], xmm0, 0" 660f3a16 "br"
test_vector "${PLUGIN}" "pextrw eax, mm0, 0" 0fc5c000 "br"
test_vector "${PLUGIN}" "pextrw eax, xmm0, 0" 660fc5c000 "br"
test_vector "${PLUGIN}" "phaddd xmm0, xmmword [eax]" 660f380200 "br"
test_vector "${PLUGIN}" "phaddsw xmm0, xmmword [eax]" 660f380300 "br"
test_vector "${PLUGIN}" "phaddw xmm0, xmmword [eax]" 660f380100 "br"
test_vector "${PLUGIN}" "phminposuw xmm0, xmm0" 660f3841c0 "br"
test_vector "${PLUGIN}" "phsubd xmm0, xmmword [eax]" 660f380600 "br"
test_vector "${PLUGIN}" "phsubsw xmm0, xmmword [eax]" 660f380700 "br"
test_vector "${PLUGIN}" "phsubw xmm0, xmmword [eax]" 660f380500 "br"
test_vector "${PLUGIN}" "pinsrb xmm0, eax, 0" 660f3a20c000 "br"
test_vector "${PLUGIN}" "pinsrd xmm0, dword [eax], 0" 660f3a22 "br"
test_vector "${PLUGIN}" "pinsrq xmm0, dword [eax], 0" 660f3a22 "br"
test_vector "${PLUGIN}" "pinsrw mm0, word [eax], 0x0" 0fc40000 "br"
test_vector "${PLUGIN}" "pinsrw xmm0, word [eax], 0x0" 660fc40000 "br"
test_vector "${PLUGIN}" "pmaddubsw xmm0, xmmword [eax]" 660f380400 "br"
test_vector "${PLUGIN}" "pmaddwd mm0, qword [eax]" 0ff500 "br"
test_vector "${PLUGIN}" "pmaddwd xmm0, xmmword [eax]" 660ff500 "br"
test_vector "${PLUGIN}" "pmaxsb xmm0, xmm0" 660f383cc0 "br"
test_vector "${PLUGIN}" "pmaxsd xmm0, xmm0" 660f383dc0 "br"
test_vector "${PLUGIN}" "pmaxsw mm0, qword [eax]" 0fee00 "br"
test_vector "${PLUGIN}" "pmaxsw xmm0, xmmword [eax]" 660fee00 "br"
test_vector "${PLUGIN}" "pmaxub mm0, qword [eax]" 0fde00 "br"
test_vector "${PLUGIN}" "pmaxub xmm0, xmmword [eax]" 660fde00 "br"
test_vector "${PLUGIN}" "pmaxud xmm0, xmm0" 660f383fc0 "br"
test_vector "${PLUGIN}" "pmaxuw xmm0, xmm0" 660f383ec0 "br"
test_vector "${PLUGIN}" "pminsb xmm0, xmm0" 660f3838c0 "br"
test_vector "${PLUGIN}" "pminsd xmm0, xmm0" 660f3839c0 "br"
test_vector "${PLUGIN}" "pminsw mm0, qword [eax]" 0fea00 "br"
test_vector "${PLUGIN}" "pminsw xmm0, xmmword [eax]" 660fea00 "br"
test_vector "${PLUGIN}" "pminub mm0, qword [eax]" 0fda00 "br"
test_vector "${PLUGIN}" "pminub xmm0, xmmword [eax]" 660fda00 "br"
test_vector "${PLUGIN}" "pminud xmm0, xmm0" 660f383bc0 "br"
test_vector "${PLUGIN}" "pminuw xmm0, xmm0" 660f383ac0 "br"
test_vector "${PLUGIN}" "pmovmskb eax, mm0" 0fd7 "br"
test_vector "${PLUGIN}" "pmovsxbd xmm0, xmm0" 660f3821c0 "br"
test_vector "${PLUGIN}" "pmovsxbq xmm0, xmm0" 660f3822c0 "br"
test_vector "${PLUGIN}" "pmovsxbw xmm0, xmm0" 660f3820c0 "br"
test_vector "${PLUGIN}" "pmovsxdq xmm0, xmm0" 660f3825c0 "br"
test_vector "${PLUGIN}" "pmovsxwd xmm0, xmm0" 660f3823c0 "br"
test_vector "${PLUGIN}" "pmovsxwq xmm0, xmm0" 660f3824c0 "br"
test_vector "${PLUGIN}" "pmovzxbd xmm0, xmm0" 660f3831c0 "br"
test_vector "${PLUGIN}" "pmovzxbq xmm0, xmm0" 660f3832c0 "br"
test_vector "${PLUGIN}" "pmovzxbw xmm0, xmm0" 660f3830c0 "br"
test_vector "${PLUGIN}" "pmovzxdq xmm0, xmm0" 660f3835c0 "br"
test_vector "${PLUGIN}" "pmovzxwd xmm0, xmm0" 660f3833c0 "br"
test_vector "${PLUGIN}" "pmovzxwq xmm0, xmm0" 660f3834c0 "br"
test_vector "${PLUGIN}" "pmuldq xmm0, xmm0" 660f3828c0 "br"
test_vector "${PLUGIN}" "pmulhrsw xmm0, xmm0" 660f380bc0 "br"
test_vector "${PLUGIN}" "pmulhuw mm0, qword [eax]" 0fe400 "br"
test_vector "${PLUGIN}" "pmulhuw xmm0, xmmword [eax]" 660fe400 "br"
test_vector "${PLUGIN}" "pmulhw mm0, qword [eax]" 0fe500 "br"
test_vector "${PLUGIN}" "pmulhw xmm0, xmmword [eax]" 660fe500 "br"
test_vector "${PLUGIN}" "pmulld xmm0, xmm0" 660f3840c0 "br"
test_vector "${PLUGIN}" "pmullw mm0, qword [eax]" 0fd500 "br"
test_vector "${PLUGIN}" "pmullw xmm0, xmmword [eax]" 660fd500 "br"
test_vector "${PLUGIN}" "pmuludq mm0, qword [eax]" 0ff400 "br"
test_vector "${PLUGIN}" "pmuludq xmm0, xmmword [eax]" 660ff400 "br"
test_vector "${PLUGIN}" "popal" 61 "br"
test_vector "${PLUGIN}" "popaw" 6661 "br"
test_vector "${PLUGIN}" "popcnt eax, qword [eax]" f30fb8 "br"
test_vector "${PLUGIN}" "pop ds" 1f
test_vector "${PLUGIN}" "pop dword [eax+4]" 8f4004
test_vector "${PLUGIN}" "pop dword [eax]" 8f00
test_vector "${PLUGIN}" "pop dword [ebp+4]" 8f4504
test_vector "${PLUGIN}" "pop dword [ebp]" 8f4500
test_vector "${PLUGIN}" "pop dword [ecx]" 8f01
test_vector "${PLUGIN}" "pop dword [edi]" 8f07
test_vector "${PLUGIN}" "pop dword [esi]" 8f06
test_vector "${PLUGIN}" "pop dword [esp]" 8f0424
test_vector "${PLUGIN}" "pop eax" 58
test_vector "${PLUGIN}" "pop ebp" 5d
test_vector "${PLUGIN}" "pop ebx" 5b
test_vector "${PLUGIN}" "pop ecx" 59
test_vector "${PLUGIN}" "pop edi" 5f
test_vector "${PLUGIN}" "pop edx" 5a
test_vector "${PLUGIN}" "pop es" 07 "br"
test_vector "${PLUGIN}" "pop esi" 5e
test_vector "${PLUGIN}" "pop esp" 5c
test_vector "${PLUGIN}" "popfd" 9d "br"
test_vector "${PLUGIN}" "pop fs" 0fa1
test_vector "${PLUGIN}" "pop gs" 0fa9
test_vector "${PLUGIN}" "pop ss" 17
test_vector "${PLUGIN}" "por mm0, qword [eax]" 0feb00 "br"
test_vector "${PLUGIN}" "por xmm0, xmmword [eax]" 660feb00 "br"
test_vector "${PLUGIN}" "prefetch byte [eax]" 0f0d00 br "br"
test_vector "${PLUGIN}" "prefetchnta byte [eax]" 0f1800 "br"
test_vector "${PLUGIN}" "prefetcht0 byte [eax]" 0f1808 "br"
test_vector "${PLUGIN}" "prefetcht1 byte [eax]" 0f1810 "br"
test_vector "${PLUGIN}" "prefetcht2 byte [eax]" 0f1818 "br"
test_vector "${PLUGIN}" "psadbw mm0, qword [eax]" 0ff600 "br"
test_vector "${PLUGIN}" "psadbw xmm0, xmmword [eax]" 660ff600 "br"
test_vector "${PLUGIN}" "pshufb mm0, qword [eax]" 0f380000 "br"
test_vector "${PLUGIN}" "pshufb xmm0, xmmword [eax]" 660f380000 "br"
test_vector "${PLUGIN}" "pshufd xmm0, xmmword [eax], 0" 660f700000 "br"
test_vector "${PLUGIN}" "pshufhw xmm0, xmmword [eax], 0" f30f700000 "br"
test_vector "${PLUGIN}" "pshuflw xmm0, xmmword [eax], 0" f20f700000 "br"
test_vector "${PLUGIN}" "pshufw mm0, qword [eax], 0" 0f700000 "br"
test_vector "${PLUGIN}" "psignb xmm0, xmm0" 660f3808c0 "br"
test_vector "${PLUGIN}" "psignd xmm0, xmm0" 660f380ac0 "br"
test_vector "${PLUGIN}" "psignw xmm0, xmm0" 660f3809c0 "br"
test_vector "${PLUGIN}" "pslld mm0, 0" 0f72f000 "br"
test_vector "${PLUGIN}" "pslld mm0, qword [eax]" 0ff200 "br"
test_vector "${PLUGIN}" "pslldq xmm0, 0" 660f73f800 "br"
test_vector "${PLUGIN}" "pslld xmm0, 0" 660f72f000 "br"
test_vector "${PLUGIN}" "pslld xmm0, xmmword [eax]" 660ff200 "br"
test_vector "${PLUGIN}" "psllq mm0, 0" 0f73f000 "br"
test_vector "${PLUGIN}" "psllq mm0, qword [eax]" 0ff300 "br"
test_vector "${PLUGIN}" "psllq xmm0, 0" 660f73f000 "br"
test_vector "${PLUGIN}" "psllq xmm0, xmmword [eax]" 660ff300 "br"
test_vector "${PLUGIN}" "psllw mm0, 0" 0f71f000 "br"
test_vector "${PLUGIN}" "psllw mm0, qword [eax]" 0ff100 "br"
test_vector "${PLUGIN}" "psllw xmm0, 0" 660f71f000 "br"
test_vector "${PLUGIN}" "psllw xmm0, xmmword [eax]" 660ff100 "br"
test_vector "${PLUGIN}" "psrad mm0, 0" 0f72e000 "br"
test_vector "${PLUGIN}" "psrad mm0, qword [eax]" 0fe200 "br"
test_vector "${PLUGIN}" "psrad xmm0, 0" 660f72e000 "br"
test_vector "${PLUGIN}" "psrad xmm0, xmmword [eax]" 660fe200 "br"
test_vector "${PLUGIN}" "psraw mm0, 0" 0f71e000 "br"
test_vector "${PLUGIN}" "psraw mm0, qword [eax]" 0fe100 "br"
test_vector "${PLUGIN}" "psraw xmm0, 0" 660f71e000 "br"
test_vector "${PLUGIN}" "psraw xmm0, xmmword [eax]" 660fe100 "br"
test_vector "${PLUGIN}" "psrld mm0, 0" 0f72d000 "br"
test_vector "${PLUGIN}" "psrld mm0, qword [eax]" 0fd200 "br"
test_vector "${PLUGIN}" "psrldq xmm0, 0" 660f73d800 "br"
test_vector "${PLUGIN}" "psrld xmm0, 0" 660f72d000 "br"
test_vector "${PLUGIN}" "psrld xmm0, xmmword [eax]" 660fd200 "br"
test_vector "${PLUGIN}" "psrlq mm0, 0" 0f73d000 "br"
test_vector "${PLUGIN}" "psrlq mm0, qword [eax]" 0fd300 "br"
test_vector "${PLUGIN}" "psrlq xmm0, 0" 660f73d000 "br"
test_vector "${PLUGIN}" "psrlq xmm0, xmmword [eax]" 660fd300 "br"
test_vector "${PLUGIN}" "psrlw mm0, 0" 0f71d000 "br"
test_vector "${PLUGIN}" "psrlw mm0, qword [eax]" 0fd100 "br"
test_vector "${PLUGIN}" "psrlw xmm0, 0" 660f71d000 "br"
test_vector "${PLUGIN}" "psrlw xmm0, xmmword [eax]" 660fd100 "br"
test_vector "${PLUGIN}" "psubb mm0, qword [eax]" 0ff800 "br"
test_vector "${PLUGIN}" "psubb xmm0, xmmword [eax]" 660ff800 "br"
test_vector "${PLUGIN}" "psubd mm0, qword [eax]" 0ffa00 "br"
test_vector "${PLUGIN}" "psubd xmm0, xmmword [eax]" 660ffa00 "br"
test_vector "${PLUGIN}" "psubq mm0, qword [eax]" 0ffb00 "br"
test_vector "${PLUGIN}" "psubq xmm0, xmmword [eax]" 660ffb00 "br"
test_vector "${PLUGIN}" "psubsb mm0, xmmword [eax]" 0fe800 "br"
test_vector "${PLUGIN}" "psubsb xmm0, xmmword [eax]" 660fe800 "br"
test_vector "${PLUGIN}" "psubsw mm0, xmmword [eax]" 0fe900 "br"
test_vector "${PLUGIN}" "psubsw xmm0, xmmword [eax]" 660fe900 "br"
test_vector "${PLUGIN}" "psubusb mm0, qword [eax]" 0fd800 "br"
test_vector "${PLUGIN}" "psubusb xmm0, xmmword [eax]" 660fd800 "br"
test_vector "${PLUGIN}" "psubusw mm0, qword [eax]" 0fd900 "br"
test_vector "${PLUGIN}" "psubusw xmm0, xmmword [eax]" 660fd900 "br"
test_vector "${PLUGIN}" "psubw mm0, qword [eax]" 0ff900 "br"
test_vector "${PLUGIN}" "psubw xmm0, xmmword [eax]" 660ff900 "br"
test_vector "${PLUGIN}" "ptest xmm0, xmm0" 660f3817c0 "br"
test_vector "${PLUGIN}" "punpckhbw mm0, qword [eax]" 0f6800 "br"
test_vector "${PLUGIN}" "punpckhbw xmm0, xmmword [eax]" 660f6800 "br"
test_vector "${PLUGIN}" "punpckhdq mm0, qword [eax]" 0f6a00 "br"
test_vector "${PLUGIN}" "punpckhdq xmm0, xmmword [eax]" 660f6a00 "br"
test_vector "${PLUGIN}" "punpckhqdq xmm0, xmmword [eax]" 660f6d00 "br"
test_vector "${PLUGIN}" "punpckhwd mm0, qword [eax]" 0f6900 "br"
test_vector "${PLUGIN}" "punpckhwd xmm0, xmmword [eax]" 660f6900 "br"
test_vector "${PLUGIN}" "punpcklbw mm0, qword [eax]" 0f6000 "br"
test_vector "${PLUGIN}" "punpcklbw xmm0, xmmword [eax]" 660f6000 "br"
test_vector "${PLUGIN}" "punpckldq mm0, qword [eax]" 0f6200 "br"
test_vector "${PLUGIN}" "punpckldq xmm0, xmmword [eax]" 660f6200 "br"
test_vector "${PLUGIN}" "punpcklqdq xmm0, xmmword [eax]" 660f6c00 "br"
test_vector "${PLUGIN}" "punpcklwd mm0, qword [eax]" 0f6100 "br"
test_vector "${PLUGIN}" "punpcklwd xmm0, xmmword [eax]" 660f6100 "br"
test_vector "${PLUGIN}" "push 0" 6a00
test_vector "${PLUGIN}" "pushal" 60 "br"
test_vector "${PLUGIN}" "push cs" 0e
test_vector "${PLUGIN}" "push ds" 1e
test_vector "${PLUGIN}" "push dword [eax+8]" ff7008
test_vector "${PLUGIN}" "push dword [eax]" ff30
test_vector "${PLUGIN}" "push dword [ebp+4]" ff7504
test_vector "${PLUGIN}" "push dword [ebp]" ff7500
test_vector "${PLUGIN}" "push dword [ebx+4]" ff7304
test_vector "${PLUGIN}" "push dword [ecx]" ff31
test_vector "${PLUGIN}" "push dword [edi]" ff37
test_vector "${PLUGIN}" "push dword [esi+4]" ff7604
test_vector "${PLUGIN}" "push dword [esi]" ff36
test_vector "${PLUGIN}" "push dword [esp+4]" ff742404
test_vector "${PLUGIN}" "push dword [esp]" ff3424
test_vector "${PLUGIN}" "push eax" 50
test_vector "${PLUGIN}" "push ebp" 55
test_vector "${PLUGIN}" "push ebx" 53
test_vector "${PLUGIN}" "push ecx" 51
test_vector "${PLUGIN}" "push edi" 57
test_vector "${PLUGIN}" "push edx" 52
test_vector "${PLUGIN}" "push es" 06 "br"
test_vector "${PLUGIN}" "push esi" 56
test_vector "${PLUGIN}" "push esp" 54
test_vector "${PLUGIN}" "pushfd" 9c "br"
test_vector "${PLUGIN}" "push fs" 0fa0
test_vector "${PLUGIN}" "push gs" 0fa8
test_vector "${PLUGIN}" "push ss" 16
test_vector "${PLUGIN}" "pxor mm0, qword [eax]" 0fef00 "br"
test_vector "${PLUGIN}" "pxor xmm0, xmmword [eax]" 660fef00 "br"
test_vector "${PLUGIN}" "rcpps xmm0, xmmword [eax]" 0f5300 "br"
test_vector "${PLUGIN}" "rcpss xmm0, dword [eax]" f30f5300 "br"
test_vector "${PLUGIN}" "rdmsr" 0f32 "br"
test_vector "${PLUGIN}" "rdpmc" 0f33 "br"
test_vector "${PLUGIN}" "rdtsc" 0f31
test_vector "${PLUGIN}" "rdtscp" 0f01f9 "br"
test_vector "${PLUGIN}" "repne movsb byte es:[edi], byte ptr [esi]" f2a4 "br"
test_vector "${PLUGIN}" "repz movsb" f3a4 "br" #or repe
test_vector "${PLUGIN}" "ret" c3
test_vector "${PLUGIN}" "retf 0" ca0000
test_vector "${PLUGIN}" "retf" cb
test_vector "${PLUGIN}" "retw" 66c3 "br"
test_vector "${PLUGIN}" "rol byte [eax], 0" c00000 "br"
test_vector "${PLUGIN}" "rol byte [eax], 1" d000 "br"
test_vector "${PLUGIN}" "rol byte [eax], cl" d200 "br"
test_vector "${PLUGIN}" "rol dword [eax], 0" c10000 "br"
test_vector "${PLUGIN}" "rol dword [eax], 1" d100 "br"
test_vector "${PLUGIN}" "rol dword [eax], cl" d300 "br"
test_vector "${PLUGIN}" "roundpd xmm0, xmm0, 0" 660f3a09c000 "br"
test_vector "${PLUGIN}" "roundps xmm0, xmm0, 0" 660f3a08c000 "br"
test_vector "${PLUGIN}" "roundsd xmm0, xmm0, 0" 660f3a0bc000 "br"
test_vector "${PLUGIN}" "roundss xmm0, xmm0, 0" 660f3a0ac000 "br"
test_vector "${PLUGIN}" "rsm" 0faa "br"
test_vector "${PLUGIN}" "rsqrtps xmm0, xmmword [eax]" 0f5200 "br"
test_vector "${PLUGIN}" "rsqrtss xmm0, dword [eax]" f30f5200 "br"
test_vector "${PLUGIN}" "sahf" 9e "br"
test_vector "${PLUGIN}" "salc" d6 "br"
test_vector "${PLUGIN}" "sbb al, 0" 1c00 "br"
test_vector "${PLUGIN}" "sbb al, byte [eax]" 1a00 "br"
test_vector "${PLUGIN}" "sbb byte [eax], al" 1800 "br"
test_vector "${PLUGIN}" "sbb dword [eax], eAX" 1900 "br"
test_vector "${PLUGIN}" "sbb eax, dword [eax]" 1b00 "br"
test_vector "${PLUGIN}" "scasb al, byte es:[edi]" ae "br"
test_vector "${PLUGIN}" "scasd eax, dword es:[edi]" af "br"
test_vector "${PLUGIN}" "seta byte [eax]" 0f9700
test_vector "${PLUGIN}" "setae byte [eax]" 0f9300
test_vector "${PLUGIN}" "setb byte [eax]" 0f9200
test_vector "${PLUGIN}" "setbe byte [eax]" 0f9600
test_vector "${PLUGIN}" "sete byte [eax]" 0f9400
test_vector "${PLUGIN}" "setg byte [eax]" 0f9f00
test_vector "${PLUGIN}" "setge byte [eax]" 0f9d00
test_vector "${PLUGIN}" "setl byte [eax]" 0f9c00
test_vector "${PLUGIN}" "setle byte [eax]" 0f9e00
test_vector "${PLUGIN}" "setne byte [eax]" 0f9500
test_vector "${PLUGIN}" "setno byte [eax]" 0f9100
test_vector "${PLUGIN}" "setnp byte [eax]" 0f9b00
test_vector "${PLUGIN}" "setns byte [eax]" 0f9900
test_vector "${PLUGIN}" "seto byte [eax]" 0f9000
test_vector "${PLUGIN}" "setp byte [eax]" 0f9a00
test_vector "${PLUGIN}" "sets byte [eax]" 0f9800
test_vector "${PLUGIN}" "sfence" 0faef8 "br"
test_vector "${PLUGIN}" "sgdt [eax]" 0f0100 "br"
test_vector "${PLUGIN}" "shld dword [eax], eax, 0" 0fa40000 "br"
test_vector "${PLUGIN}" "shld dword [eax], eax, cl" 0fa500 "br"
test_vector "${PLUGIN}" "shl edx, 5" c1f205 # wbs (correct: c1e205)
test_vector "${PLUGIN}" "shrd dword [eax], eax, 0" 0fac0000 "br"
test_vector "${PLUGIN}" "shrd dword [eax], eax, cl" 0fad00 "br"
test_vector "${PLUGIN}" "shufpd xmm0, xmmword [eax], 0x0" 660fc60000 "br"
test_vector "${PLUGIN}" "shufps xmm0, xmmword [eax], 0" 0fc60000 "br"
test_vector "${PLUGIN}" "sidt [eax]" 0f0108 "br"
test_vector "${PLUGIN}" "skinit" 0f01de "br" # this instruction doesn't seem to need arguments
test_vector "${PLUGIN}" "sldt word [eax]" 0f0000 "br"
test_vector "${PLUGIN}" "smsw ax" 660f01e0 "br"
test_vector "${PLUGIN}" "smsw eax" 0f01e0 "br"
test_vector "${PLUGIN}" "smsw word [eax]" 0f0120 "br"
test_vector "${PLUGIN}" "sqrtpd xmm0, xmmword [eax]" 660f5100 "br"
test_vector "${PLUGIN}" "sqrtps xmm0, xmmword [eax]" 0f5100 "br"
test_vector "${PLUGIN}" "sqrtsd xmm0, qword [eax]" f20f5100 "br"
test_vector "${PLUGIN}" "sqrtss xmm0, dword [eax]" f30f5100 "br"
test_vector "${PLUGIN}" "stc" f9 "br"
test_vector "${PLUGIN}" "std" fd "br"
test_vector "${PLUGIN}" "stgi" 0f01dc "br"
test_vector "${PLUGIN}" "sti" fb
test_vector "${PLUGIN}" "stmxcsr dword [eax]" 0fae18 "br"
test_vector "${PLUGIN}" "stosb byte es:[edi], al" aa "br"
test_vector "${PLUGIN}" "stosd dword es:[edi], eax" ab "br"
test_vector "${PLUGIN}" "str word [eax]" 0f0008 "br"
test_vector "${PLUGIN}" "sub al, 0" 2c00 "br"
test_vector "${PLUGIN}" "sub al, byte [eax]" 2a00 "br"
test_vector "${PLUGIN}" "sub byte [eax], al" 2800 "br"
test_vector "${PLUGIN}" "sub dword [eax], 1" 832801
test_vector "${PLUGIN}" "sub dword [eax+4], -666" 81680466fdffff
test_vector "${PLUGIN}" "sub dword [eax+4], 666" 8168049a020000
test_vector "${PLUGIN}" "sub dword [eax+666], 666" 81a89a0200009a020000
test_vector "${PLUGIN}" "sub dword [eax], 666" 81289a020000
test_vector "${PLUGIN}" "sub dword [eax], eax" 2900
test_vector "${PLUGIN}" "sub dword [ebp+4], 1" 836d0401
test_vector "${PLUGIN}" "sub dword [ebp+555], 1" 83ad2b02000001
test_vector "${PLUGIN}" "sub dword [ebp+555], 7357" 81ad2b020000bd1c0000
test_vector "${PLUGIN}" "sub dword [ebp-555], 7357" 81add5fdffffbd1c0000
test_vector "${PLUGIN}" "sub dword [ebx], 1" 832b01
test_vector "${PLUGIN}" "sub eax, 3" 83e803
test_vector "${PLUGIN}" "sub eax, -666" 2d66fdffff
test_vector "${PLUGIN}" "sub eax, 666" 2d9a020000
test_vector "${PLUGIN}" "sub eax, dword [eax]" 2b00 "br"
test_vector "${PLUGIN}" "sub eax, eax" 29c0
test_vector "${PLUGIN}" "sub eax, ebx" 29d8
test_vector "${PLUGIN}" "sub ebx, 3" 83eb03
test_vector "${PLUGIN}" "sub ebx, -3" 83ebfd
test_vector "${PLUGIN}" "sub ebx, 666" 81eb9a020000
test_vector "${PLUGIN}" "sub [ebx], eax" 2903
test_vector "${PLUGIN}" "sub ebx, eax" 29c3
test_vector "${PLUGIN}" "sub ecx, 666" 81e99a020000
test_vector "${PLUGIN}" "sub esi,-334" 81eeb2feffff
test_vector "${PLUGIN}" "subpd xmm0, xmmword [eax]" 660f5c00 "br"
test_vector "${PLUGIN}" "subps xmm0, xmmword [eax]" 0f5c00 "br"
test_vector "${PLUGIN}" "subsd xmm0, qword [eax]" f20f5c00 "br"
test_vector "${PLUGIN}" "subss xmm0, dword [eax]" f30f5c00 "br"
test_vector "${PLUGIN}" "swapgs" 0f1ff8 "br"
test_vector "${PLUGIN}" "syscall" 0f05
test_vector "${PLUGIN}" "sysenter" 0f34 "br"
test_vector "${PLUGIN}" "sysexit" 0f35
test_vector "${PLUGIN}" "sysret" 0f07
test_vector "${PLUGIN}" "test al, 0" a800 "br"
test_vector "${PLUGIN}" "test byte [eax], 0" f60000 "br"
test_vector "${PLUGIN}" "test byte [eax], 0" f60800 "br"
test_vector "${PLUGIN}" "test byte [eax], al" 8400 "br"
test_vector "${PLUGIN}" "test dword [eax], 0" f70000000000 "br"
test_vector "${PLUGIN}" "test dword [eax], 0" f70000 "br"
test_vector "${PLUGIN}" "test dword [eax], 0" f70800 "br"
test_vector "${PLUGIN}" "test dword [eax], eax" 8500 "br"
test_vector "${PLUGIN}" "test eax, 0" a900000000 "br"
test_vector "${PLUGIN}" "test eax, ebx" 85d8
test_vector "${PLUGIN}" "test edx, esi" 85f2
test_vector "${PLUGIN}" "ucomisd xmm0, qword [eax]" 660f2e00 "br"
test_vector "${PLUGIN}" "ucomiss xmm0, dword [eax]" 0f2e00 "br"
test_vector "${PLUGIN}" "ud2" 0f0b
test_vector "${PLUGIN}" "unpckhpd xmm0, xmmword [eax]" 660f1500 "br"
test_vector "${PLUGIN}" "unpckhps xmm0, xmmword [eax]" 0f15 "br"
test_vector "${PLUGIN}" "unpcklpd xmm0, xmmword [eax]" 660f1400 "br"
test_vector "${PLUGIN}" "unpcklps xmm0, xmmword [eax]" 0f14 "br"
test_vector "${PLUGIN}" "vaddpd ymm0, ymm0, ymm0" c5fd58c0 "br"
test_vector "${PLUGIN}" "vaesdeclast xmm0, xmm0, xmm0" c4e279dfc0 "br"
test_vector "${PLUGIN}" "vaesdec xmm0, xmm0, xmm0" c4e279dec0 "br"
test_vector "${PLUGIN}" "vaesenclast xmm0, xmm0, xmm0" c4e279ddc0 "br"
test_vector "${PLUGIN}" "vaesenc xmm0, xmm0, xmm0" c4e279dcc0 "br"
test_vector "${PLUGIN}" "vaesimc xmm0, xmm0" c4e279dbc0 "br"
test_vector "${PLUGIN}" "vaeskeygenassist xmm0, xmm0, 0" c4e379dfc000 "br"
test_vector "${PLUGIN}" "vaeskeygenassist xmm0, xmm0, 0x0" c4e379dfc000 "br"
test_vector "${PLUGIN}" "vbroadcastf128 ymm0, xmmword [0]" c4e27d1a0500000000 "br"
test_vector "${PLUGIN}" "vbroadcastsd ymm0, qword [0]" c4e27d190500000000 "br"
test_vector "${PLUGIN}" "vbroadcastss ymm0, dword [eax]" c4e27d1800 "br"
test_vector "${PLUGIN}" "vcvtph2ps xmm0, xmm0, 0" 8fe878a0c000 "br"
test_vector "${PLUGIN}" "vcvtps2ph xmm0, xmm0, 0" 8fe878a1c000 "br"
test_vector "${PLUGIN}" "verr ax" 0f00e0 "br"
test_vector "${PLUGIN}" "verr [eax]" 0f0020 "br"
test_vector "${PLUGIN}" "verw ax" 0f00e8 "br"
test_vector "${PLUGIN}" "verw word [eax]" 0f0028 "br"
test_vector "${PLUGIN}" "vextractf128 xmm0, ymm0, 0" c4e37d19c000 "br"
test_vector "${PLUGIN}" "vextractf128 xmm0, ymm0, 0x0" c4e37d19c000 "br"
test_vector "${PLUGIN}" "vfmadd132pd xmm0, xmm0, xmm0" c4e2f998c0 "br"
test_vector "${PLUGIN}" "vfmadd213pd xmm0, xmm0, xmm0" c4e2f9a8c0 "br"
test_vector "${PLUGIN}" "vfmadd231pd xmm0, xmm0, xmm0" c4e2f9b8c0 "br"
test_vector "${PLUGIN}" "vfmaddpd xmm0, xmm0, xmm0, xmm0" c4e37969c000 "br"
test_vector "${PLUGIN}" "vfmaddpd ymm0, ymm0, ymm0, ymm0" c4e37d69c000 "br"
test_vector "${PLUGIN}" "vfmaddps xmm0, xmm0, xmm0, xmm0" c4e37968c000 "br"
test_vector "${PLUGIN}" "vfmaddps ymm0, ymm0, ymm0, ymm0" c4e37d68c000 "br"
test_vector "${PLUGIN}" "vfmaddsd xmm0, xmm0, xmm0, xmm0" c4e3796bc000 "br"
test_vector "${PLUGIN}" "vfmaddss xmm0, xmm0, xmm0, xmm0" c4e3796ac000 "br"
test_vector "${PLUGIN}" "vfmaddsubpd xmm0, xmm0, xmm0, xmm0" c4e3795dc000 "br"
test_vector "${PLUGIN}" "vfmaddsubpd ymm0, ymm0, ymm0, ymm0" c4e37d5dc000 "br"
test_vector "${PLUGIN}" "vfmaddsubps xmm0, xmm0, xmm0, xmm0" c4e3795cc000 "br"
test_vector "${PLUGIN}" "vfmaddsubps ymm0, ymm0, ymm0, ymm0" c4e37d5cc000 "br"
test_vector "${PLUGIN}" "vfmsubaddpd xmm0, xmm0, xmm0, xmm0" c4e3795fc000 "br"
test_vector "${PLUGIN}" "vfmsubaddpd ymm0, ymm0, ymm0, ymm0" c4e37d5fc000 "br"
test_vector "${PLUGIN}" "vfmsubaddps xmm0, xmm0, xmm0, xmm0" c4e3795ec000 "br"
test_vector "${PLUGIN}" "vfmsubaddps ymm0, ymm0, ymm0, ymm0" c4e37d5ec000 "br"
test_vector "${PLUGIN}" "vfmsubpd xmm0, xmm0, xmm0, xmm0" c4e3796dc000 "br"
test_vector "${PLUGIN}" "vfmsubpd ymm0, ymm0, ymm0, ymm0" c4e37d6dc000 "br"
test_vector "${PLUGIN}" "vfmsubps xmm0, xmm0, xmm0, xmm0" c4e3796cc000 "br"
test_vector "${PLUGIN}" "vfmsubps ymm0, ymm0, ymm0, ymm0" c4e37d6cc000 "br"
test_vector "${PLUGIN}" "vfmsubsd xmm0, xmm0, xmm0, xmm0" c4e3796fc000 "br"
test_vector "${PLUGIN}" "vfmsubss xmm0, xmm0, xmm0, xmm0" c4e3796ec000 "br"
test_vector "${PLUGIN}" "vfnmaddpd xmm0, xmm0, xmm0, xmm0" c4e37979c000 "br"
test_vector "${PLUGIN}" "vfnmaddpd ymm0, ymm0, ymm0, ymm0" c4e37d79c000 "br"
test_vector "${PLUGIN}" "vfnmaddps xmm0, xmm0, xmm0, xmm0" c4e37978c000 "br"
test_vector "${PLUGIN}" "vfnmaddps ymm0, ymm0, ymm0, ymm0" c4e37d78c000 "br"
test_vector "${PLUGIN}" "vfnmaddsd xmm0, xmm0, xmm0, xmm0" c4e3797bc000 "br"
test_vector "${PLUGIN}" "vfnmaddss xmm0, xmm0, xmm0, xmm0" c4e3797ac000 "br"
test_vector "${PLUGIN}" "vfnmsubpd xmm0, xmm0, xmm0, xmm0" c4e3797dc000 "br"
test_vector "${PLUGIN}" "vfnmsubpd ymm0, ymm0, ymm0, ymm0" c4e37d7dc000 "br"
test_vector "${PLUGIN}" "vfnmsubps xmm0, xmm0, xmm0, xmm0" c4e3797cc000 "br"
test_vector "${PLUGIN}" "vfnmsubps ymm0, ymm0, ymm0, ymm0" c4e37d7cc000 "br"
test_vector "${PLUGIN}" "vfnmsubsd xmm0, xmm0, xmm0, xmm0" c4e3797fc000 "br"
test_vector "${PLUGIN}" "vfnmsubss xmm0, xmm0, xmm0, xmm0" c4e3797ec000 "br"
test_vector "${PLUGIN}" "vfrczpd xmm0, xmm0" 8fe97881c0 "br"
test_vector "${PLUGIN}" "vfrczps xmm0, xmm0" 8fe97880c0 "br"
test_vector "${PLUGIN}" "vfrczsd xmm0, xmm0" 8fe97883c0 "br"
test_vector "${PLUGIN}" "vfrczss xmm0, xmm0" 8fe97882c0 "br"
test_vector "${PLUGIN}" "vinsertf128 ymm0, ymm0, xmm0, 0" c4e37d18c000 "br"
test_vector "${PLUGIN}" "vinsertf128 ymm0, ymm0, xmm0, 0x0" c4e37d18c000 "br"
test_vector "${PLUGIN}" "vmaskmovpd ymm0, ymm0, ymmword [0]" c4e27d2d0500000000 "br"
test_vector "${PLUGIN}" "vmaskmovps ymm0, ymm0, ymmword [0]" c4e27d2c0500000000 "br"
test_vector "${PLUGIN}" "vmcall" 0f01c1 "br"
test_vector "${PLUGIN}" "vmclear qword [eax]" 660fc730 "br"
test_vector "${PLUGIN}" "vmlaunch" 0f01c2 "br"
test_vector "${PLUGIN}" "vmload" 0f01da "br" # this instruction doesn't seem to need arguments
test_vector "${PLUGIN}" "vmmcall" 0f01d9 "br"
test_vector "${PLUGIN}" "vmptrld qword [eax]" 0fc730 "br"
test_vector "${PLUGIN}" "vmptrst qword [eax]" 0fc738 "br"
test_vector "${PLUGIN}" "vmresume" 0f01c3 "br"
test_vector "${PLUGIN}" "vmrun" 0f01d8 "br" # this instruction doesn't seem to need arguments
test_vector "${PLUGIN}" "vmsave" 0f01db "br" # this instruction doesn't seem to need arguments
test_vector "${PLUGIN}" "vmxoff" 0f01c4 "br"
test_vector "${PLUGIN}" "vmxon qword [eax]" f30fc730 "br"
test_vector "${PLUGIN}" "vpcmov xmm0, xmm0, xmm0, xmm0" 8fe878a2c000 "br"
test_vector "${PLUGIN}" "vpcomb xmm0, xmm0, xmm0, 0" 8fe878ccc000 "br"
test_vector "${PLUGIN}" "vpcomd xmm0, xmm0, xmm0, 0" 8fe878cec000 "br"
test_vector "${PLUGIN}" "vpcomq xmm0, xmm0, xmm0, 0" 8fe878cfc000 "br"
test_vector "${PLUGIN}" "vpcomub xmm0, xmm0, xmm0, 0" 8fe878ecc000 "br"
test_vector "${PLUGIN}" "vpcomud xmm0, xmm0, xmm0, 0" 8fe878eec000 "br"
test_vector "${PLUGIN}" "vpcomuq xmm0, xmm0, xmm0, 0" 8fe878efc000 "br"
test_vector "${PLUGIN}" "vpcomuw xmm0, xmm0, xmm0, 0" 8fe878edc000 "br"
test_vector "${PLUGIN}" "vpcomw xmm0, xmm0, xmm0, 0" 8fe878cdc000 "br"
test_vector "${PLUGIN}" "vperm2f128 ymm0, ymm0, ymm0, 0" c4e37d06c000 "br"
test_vector "${PLUGIN}" "vperm2f128 ymm0, ymm0, ymm0, 0x0" c4e37d06c000  "br"
test_vector "${PLUGIN}" "vpermilpd ymm0, ymm0, ymmword [0]" c4e27d0d0500000000 "br"
test_vector "${PLUGIN}" "vpermilps ymm0, ymm0, ymmword [0]" c4e27d0c0500000000 "br"
test_vector "${PLUGIN}" "vphaddbd xmm0, xmm0" 8fe978c2c0 "br"
test_vector "${PLUGIN}" "vphaddbq xmm0, xmm0" 8fe978c3c0 "br"
test_vector "${PLUGIN}" "vphaddbw xmm0, xmm0" 8fe978c1c0 "br"
test_vector "${PLUGIN}" "vphadddq xmm0, xmm0" 8fe978cbc0 "br"
test_vector "${PLUGIN}" "vphaddubd xmm0, xmm0" 8fe978d2c0 "br"
test_vector "${PLUGIN}" "vphaddubq xmm0, xmm0" 8fe978d3c0 "br"
test_vector "${PLUGIN}" "vphaddubw xmm0, xmm0" 8fe978d1c0 "br"
test_vector "${PLUGIN}" "vphaddudq xmm0, xmm0" 8fe978dbc0 "br"
test_vector "${PLUGIN}" "vphadduwd xmm0, xmm0" 8fe978d6c0 "br"
test_vector "${PLUGIN}" "VPHADDUWQ XMM0, XMM0" 8fe978d7c0 "br"
test_vector "${PLUGIN}" "vphaddwd xmm0, xmm0" 8fe978c6c0 "br"
test_vector "${PLUGIN}" "vphaddwq xmm0, xmm0" 8fe978c7c0 "br"
test_vector "${PLUGIN}" "vphsubbw xmm0, xmm0" 8fe978e1c0 "br"
test_vector "${PLUGIN}" "vphsubdq xmm0, xmm0" 8fe978e3c0 "br"
test_vector "${PLUGIN}" "vphsubwd xmm0, xmm0" 8fe978e2c0 "br"
test_vector "${PLUGIN}" "vpmacsddxmm0, xmm0, xmm0, xmm0" 8fe8789ec000 "br"
test_vector "${PLUGIN}" "vpmacsdqh xmm0, xmm0, xmm0, xmm0" 8fe8789fc000 "br"
test_vector "${PLUGIN}" "vpmacsdql xmm0, xmm0, xmm0, xmm0" 8fe87897c000 "br"
test_vector "${PLUGIN}" "vpmacssdd xmm0, xmm0, xmm0, xmm0" 8fe8788ec000 "br"
test_vector "${PLUGIN}" "vpmacssdqh xmm0, xmm0, xmm0, xmm0" 8fe8788fc000 "br"
test_vector "${PLUGIN}" "vpmacssdql xmm0, xmm0, xmm0, xmm0" 8fe87887c000 "br"
test_vector "${PLUGIN}" "vpmacsswd xmm0, xmm0, xmm0, xmm0" 8fe87886c000 "br"
test_vector "${PLUGIN}" "vpmacssww xmm0, xmm0, xmm0, xmm0" 8fe87885c000 "br"
test_vector "${PLUGIN}" "vpmacswd xmm0, xmm0, xmm0, xmm0" 8fe87896c000 "br"
test_vector "${PLUGIN}" "vpmacsww xmm0, xmm0, xmm0, xmm0" 8fe87895c000 "br"
test_vector "${PLUGIN}" "vpmadcsswd xmm0, xmm0, xmm0, xmm0" 8fe878a6c000 "br"
test_vector "${PLUGIN}" "VPMADCSSWD XMM0, XMM0, XMM0, XMM0" 8fe878a6c000 "br"
test_vector "${PLUGIN}" "vpmadcswd xmm0, xmm0, xmm0, xmm0" 8fe878b6c000 "br"
test_vector "${PLUGIN}" "vpperm xmm0, xmm0, xmm0, xmm0" 8fe878a3c000 "br"
test_vector "${PLUGIN}" "vprotb xmm0, xmm0, xmm0" 8fe97890c0 "br"
test_vector "${PLUGIN}" "vprotd xmm0, xmm0, xmm0" 8fe97892c0 "br"
test_vector "${PLUGIN}" "vprotq xmm0, xmm0, xmm0" 8fe97893c0 "br"
test_vector "${PLUGIN}" "vprotw xmm0, xmm0, xmm0" 8fe97891c0 "br"
test_vector "${PLUGIN}" "vpshab xmm0, xmm0, xmm0" 8fe97898c0 "br"
test_vector "${PLUGIN}" "vpshad xmm0, xmm0, xmm0" 8fe9789ac0 "br"
test_vector "${PLUGIN}" "vpshaq xmm0, xmm0, xmm0" 8fe9789bc0 "br"
test_vector "${PLUGIN}" "vpshaw xmm0, xmm0, xmm0" 8fe97899c0 "br"
test_vector "${PLUGIN}" "vpshlb xmm0, xmm0, xmm0" 8fe97894c0 "br"
test_vector "${PLUGIN}" "vpshld xmm0, xmm0, xmm0" 8fe97896c0 "br"
test_vector "${PLUGIN}" "vpshlq xmm0, xmm0, xmm0" 8fe97897c0 "br"
test_vector "${PLUGIN}" "vpshlw xmm0, xmm0, xmm0" 8fe97895c0 "br"
test_vector "${PLUGIN}" "vtestpd ymm0, ymm0" c4e27d0fc0 "br"
test_vector "${PLUGIN}" "vtestps ymm0, ymm0" c4e27d0ec0 "br"
test_vector "${PLUGIN}" "vzeroall" c5fc77 "br"
test_vector "${PLUGIN}" "vzeroupper" c5f877 "br"
test_vector "${PLUGIN}" "wbinvd" 0f09 "br"
test_vector "${PLUGIN}" "wrmsr" 0f30 "br"
test_vector "${PLUGIN}" "xadd byte [eax], al" 0fc000 "br"
test_vector "${PLUGIN}" "xadd dword [eax], eax" 0fc100 "br"
test_vector "${PLUGIN}" "xchg byte [eax], al" 8600 "br"
test_vector "${PLUGIN}" "xchg dword [eax], eax" 8700 "br"
test_vector "${PLUGIN}" "xchg eax, eax" 90
test_vector "${PLUGIN}" "xchg eax, ebp" 95 "br"
test_vector "${PLUGIN}" "xchg eax, ebx" 87d8 # sbs: 93
test_vector "${PLUGIN}" "xchg eax, ebx" 93 "br"
test_vector "${PLUGIN}" "xchg eax, ecx" 91 "br"
test_vector "${PLUGIN}" "xchg eax, edi" 97 "br"
test_vector "${PLUGIN}" "xchg eax, edx" 92 "br"
test_vector "${PLUGIN}" "xchg eax, esi" 96 "br"
test_vector "${PLUGIN}" "xchg eax, esp" 87e0 # sbs: 94
test_vector "${PLUGIN}" "xchg eax, esp" 94 "br"
test_vector "${PLUGIN}" "xchg ebx, ecx" 87cb
test_vector "${PLUGIN}" "xchg ecx, ebp" 87e9
test_vector "${PLUGIN}" "xchg ecx, ebx" 87d9
test_vector "${PLUGIN}" "xchg ecx, ecx" 90 # wbs (correct: 87c9)
test_vector "${PLUGIN}" "xgetbv" 0f01d0 "br"
test_vector "${PLUGIN}" "xlatb" d7 "br"
test_vector "${PLUGIN}" "xor al, 0" 3400 "br"
test_vector "${PLUGIN}" "xor al, byte [eax]" 3200 "br"
test_vector "${PLUGIN}" "xor byte [eax], al" 3000 "br"
test_vector "${PLUGIN}" "xor dword [eax], eax" 3100
test_vector "${PLUGIN}" "xor eax, dword [eax]" 3300 "br"
test_vector "${PLUGIN}" "xor [eax], eax" 3100
test_vector "${PLUGIN}" "xor eax, eax" 31c0
test_vector "${PLUGIN}" "xor eax, ebx" 31d8
test_vector "${PLUGIN}" "xor ebx, eax" 31c3
test_vector "${PLUGIN}" "xor esi, ebp" 31ee
test_vector "${PLUGIN}" "xor esp,esp" 31e4
test_vector "${PLUGIN}" "xorpd xmm0, xmmword [eax]" 660f5700 "br"
test_vector "${PLUGIN}" "xorps xmm0, xmmword [eax]" 0f5700 "br"
test_vector "${PLUGIN}" "xrstor [eax]" 0fae28 "br"
test_vector "${PLUGIN}" "xsave [eax]" 0fae20 "br"
test_vector "${PLUGIN}" "xsetbv" 0f01d1 "br"

BITS=64
test_vector "${PLUGIN}" "add r13, r15" 4d01f5 "br"
test_vector "${PLUGIN}" "add r15, rbx" 4901df "br"
test_vector "${PLUGIN}" "add rax, 44" 4883c02c
test_vector "${PLUGIN}" "add rax, r8" 4c01c0 "br"
test_vector "${PLUGIN}" "add rax, rcx" 4801c8
test_vector "${PLUGIN}" "call rbx" ffd3
test_vector "${PLUGIN}" "cmp rax, 33" 4883f821
test_vector "${PLUGIN}" "cmp rax, rbx" 4839d8
test_vector "${PLUGIN}" "cmp rbx, rax" 4839c3
test_vector "${PLUGIN}" "cmp rdx, rsi" 4839f2
test_vector "${PLUGIN}" "inc rdx" 48ffc2
test_vector "${PLUGIN}" "jmp rbx" ffe3
test_vector "${PLUGIN}" "lea rax, [rax+0]" 488d4000 # sbs: 488d00
test_vector "${PLUGIN}" "lea rax, [rax+1]" 488d4001
test_vector "${PLUGIN}" "lea rax, [rax-0]" 488d4000 # sbs: 488d00
test_vector "${PLUGIN}" "lea rax, [rax-1]" 488d40ff "br"
test_vector "${PLUGIN}" "lea rax, [rax]" 488d00
test_vector "${PLUGIN}" "lea rax,[rel -10]" 488d05f6ffffff "br"
test_vector "${PLUGIN}" "lea rax,[rel 0]" 488d0500000000 "br"
test_vector "${PLUGIN}" "lea rax,[rel 10]" 488d050a000000 "br"
test_vector "${PLUGIN}" "lea rax,[rip+0]" 488d0500000000 "br"
test_vector "${PLUGIN}" "lea rax,[rip+10]" 488d050a000000 "br"
test_vector "${PLUGIN}" "lea rax,[rip-0]" 488d0500000000 "br"
test_vector "${PLUGIN}" "lea rax,[rip-10]" 488d05f6ffffff "br"
test_vector "${PLUGIN}" "lea rax,[rip]" 488d0500000000 "br"
test_vector "${PLUGIN}" "mov [rsi], rbx" 48891e
test_vector "${PLUGIN}" "mov edx, [rbp-4]" 8b55fc
test_vector "${PLUGIN}" "mov rax, 0x1122334455667788" 48b88877665544332211
test_vector "${PLUGIN}" "mov rax, 0x112233445566778899" 00
test_vector "${PLUGIN}" "mov rax, 3" 48c7c003000000 # sbs: b803000000
test_vector "${PLUGIN}" "mov rax, 33" 48c7c021000000 # sbs: b821000000
test_vector "${PLUGIN}" "mov rax, [rax+0]" 488b4000 "br" # sbs: 488d00
test_vector "${PLUGIN}" "mov rax, [rax+1]" 488b4001 "br"
test_vector "${PLUGIN}" "mov rax, [rax-0]" 488b4000 "br" # sbs: 488b00
test_vector "${PLUGIN}" "mov rax, [rax-1]" 488b40ff "br"
test_vector "${PLUGIN}" "mov rax, [rax]" 488b00 "br"
test_vector "${PLUGIN}" "mov rax,[rel -10]" 488b05f6ffffff "br"
test_vector "${PLUGIN}" "mov rax,[rel 0]" 488b0500000000
test_vector "${PLUGIN}" "mov rax,[rel 10]" 488b050a000000 "br"
test_vector "${PLUGIN}" "mov rax,[rip+0]" 488b0500000000 "br"
test_vector "${PLUGIN}" "mov rax,[rip+10]" 488b050a000000 "br"
test_vector "${PLUGIN}" "mov rax,[rip-0]" 488b0500000000 "br"
test_vector "${PLUGIN}" "mov rax,[rip-10]" 488b05f6ffffff "br"
test_vector "${PLUGIN}" "mov rax,[rip]" 488b0500000000 "br"
test_vector "${PLUGIN}" "mov rbx, 3" 48c7c303000000 # sbs: bb03000000
test_vector "${PLUGIN}" "mov rbx, rax" 4889c3
test_vector "${PLUGIN}" "mov rcx, -0x1122334455667788" 48b9788899aabbccddee
test_vector "${PLUGIN}" "mov rcx, -0x112233445566778899" 00
test_vector "${PLUGIN}" "mov rsi, rbx" 4889de
test_vector "${PLUGIN}" "mov sil, 0" 40b600 
test_vector "${PLUGIN}" "mov dil, -5" 40b7fb
test_vector "${PLUGIN}" "mov spl, bpl" 4088ec
test_vector "${PLUGIN}" "pop rax" 58
test_vector "${PLUGIN}" "prefetcht1 [eax]" 670f1810 "br"
test_vector "${PLUGIN}" "prefetcht1 [rax]" 0f1810 "br"
test_vector "${PLUGIN}" "prefetcht1 byte [eax]" 670f1810 "br"
test_vector "${PLUGIN}" "prefetcht1 byte [rax]" 0f1810 "br"
test_vector "${PLUGIN}" "shl rdx, 5" 48c1f205 # wbs (correct: 48c1e205)
test_vector "${PLUGIN}" "sub rax, 44" 4883e82c
test_vector "${PLUGIN}" "sub rax, rbx" 4829d8
test_vector "${PLUGIN}" "test rax, rbx" 4885d8
test_vector "${PLUGIN}" "test rcx, rcx" 4885c9
test_vector "${PLUGIN}" "test rdx, rsi" 4885f2
test_vector "${PLUGIN}" "xor [rax], rax" 483100
test_vector "${PLUGIN}" "xor [rsi], rbx" 48311e
test_vector "${PLUGIN}" "xor rax, rax" 4831c0
test_vector "${PLUGIN}" "xor rdx, rdx" 4831d2
