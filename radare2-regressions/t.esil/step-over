#!/bin/sh

# GPL 3+ - Copyright (C) 2016  gerardo garcia (killabytenow)

for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh ; done

NAME='AVR: aeso on call'
FILE=malloc://1024
ARGS=
# Code compiled:
#   cli
#   ldi    r16, 8
#   out    0x3e, r16
#   ldi    r16, 0x5f
#   out    0x3d, r16
#   call   0x10
#   sleep
#   ret
CMDS="
e asm.arch=avr
e asm.bits=8
wx 0xf8 0x94 0x08 0xe0 0x0e 0xbf 0x0f 0xe5 0x0d 0xbf 0x0e 0x94 0x08 0x00 0x88 0x95 0x08 0x95
aeim 0x00000100 0xffff avr_ram
6aeso
dr pc
dr pc = 0
7aes
dr pc
"
EXPECT='0x0000000e
0x0000000e
'
run_test

NAME='x86: aeso on call'
FILE=malloc://1024
ARGS=
CMDS="
e asm.arch=x86
e asm.bits=16
wx 0xfa 0x31 0xc0 0x8e 0xd0 0xf7 0xd0 0x89 0xc4 0xe8 0x01 0x00 0xf4 0xc3
aeim 0x00000000 0xffff heap_stack
6aeso
dr ip
dr ip = 0
7aes
dr ip
"
EXPECT='0x0000000c
0x0000000c
'
run_test

