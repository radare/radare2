#!/bin/sh
for a in . .. ../.. ; do [ -e $a/tests.sh ] && . $a/tests.sh; done

HELLOWORLD=../../bins/dex/HelloWorld.dex

# Capstone seems to ignore address of relative calls in BL
NAME="Dalvik HelloWorld afl"
BROKEN=
FILE=${HELLOWORLD}
CMDS="aa; afl"
EXPECT='0x00000238    1 20           sym.LHello.method._init___V
0x0000025c    1 34           entry0
0x00000290    1 84           sym.LHello.method.foo_I_V
0x000002f4    1 20           sym.LWorld.method._init___V
0x00000318    1 68           sym.LWorld.method.foo_I_V
'
run_test

NAME="Dalvik HelloWorld string xref"
BROKEN=
FILE=${HELLOWORLD}
CMDS="aa; axt @ str.Findus"
EXPECT='data 0x260 const-string v1, str.Findus in entry0
'
run_test

NAME="Dalvik HelloWorld func xref"
BROKEN=
FILE=${HELLOWORLD}
CMDS="aa; axt @ sym.LHello.method._init___V"
EXPECT='call 0x26e invoke-direct {v0}, LHello.<init>()V ; 0x0 in entry0
'
run_test