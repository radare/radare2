mov=move register to register
mvi=move immediate to register
lxi=load register pair immediate
lda=load a from memory
sta=store a to memory
lhld=load h:l from memory
shld=store h:l to memory
ldax=load indirect through bc or de
stax=store indirect through bc or de
xchg=de and hl content
add=add register to a
adi=add immediate to a
adc=add register to a with carry
aci=add immediate to a with carry
sub=subtract register from a
sui=subtract immediate from a
sbb=subtract register from a with borrow
sbi=subtract immediate from a with borrow
inr=increment register
dcr=decrement register
inx=increment register pair
dcx=decrement register pair
dad=add register pair to hl (16 bit add)
daa=decimal adjust accumulator
ana=and register with a
ani=and immediate with a
ora=or  register with a
ori=or  immediate with a
xra=exclusive or register with a
xri=exclusiveor immediate with a
cmp=compare register with a
cpi=compare immediate with a
rlc=rotate a left
rrc=rotate a right
ral=rotate a left through carry
rar=rotate a right through carry
cma=compliment a
cmc=compliment carry flag
stc=set carry flag
jmp=unconditional jump
jccc=conditional jump
call=unconditional subroutine call
cccc=conditional subroutine call
ret=unconditional return from subroutine
rccc=conditional return from subroutine
rst=restart (call n*8)
pchl=jump to address in h:l
push=push register pair on the stack
pop=pop  register pair from the stack
xthl=swap h:l with top word on stack
sphl=set sp to content of h:l
in=read input port into a
out=write a to output port
ei=enable interrupts
di=disable interrupts
hlt=halt processor
nop=no operation
