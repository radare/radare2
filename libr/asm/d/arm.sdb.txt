adc=Add with Carry
adcs=Add with Carry, setting flags
add=Add
addg=Add with Tag
adds=Add, setting flags
adr=Form PC-relative address
adrp=Form PC-relative address to 4KB page
and=Bitwise AND
ands=Bitwise AND, setting flags
asr=Arithmetic Shift Right: an alias of ASRV
asr=Arithmetic Shift Right: an alias of SBFM
asrv=Arithmetic Shift Right Variable
at=Address Translate: an alias of SYS
autda=Authenticate Data address, using key A
autdb=Authenticate Data address, using key B
autdza=Authenticate Data address, using key A
autdzb=Authenticate Data address, using key B
autia1716=Authenticate Instruction address, using key A
autia=Authenticate Instruction address, using key A
autiasp=Authenticate Instruction address, using key A
autiaz=Authenticate Instruction address, using key A
autib1716=Authenticate Instruction address, using key B
autib=Authenticate Instruction address, using key B
autibsp=Authenticate Instruction address, using key B
autibz=Authenticate Instruction address, using key B
autiza=Authenticate Instruction address, using key A
autizb=Authenticate Instruction address, using key B
axflag=Convert floating-point condition flags from Arm to external format
b.cond=Branch conditionally
b=Branch
bfc=Bitfield Clear: an alias of BFM
bfi=Bitfield Insert: an alias of BFM
bfm=Bitfield Move
bfxil=Bitfield extract and insert at low end: an alias of BFM
bic=Bitwise Bit Clear
bics=Bitwise Bit Clear, setting flags
bl=Branch with Link
blr=Branch with Link to Register
blraa=Branch with Link to Register, with pointer authentication
blraaz=Branch with Link to Register, with pointer authentication
blrab=Branch with Link to Register, with pointer authentication
blrabz=Branch with Link to Register, with pointer authentication
br=Branch to Register
braa=Branch to Register, with pointer authentication
braaz=Branch to Register, with pointer authentication
brab=Branch to Register, with pointer authentication
brabz=Branch to Register, with pointer authentication
brk=Breakpoint instruction
bti=Branch Target Identification
cas=Compare and Swap word or doubleword in memory
casa=Compare and Swap word or doubleword in memory
casab=Compare and Swap byte in memory
casah=Compare and Swap halfword in memory
casal=Compare and Swap word or doubleword in memory
casalb=Compare and Swap byte in memory
casalh=Compare and Swap halfword in memory
casb=Compare and Swap byte in memory
cash=Compare and Swap halfword in memory
casl=Compare and Swap word or doubleword in memory
caslb=Compare and Swap byte in memory
caslh=Compare and Swap halfword in memory
casp=Compare and Swap Pair of words or doublewords in memory
caspa=Compare and Swap Pair of words or doublewords in memory
caspal=Compare and Swap Pair of words or doublewords in memory
caspl=Compare and Swap Pair of words or doublewords in memory
cbnz=Compare and Branch on Nonzero
cbz=Compare and Branch on Zero
ccmn=Conditional Compare Negative
ccmp=Conditional Compare
cfinv=Invert Carry Flag
cfp=Control Flow Prediction Restriction by Context: an alias of SYS
cinc=Conditional Increment: an alias of CSINC
cinv=Conditional Invert: an alias of CSINV
clrex=Clear Exclusive
cls=Count Leading Sign bits
clz=Count Leading Zeros
cmn=Compare Negative: an alias of ADDS
cmp=Compare: an alias of SUBS
cmpp=Compare with Tag: an alias of SUBPS
cneg=Conditional Negate: an alias of CSNEG
cpp=Cache Prefetch Prediction Restriction by Context: an alias of SYS
crc32b=CRC32 checksum
crc32cb=CRC32C checksum
crc32ch=CRC32C checksum
crc32cw=CRC32C checksum
crc32cx=CRC32C checksum
crc32h=CRC32 checksum
crc32w=CRC32 checksum
crc32x=CRC32 checksum
csdb=Consumption of Speculative Data Barrier
csel=Conditional Select
cset=Conditional Set: an alias of CSINC
csetm=Conditional Set Mask: an alias of CSINV
csinc=Conditional Select Increment
csinv=Conditional Select Invert
csneg=Conditional Select Negation
dc=Data Cache operation: an alias of SYS
dcps1=Debug Change PE State to EL1.
dcps2=Debug Change PE State to EL2.
dcps3=Debug Change PE State to EL3
dgh=Data Gathering Hint
dmb=Data Memory Barrier
drps=Debug restore process state
dsb=Data Synchronization Barrier
dvp=Data Value Prediction Restriction by Context: an alias of SYS
eon=Bitwise Exclusive OR NOT
eor=Bitwise Exclusive OR
eret=Exception Return
eretaa=Exception Return, with pointer authentication
eretab=Exception Return, with pointer authentication
esb=Error Synchronization Barrier
extr=Extract register
gmi=Tag Mask Insert
hint=Hint instruction
hlt=Halt instruction
hvc=Hypervisor Call
ic=Instruction Cache operation: an alias of SYS
irg=Insert Random Tag
isb=Instruction Synchronization Barrier
ld64b=Single-copy Atomic 64-byte Load
ldadd=Atomic add on word or doubleword in memory
ldadda=Atomic add on word or doubleword in memory
ldaddab=Atomic add on byte in memory
ldaddah=Atomic add on halfword in memory
ldaddal=Atomic add on word or doubleword in memory
ldaddalb=Atomic add on byte in memory
ldaddalh=Atomic add on halfword in memory
ldaddb=Atomic add on byte in memory
ldaddh=Atomic add on halfword in memory
ldaddl=Atomic add on word or doubleword in memory
ldaddlb=Atomic add on byte in memory
ldaddlh=Atomic add on halfword in memory
ldapr=Load-Acquire RCpc Register
ldaprb=Load-Acquire RCpc Register Byte
ldaprh=Load-Acquire RCpc Register Halfword
ldapur=Load-Acquire RCpc Register (unscaled)
ldapurb=Load-Acquire RCpc Register Byte (unscaled)
ldapurh=Load-Acquire RCpc Register Halfword (unscaled)
ldapursb=Load-Acquire RCpc Register Signed Byte (unscaled)
ldapursh=Load-Acquire RCpc Register Signed Halfword (unscaled)
ldapursw=Load-Acquire RCpc Register Signed Word (unscaled)
ldar=Load-Acquire Register
ldarb=Load-Acquire Register Byte
ldarh=Load-Acquire Register Halfword
ldaxp=Load-Acquire Exclusive Pair of Registers
ldaxr=Load-Acquire Exclusive Register
ldaxrb=Load-Acquire Exclusive Register Byte
ldaxrh=Load-Acquire Exclusive Register Halfword
ldclr=Atomic bit clear on word or doubleword in memory
ldclra=Atomic bit clear on word or doubleword in memory
ldclrab=Atomic bit clear on byte in memory
ldclrah=Atomic bit clear on halfword in memory
ldclral=Atomic bit clear on word or doubleword in memory
ldclralb=Atomic bit clear on byte in memory
ldclralh=Atomic bit clear on halfword in memory
ldclrb=Atomic bit clear on byte in memory
ldclrh=Atomic bit clear on halfword in memory
ldclrl=Atomic bit clear on word or doubleword in memory
ldclrlb=Atomic bit clear on byte in memory
ldclrlh=Atomic bit clear on halfword in memory
ldeor=Atomic exclusive OR on word or doubleword in memory
ldeora=Atomic exclusive OR on word or doubleword in memory
ldeorab=Atomic exclusive OR on byte in memory
ldeorah=Atomic exclusive OR on halfword in memory
ldeoral=Atomic exclusive OR on word or doubleword in memory
ldeoralb=Atomic exclusive OR on byte in memory
ldeoralh=Atomic exclusive OR on halfword in memory
ldeorb=Atomic exclusive OR on byte in memory
ldeorh=Atomic exclusive OR on halfword in memory
ldeorl=Atomic exclusive OR on word or doubleword in memory
ldeorlb=Atomic exclusive OR on byte in memory
ldeorlh=Atomic exclusive OR on halfword in memory
ldg=Load Allocation Tag
ldgm=Load Tag Multiple
ldlar=Load LOAcquire Register
ldlarb=Load LOAcquire Register Byte
ldlarh=Load LOAcquire Register Halfword
ldnp=Load Pair of Registers, with non-temporal hint
ldp=Load Pair of Registers
ldpsw=Load Pair of Registers Signed Word
ldr=Load Register
ldraa=Load Register, with pointer authentication
ldrab=Load Register, with pointer authentication
ldrb=Load Register Byte
ldrh=Load Register Halfword
ldrsb=Load Register Signed Byte
ldrsh=Load Register Signed Halfword
ldrsw=Load Register Signed Word
ldset=Atomic bit set on word or doubleword in memory
ldseta=Atomic bit set on word or doubleword in memory
ldsetab=Atomic bit set on byte in memory
ldsetah=Atomic bit set on halfword in memory
ldsetal=Atomic bit set on word or doubleword in memory
ldsetalb=Atomic bit set on byte in memory
ldsetalh=Atomic bit set on halfword in memory
ldsetb=Atomic bit set on byte in memory
ldseth=Atomic bit set on halfword in memory
ldsetl=Atomic bit set on word or doubleword in memory
ldsetlb=Atomic bit set on byte in memory
ldsetlh=Atomic bit set on halfword in memory
ldsmax=Atomic signed maximum on word or doubleword in memory
ldsmaxa=Atomic signed maximum on word or doubleword in memory
ldsmaxab=Atomic signed maximum on byte in memory
ldsmaxah=Atomic signed maximum on halfword in memory
ldsmaxal=Atomic signed maximum on word or doubleword in memory
ldsmaxalb=Atomic signed maximum on byte in memory
ldsmaxalh=Atomic signed maximum on halfword in memory
ldsmaxb=Atomic signed maximum on byte in memory
ldsmaxh=Atomic signed maximum on halfword in memory
ldsmaxl=Atomic signed maximum on word or doubleword in memory
ldsmaxlb=Atomic signed maximum on byte in memory
ldsmaxlh=Atomic signed maximum on halfword in memory
ldsmin=Atomic signed minimum on word or doubleword in memory
ldsmina=Atomic signed minimum on word or doubleword in memory
ldsminab=Atomic signed minimum on byte in memory
ldsminah=Atomic signed minimum on halfword in memory
ldsminal=Atomic signed minimum on word or doubleword in memory
ldsminalb=Atomic signed minimum on byte in memory
ldsminalh=Atomic signed minimum on halfword in memory
ldsminb=Atomic signed minimum on byte in memory
ldsminh=Atomic signed minimum on halfword in memory
ldsminl=Atomic signed minimum on word or doubleword in memory
ldsminlb=Atomic signed minimum on byte in memory
ldsminlh=Atomic signed minimum on halfword in memory
ldtr=Load Register (unprivileged)
ldtrb=Load Register Byte (unprivileged)
ldtrh=Load Register Halfword (unprivileged)
ldtrsb=Load Register Signed Byte (unprivileged)
ldtrsh=Load Register Signed Halfword (unprivileged)
ldtrsw=Load Register Signed Word (unprivileged)
ldumax=Atomic unsigned maximum on word or doubleword in memory
ldumaxa=Atomic unsigned maximum on word or doubleword in memory
ldumaxab=Atomic unsigned maximum on byte in memory
ldumaxah=Atomic unsigned maximum on halfword in memory
ldumaxal=Atomic unsigned maximum on word or doubleword in memory
ldumaxalb=Atomic unsigned maximum on byte in memory
ldumaxalh=Atomic unsigned maximum on halfword in memory
ldumaxb=Atomic unsigned maximum on byte in memory
ldumaxh=Atomic unsigned maximum on halfword in memory
ldumaxl=Atomic unsigned maximum on word or doubleword in memory
ldumaxlb=Atomic unsigned maximum on byte in memory
ldumaxlh=Atomic unsigned maximum on halfword in memory
ldumin=Atomic unsigned minimum on word or doubleword in memory
ldumina=Atomic unsigned minimum on word or doubleword in memory
lduminab=Atomic unsigned minimum on byte in memory
lduminah=Atomic unsigned minimum on halfword in memory
lduminal=Atomic unsigned minimum on word or doubleword in memory
lduminalb=Atomic unsigned minimum on byte in memory
lduminalh=Atomic unsigned minimum on halfword in memory
lduminb=Atomic unsigned minimum on byte in memory
lduminh=Atomic unsigned minimum on halfword in memory
lduminl=Atomic unsigned minimum on word or doubleword in memory
lduminlb=Atomic unsigned minimum on byte in memory
lduminlh=Atomic unsigned minimum on halfword in memory
ldur=Load Register (unscaled)
ldurb=Load Register Byte (unscaled)
ldurh=Load Register Halfword (unscaled)
ldursb=Load Register Signed Byte (unscaled)
ldursh=Load Register Signed Halfword (unscaled)
ldursw=Load Register Signed Word (unscaled)
ldxp=Load Exclusive Pair of Registers
ldxr=Load Exclusive Register
ldxrb=Load Exclusive Register Byte
ldxrh=Load Exclusive Register Halfword
lsl=Logical Shift Left: an alias of LSLV
lsl=Logical Shift Left: an alias of UBFM
lslv=Logical Shift Left Variable
lsr=Logical Shift Right: an alias of LSRV
lsr=Logical Shift Right: an alias of UBFM
lsrv=Logical Shift Right Variable
madd=Multiply-Add
mneg=Multiply-Negate: an alias of MSUB
mov=Move: an alias of ORR
movk=Move wide with keep
movn=Move wide with NOT
movz=Move wide with zero
mrs=Move System Register
msr=Move general-purpose register to System Register
msr=Move immediate value to Special Register
msub=Multiply-Subtract
mul=Multiply: an alias of MADD
mvn=Bitwise NOT: an alias of ORN
neg=Negate: an alias of SUB
negs=Negate, setting flags: an alias of SUBS
ngc=Negate with Carry: an alias of SBC
ngcs=Negate with Carry, setting flags: an alias of SBCS
nop=No Operation
orn=Bitwise OR NOT
orr=Bitwise OR
pacda=Pointer Authentication Code for Data address, using key A
pacdb=Pointer Authentication Code for Data address, using key B
pacdza=Pointer Authentication Code for Data address, using key A
pacdzb=Pointer Authentication Code for Data address, using key B
pacga=Pointer Authentication Code, using Generic key
pacia1716=Pointer Authentication Code for Instruction address, using key A
pacia=Pointer Authentication Code for Instruction address, using key A
paciasp=Pointer Authentication Code for Instruction address, using key A
paciaz=Pointer Authentication Code for Instruction address, using key A
pacib1716=Pointer Authentication Code for Instruction address, using key B
pacib=Pointer Authentication Code for Instruction address, using key B
pacibsp=Pointer Authentication Code for Instruction address, using key B
pacibz=Pointer Authentication Code for Instruction address, using key B
paciza=Pointer Authentication Code for Instruction address, using key A
pacizb=Pointer Authentication Code for Instruction address, using key B
prfm (literal)=Prefetch Memory (literal)
prfm=Prefetch Memory
prfum=Prefetch Memory (unscaled offset)
psb csync=Profiling Synchronization Barrier
pssbb=Physical Speculative Store Bypass Barrier: an alias of DSB
rbit=Reverse Bits
ret=Return from subroutine
retaa=Return from subroutine, with pointer authentication
retab=Return from subroutine, with pointer authentication
rev16=Reverse bytes in 16-bit halfwords
rev32=Reverse bytes in 32-bit words
rev64=Reverse Bytes: an alias of REV
rev=Reverse Bytes
rmif=Rotate, Mask Insert Flags
ror=Rotate Right: an alias of RORV
ror=Rotate right: an alias of EXTR
rorv=Rotate Right Variable
sb=Speculation Barrier
sbc=Subtract with Carry
sbcs=Subtract with Carry, setting flags
sbfiz=Signed Bitfield Insert in Zero: an alias of SBFM
sbfm=Signed Bitfield Move
sbfx=Signed Bitfield Extract: an alias of SBFM
sdiv=Signed Divide
setf16=Evaluation of 8 or 16 bit flag values
setf8=Evaluation of 8 or 16 bit flag values
sev=Send Event
sevl=Send Event Local
smaddl=Signed Multiply-Add Long
smc=Secure Monitor Call
smnegl=Signed Multiply-Negate Long: an alias of SMSUBL
smsubl=Signed Multiply-Subtract Long
smulh=Signed Multiply High
smull=Signed Multiply Long: an alias of SMADDL
ssbb=Speculative Store Bypass Barrier: an alias of DSB
st2g=Store Allocation Tags
st64b=Single-copy Atomic 64-byte Store without Return
st64bv0=Single-copy Atomic 64-byte EL0 Store with Return
st64bv=Single-copy Atomic 64-byte Store with Return
stadd=Atomic add on word or doubleword in memory, without return: an alias of LDADD, LDADDA, LDADDAL, LDADDL
staddb=Atomic add on byte in memory, without return: an alias of LDADDB, LDADDAB, LDADDALB, LDADDLB
staddh=Atomic add on halfword in memory, without return: an alias of LDADDH, LDADDAH, LDADDALH, LDADDLH
staddl=Atomic add on word or doubleword in memory, without return: an alias of LDADD, LDADDA, LDADDAL, LDADDL
staddlb=Atomic add on byte in memory, without return: an alias of LDADDB, LDADDAB, LDADDALB, LDADDLB
staddlh=Atomic add on halfword in memory, without return: an alias of LDADDH, LDADDAH, LDADDALH, LDADDLH
stclr=Atomic bit clear on word or doubleword in memory, without return: an alias of LDCLR, LDCLRA, LDCLRAL, LDCLRL
stclrb=Atomic bit clear on byte in memory, without return: an alias of LDCLRB, LDCLRAB, LDCLRALB, LDCLRLB
stclrh=Atomic bit clear on halfword in memory, without return: an alias of LDCLRH, LDCLRAH, LDCLRALH, LDCLRLH
stclrl=Atomic bit clear on word or doubleword in memory, without return: an alias of LDCLR, LDCLRA, LDCLRAL, LDCLRL
stclrlb=Atomic bit clear on byte in memory, without return: an alias of LDCLRB, LDCLRAB, LDCLRALB, LDCLRLB
stclrlh=Atomic bit clear on halfword in memory, without return: an alias of LDCLRH, LDCLRAH, LDCLRALH, LDCLRLH
steor=Atomic exclusive OR on word or doubleword in memory, without return: an alias of LDEOR, LDEORA, LDEORAL, LDEORL
steorb=Atomic exclusive OR on byte in memory, without return: an alias of LDEORB, LDEORAB, LDEORALB, LDEORLB
steorh=Atomic exclusive OR on halfword in memory, without return: an alias of LDEORH, LDEORAH, LDEORALH, LDEORLH
steorl=Atomic exclusive OR on word or doubleword in memory, without return: an alias of LDEOR, LDEORA, LDEORAL, LDEORL
steorlb=Atomic exclusive OR on byte in memory, without return: an alias of LDEORB, LDEORAB, LDEORALB, LDEORLB
steorlh=Atomic exclusive OR on halfword in memory, without return: an alias of LDEORH, LDEORAH, LDEORALH, LDEORLH
stg=Store Allocation Tag
stgm=Store Tag Multiple
stgp=Store Allocation Tag and Pair of registers
stllr=Store LORelease Register
stllrb=Store LORelease Register Byte
stllrh=Store LORelease Register Halfword
stlr=Store-Release Register
stlrb=Store-Release Register Byte
stlrh=Store-Release Register Halfword
stlur=Store-Release Register (unscaled)
stlurb=Store-Release Register Byte (unscaled)
stlurh=Store-Release Register Halfword (unscaled)
stlxp=Store-Release Exclusive Pair of registers
stlxr=Store-Release Exclusive Register
stlxrb=Store-Release Exclusive Register Byte
stlxrh=Store-Release Exclusive Register Halfword
stnp=Store Pair of Registers, with non-temporal hint
stp=Store Pair of Registers
str=Store Register
strb=Store Register Byte
strh=Store Register Halfword
stset=Atomic bit set on word or doubleword in memory, without return: an alias of LDSET, LDSETA, LDSETAL, LDSETL
stsetb=Atomic bit set on byte in memory, without return: an alias of LDSETB, LDSETAB, LDSETALB, LDSETLB
stseth=Atomic bit set on halfword in memory, without return: an alias of LDSETH, LDSETAH, LDSETALH, LDSETLH
stsetl=Atomic bit set on word or doubleword in memory, without return: an alias of LDSET, LDSETA, LDSETAL, LDSETL
stsetlb=Atomic bit set on byte in memory, without return: an alias of LDSETB, LDSETAB, LDSETALB, LDSETLB
stsetlh=Atomic bit set on halfword in memory, without return: an alias of LDSETH, LDSETAH, LDSETALH, LDSETLH
stsmax=Atomic signed maximum on word or doubleword in memory, without return: an alias of LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL
stsmaxb=Atomic signed maximum on byte in memory, without return: an alias of LDSMAXB, LDSMAXAB, LDSMAXALB, LDSMAXLB
stsmaxh=Atomic signed maximum on halfword in memory, without return: an alias of LDSMAXH, LDSMAXAH, LDSMAXALH, LDSMAXLH
stsmaxl=Atomic signed maximum on word or doubleword in memory, without return: an alias of LDSMAX, LDSMAXA, LDSMAXAL, LDSMAXL
stsmaxlb=Atomic signed maximum on byte in memory, without return: an alias of LDSMAXB, LDSMAXAB, LDSMAXALB, LDSMAXLB
stsmaxlh=Atomic signed maximum on halfword in memory, without return: an alias of LDSMAXH, LDSMAXAH, LDSMAXALH, LDSMAXLH
stsmin=Atomic signed minimum on word or doubleword in memory, without return: an alias of LDSMIN, LDSMINA, LDSMINAL, LDSMINL
stsminb=Atomic signed minimum on byte in memory, without return: an alias of LDSMINB, LDSMINAB, LDSMINALB, LDSMINLB
stsminh=Atomic signed minimum on halfword in memory, without return: an alias of LDSMINH, LDSMINAH, LDSMINALH, LDSMINLH
stsminl=Atomic signed minimum on word or doubleword in memory, without return: an alias of LDSMIN, LDSMINA, LDSMINAL, LDSMINL
stsminlb=Atomic signed minimum on byte in memory, without return: an alias of LDSMINB, LDSMINAB, LDSMINALB, LDSMINLB
stsminlh=Atomic signed minimum on halfword in memory, without return: an alias of LDSMINH, LDSMINAH, LDSMINALH, LDSMINLH
sttr=Store Register (unprivileged)
sttrb=Store Register Byte (unprivileged)
sttrh=Store Register Halfword (unprivileged)
stumax=Atomic unsigned maximum on word or doubleword in memory, without return: an alias of LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL
stumaxb=Atomic unsigned maximum on byte in memory, without return: an alias of LDUMAXB, LDUMAXAB, LDUMAXALB, LDUMAXLB
stumaxh=Atomic unsigned maximum on halfword in memory, without return: an alias of LDUMAXH, LDUMAXAH, LDUMAXALH, LDUMAXLH
stumaxl=Atomic unsigned maximum on word or doubleword in memory, without return: an alias of LDUMAX, LDUMAXA, LDUMAXAL, LDUMAXL
stumaxlb=Atomic unsigned maximum on byte in memory, without return: an alias of LDUMAXB, LDUMAXAB, LDUMAXALB, LDUMAXLB
stumaxlh=Atomic unsigned maximum on halfword in memory, without return: an alias of LDUMAXH, LDUMAXAH, LDUMAXALH, LDUMAXLH
stumin=Atomic unsigned minimum on word or doubleword in memory, without return: an alias of LDUMIN, LDUMINA, LDUMINAL, LDUMINL
stuminb=Atomic unsigned minimum on byte in memory, without return: an alias of LDUMINB, LDUMINAB, LDUMINALB, LDUMINLB
stuminh=Atomic unsigned minimum on halfword in memory, without return: an alias of LDUMINH, LDUMINAH, LDUMINALH, LDUMINLH
stuminl=Atomic unsigned minimum on word or doubleword in memory, without return: an alias of LDUMIN, LDUMINA, LDUMINAL, LDUMINL
stuminlb=Atomic unsigned minimum on byte in memory, without return: an alias of LDUMINB, LDUMINAB, LDUMINALB, LDUMINLB
stuminlh=Atomic unsigned minimum on halfword in memory, without return: an alias of LDUMINH, LDUMINAH, LDUMINALH, LDUMINLH
stur=Store Register (unscaled)
sturb=Store Register Byte (unscaled)
sturh=Store Register Halfword (unscaled)
stxp=Store Exclusive Pair of registers
stxr=Store Exclusive Register
stxrb=Store Exclusive Register Byte
stxrh=Store Exclusive Register Halfword
stz2g=Store Allocation Tags, Zeroing
stzg=Store Allocation Tag, Zeroing
stzgm=Store Tag and Zero Multiple
sub=Subtract
subg=Subtract with Tag
subp=Subtract Pointer
subps=Subtract Pointer, setting Flags
subs=Subtract, setting flags
svc=Supervisor Call
swp=Swap word or doubleword in memory
swpa=Swap word or doubleword in memory
swpab=Swap byte in memory
swpah=Swap halfword in memory
swpal=Swap word or doubleword in memory
swpalb=Swap byte in memory
swpalh=Swap halfword in memory
swpb=Swap byte in memory
swph=Swap halfword in memory
swpl=Swap word or doubleword in memory
swplb=Swap byte in memory
swplh=Swap halfword in memory
sxtb=Signed Extend Byte: an alias of SBFM
sxth=Sign Extend Halfword: an alias of SBFM
sxtw=Sign Extend Word: an alias of SBFM
sys=System instruction
sysl=System instruction with result
tbnz=Test bit and Branch if Nonzero
tbz=Test bit and Branch if Zero
tlbi=TLB Invalidate operation: an alias of SYS
tsb csync=Trace Synchronization Barrier
tst=Test bits: an alias of ANDS
tst=Test: an alias of ANDS
ubfiz=Unsigned Bitfield Insert in Zero: an alias of UBFM
ubfm=Unsigned Bitfield Move
ubfx=Unsigned Bitfield Extract: an alias of UBFM
udf=Permanently Undefined
udiv=Unsigned Divide
umaddl=Unsigned Multiply-Add Long
umnegl=Unsigned Multiply-Negate Long: an alias of UMSUBL
umsubl=Unsigned Multiply-Subtract Long
umulh=Unsigned Multiply High
umull=Unsigned Multiply Long: an alias of UMADDL
uxtb=Unsigned Extend Byte: an alias of UBFM
uxth=Unsigned Extend Halfword: an alias of UBFM
wfe=Wait For Event
wfet=Wait For Event with Timeout
wfi=Wait For Interrupt
wfit=Wait For Interrupt with Timeout
xaflag=Convert floating-point condition flags from external format to Arm format
xpacd=Strip Pointer Authentication Code
xpaci=Strip Pointer Authentication Code
xpaclri=Strip Pointer Authentication Code
yield=YIELD
